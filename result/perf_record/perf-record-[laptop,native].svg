<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2117.00"> </text><svg id="frames" x="10" width="1180" total_samples="54771"><g><title>cpuUsage.sh (9 samples, 0.02%)</title><rect x="0.0128%" y="2069" width="0.0164%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="9"/><text x="0.2628%" y="2079.50"></text></g><g><title>compact_zone (8 samples, 0.01%)</title><rect x="0.0420%" y="1989" width="0.0146%" height="15" fill="rgb(217,0,24)" fg:x="23" fg:w="8"/><text x="0.2920%" y="1999.50"></text></g><g><title>isolate_migratepages_block (8 samples, 0.01%)</title><rect x="0.0420%" y="1973" width="0.0146%" height="15" fill="rgb(221,193,54)" fg:x="23" fg:w="8"/><text x="0.2920%" y="1983.50"></text></g><g><title>kcompactd (9 samples, 0.02%)</title><rect x="0.0420%" y="2021" width="0.0164%" height="15" fill="rgb(248,212,6)" fg:x="23" fg:w="9"/><text x="0.2920%" y="2031.50"></text></g><g><title>kcompactd_do_work (9 samples, 0.02%)</title><rect x="0.0420%" y="2005" width="0.0164%" height="15" fill="rgb(208,68,35)" fg:x="23" fg:w="9"/><text x="0.2920%" y="2015.50"></text></g><g><title>page_referenced (24 samples, 0.04%)</title><rect x="0.0968%" y="1925" width="0.0438%" height="15" fill="rgb(232,128,0)" fg:x="53" fg:w="24"/><text x="0.3468%" y="1935.50"></text></g><g><title>total_mapcount (21 samples, 0.04%)</title><rect x="0.1022%" y="1909" width="0.0383%" height="15" fill="rgb(207,160,47)" fg:x="56" fg:w="21"/><text x="0.3522%" y="1919.50"></text></g><g><title>shrink_lruvec (46 samples, 0.08%)</title><rect x="0.0584%" y="1973" width="0.0840%" height="15" fill="rgb(228,23,34)" fg:x="32" fg:w="46"/><text x="0.3084%" y="1983.50"></text></g><g><title>shrink_inactive_list (45 samples, 0.08%)</title><rect x="0.0603%" y="1957" width="0.0822%" height="15" fill="rgb(218,30,26)" fg:x="33" fg:w="45"/><text x="0.3103%" y="1967.50"></text></g><g><title>shrink_page_list (41 samples, 0.07%)</title><rect x="0.0676%" y="1941" width="0.0749%" height="15" fill="rgb(220,122,19)" fg:x="37" fg:w="41"/><text x="0.3176%" y="1951.50"></text></g><g><title>kswapd (51 samples, 0.09%)</title><rect x="0.0584%" y="2021" width="0.0931%" height="15" fill="rgb(250,228,42)" fg:x="32" fg:w="51"/><text x="0.3084%" y="2031.50"></text></g><g><title>balance_pgdat (51 samples, 0.09%)</title><rect x="0.0584%" y="2005" width="0.0931%" height="15" fill="rgb(240,193,28)" fg:x="32" fg:w="51"/><text x="0.3084%" y="2015.50"></text></g><g><title>shrink_node (51 samples, 0.09%)</title><rect x="0.0584%" y="1989" width="0.0931%" height="15" fill="rgb(216,20,37)" fg:x="32" fg:w="51"/><text x="0.3084%" y="1999.50"></text></g><g><title>__lock_text_start (6 samples, 0.01%)</title><rect x="0.1753%" y="1941" width="0.0110%" height="15" fill="rgb(206,188,39)" fg:x="96" fg:w="6"/><text x="0.4253%" y="1951.50"></text></g><g><title>__lock_text_start (18 samples, 0.03%)</title><rect x="0.2154%" y="1909" width="0.0329%" height="15" fill="rgb(217,207,13)" fg:x="118" fg:w="18"/><text x="0.4654%" y="1919.50"></text></g><g><title>ext4_end_io_rsv_work (56 samples, 0.10%)</title><rect x="0.1588%" y="1989" width="0.1022%" height="15" fill="rgb(231,73,38)" fg:x="87" fg:w="56"/><text x="0.4088%" y="1999.50"></text></g><g><title>ext4_release_io_end (54 samples, 0.10%)</title><rect x="0.1625%" y="1973" width="0.0986%" height="15" fill="rgb(225,20,46)" fg:x="89" fg:w="54"/><text x="0.4125%" y="1983.50"></text></g><g><title>ext4_finish_bio (54 samples, 0.10%)</title><rect x="0.1625%" y="1957" width="0.0986%" height="15" fill="rgb(210,31,41)" fg:x="89" fg:w="54"/><text x="0.4125%" y="1967.50"></text></g><g><title>end_page_writeback (39 samples, 0.07%)</title><rect x="0.1899%" y="1941" width="0.0712%" height="15" fill="rgb(221,200,47)" fg:x="104" fg:w="39"/><text x="0.4399%" y="1951.50"></text></g><g><title>test_clear_page_writeback (34 samples, 0.06%)</title><rect x="0.1990%" y="1925" width="0.0621%" height="15" fill="rgb(226,26,5)" fg:x="109" fg:w="34"/><text x="0.4490%" y="1935.50"></text></g><g><title>blk_flush_plug_list (10 samples, 0.02%)</title><rect x="0.2684%" y="1813" width="0.0183%" height="15" fill="rgb(249,33,26)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1823.50"></text></g><g><title>blk_mq_flush_plug_list (10 samples, 0.02%)</title><rect x="0.2684%" y="1797" width="0.0183%" height="15" fill="rgb(235,183,28)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1807.50"></text></g><g><title>blk_mq_sched_insert_requests (10 samples, 0.02%)</title><rect x="0.2684%" y="1781" width="0.0183%" height="15" fill="rgb(221,5,38)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1791.50"></text></g><g><title>blk_mq_try_issue_list_directly (10 samples, 0.02%)</title><rect x="0.2684%" y="1765" width="0.0183%" height="15" fill="rgb(247,18,42)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1775.50"></text></g><g><title>blk_mq_request_issue_directly (10 samples, 0.02%)</title><rect x="0.2684%" y="1749" width="0.0183%" height="15" fill="rgb(241,131,45)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1759.50"></text></g><g><title>__blk_mq_try_issue_directly (10 samples, 0.02%)</title><rect x="0.2684%" y="1733" width="0.0183%" height="15" fill="rgb(249,31,29)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1743.50"></text></g><g><title>scsi_queue_rq (10 samples, 0.02%)</title><rect x="0.2684%" y="1717" width="0.0183%" height="15" fill="rgb(225,111,53)" fg:x="147" fg:w="10"/><text x="0.5184%" y="1727.50"></text></g><g><title>ext4_io_submit (29 samples, 0.05%)</title><rect x="0.2647%" y="1877" width="0.0529%" height="15" fill="rgb(238,160,17)" fg:x="145" fg:w="29"/><text x="0.5147%" y="1887.50"></text></g><g><title>submit_bio (29 samples, 0.05%)</title><rect x="0.2647%" y="1861" width="0.0529%" height="15" fill="rgb(214,148,48)" fg:x="145" fg:w="29"/><text x="0.5147%" y="1871.50"></text></g><g><title>submit_bio_noacct (28 samples, 0.05%)</title><rect x="0.2666%" y="1845" width="0.0511%" height="15" fill="rgb(232,36,49)" fg:x="146" fg:w="28"/><text x="0.5166%" y="1855.50"></text></g><g><title>blk_mq_submit_bio (28 samples, 0.05%)</title><rect x="0.2666%" y="1829" width="0.0511%" height="15" fill="rgb(209,103,24)" fg:x="146" fg:w="28"/><text x="0.5166%" y="1839.50"></text></g><g><title>blk_mq_rq_ctx_init.isra.0 (17 samples, 0.03%)</title><rect x="0.2866%" y="1813" width="0.0310%" height="15" fill="rgb(229,88,8)" fg:x="157" fg:w="17"/><text x="0.5366%" y="1823.50"></text></g><g><title>clear_page_dirty_for_io (16 samples, 0.03%)</title><rect x="0.3378%" y="1845" width="0.0292%" height="15" fill="rgb(213,181,19)" fg:x="185" fg:w="16"/><text x="0.5878%" y="1855.50"></text></g><g><title>__lock_text_start (11 samples, 0.02%)</title><rect x="0.3944%" y="1813" width="0.0201%" height="15" fill="rgb(254,191,54)" fg:x="216" fg:w="11"/><text x="0.6444%" y="1823.50"></text></g><g><title>__test_set_page_writeback (22 samples, 0.04%)</title><rect x="0.3816%" y="1829" width="0.0402%" height="15" fill="rgb(241,83,37)" fg:x="209" fg:w="22"/><text x="0.6316%" y="1839.50"></text></g><g><title>mpage_submit_page (53 samples, 0.10%)</title><rect x="0.3323%" y="1861" width="0.0968%" height="15" fill="rgb(233,36,39)" fg:x="182" fg:w="53"/><text x="0.5823%" y="1871.50"></text></g><g><title>ext4_bio_write_page (34 samples, 0.06%)</title><rect x="0.3670%" y="1845" width="0.0621%" height="15" fill="rgb(226,3,54)" fg:x="201" fg:w="34"/><text x="0.6170%" y="1855.50"></text></g><g><title>mpage_map_and_submit_buffers (62 samples, 0.11%)</title><rect x="0.3213%" y="1877" width="0.1132%" height="15" fill="rgb(245,192,40)" fg:x="176" fg:w="62"/><text x="0.5713%" y="1887.50"></text></g><g><title>mpage_process_page_bufs (6 samples, 0.01%)</title><rect x="0.4437%" y="1861" width="0.0110%" height="15" fill="rgb(238,167,29)" fg:x="243" fg:w="6"/><text x="0.6937%" y="1871.50"></text></g><g><title>process_one_work (169 samples, 0.31%)</title><rect x="0.1570%" y="2005" width="0.3086%" height="15" fill="rgb(232,182,51)" fg:x="86" fg:w="169"/><text x="0.4070%" y="2015.50"></text></g><g><title>wb_workfn (112 samples, 0.20%)</title><rect x="0.2611%" y="1989" width="0.2045%" height="15" fill="rgb(231,60,39)" fg:x="143" fg:w="112"/><text x="0.5111%" y="1999.50"></text></g><g><title>wb_writeback (111 samples, 0.20%)</title><rect x="0.2629%" y="1973" width="0.2027%" height="15" fill="rgb(208,69,12)" fg:x="144" fg:w="111"/><text x="0.5129%" y="1983.50"></text></g><g><title>__writeback_inodes_wb (111 samples, 0.20%)</title><rect x="0.2629%" y="1957" width="0.2027%" height="15" fill="rgb(235,93,37)" fg:x="144" fg:w="111"/><text x="0.5129%" y="1967.50"></text></g><g><title>writeback_sb_inodes (111 samples, 0.20%)</title><rect x="0.2629%" y="1941" width="0.2027%" height="15" fill="rgb(213,116,39)" fg:x="144" fg:w="111"/><text x="0.5129%" y="1951.50"></text></g><g><title>__writeback_single_inode (111 samples, 0.20%)</title><rect x="0.2629%" y="1925" width="0.2027%" height="15" fill="rgb(222,207,29)" fg:x="144" fg:w="111"/><text x="0.5129%" y="1935.50"></text></g><g><title>do_writepages (111 samples, 0.20%)</title><rect x="0.2629%" y="1909" width="0.2027%" height="15" fill="rgb(206,96,30)" fg:x="144" fg:w="111"/><text x="0.5129%" y="1919.50"></text></g><g><title>ext4_writepages (111 samples, 0.20%)</title><rect x="0.2629%" y="1893" width="0.2027%" height="15" fill="rgb(218,138,4)" fg:x="144" fg:w="111"/><text x="0.5129%" y="1903.50"></text></g><g><title>mpage_prepare_extent_to_map (17 samples, 0.03%)</title><rect x="0.4345%" y="1877" width="0.0310%" height="15" fill="rgb(250,191,14)" fg:x="238" fg:w="17"/><text x="0.6845%" y="1887.50"></text></g><g><title>ret_from_fork (233 samples, 0.43%)</title><rect x="0.0420%" y="2053" width="0.4254%" height="15" fill="rgb(239,60,40)" fg:x="23" fg:w="233"/><text x="0.2920%" y="2063.50"></text></g><g><title>kthread (233 samples, 0.43%)</title><rect x="0.0420%" y="2037" width="0.4254%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="233"/><text x="0.2920%" y="2047.50"></text></g><g><title>worker_thread (171 samples, 0.31%)</title><rect x="0.1552%" y="2021" width="0.3122%" height="15" fill="rgb(225,35,8)" fg:x="85" fg:w="171"/><text x="0.4052%" y="2031.50"></text></g><g><title>asm_sysvec_hyperv_callback (44 samples, 0.08%)</title><rect x="36.7183%" y="1973" width="0.0803%" height="15" fill="rgb(250,213,24)" fg:x="20111" fg:w="44"/><text x="36.9683%" y="1983.50"></text></g><g><title>sysvec_hyperv_callback (44 samples, 0.08%)</title><rect x="36.7183%" y="1957" width="0.0803%" height="15" fill="rgb(247,123,22)" fg:x="20111" fg:w="44"/><text x="36.9683%" y="1967.50"></text></g><g><title>irq_exit_rcu (44 samples, 0.08%)</title><rect x="36.7183%" y="1941" width="0.0803%" height="15" fill="rgb(231,138,38)" fg:x="20111" fg:w="44"/><text x="36.9683%" y="1951.50"></text></g><g><title>do_softirq_own_stack (44 samples, 0.08%)</title><rect x="36.7183%" y="1925" width="0.0803%" height="15" fill="rgb(231,145,46)" fg:x="20111" fg:w="44"/><text x="36.9683%" y="1935.50"></text></g><g><title>asm_call_sysvec_on_stack (44 samples, 0.08%)</title><rect x="36.7183%" y="1909" width="0.0803%" height="15" fill="rgb(251,118,11)" fg:x="20111" fg:w="44"/><text x="36.9683%" y="1919.50"></text></g><g><title>__softirqentry_text_start (44 samples, 0.08%)</title><rect x="36.7183%" y="1893" width="0.0803%" height="15" fill="rgb(217,147,25)" fg:x="20111" fg:w="44"/><text x="36.9683%" y="1903.50"></text></g><g><title>tasklet_action_common.isra.0 (8 samples, 0.01%)</title><rect x="36.7841%" y="1877" width="0.0146%" height="15" fill="rgb(247,81,37)" fg:x="20147" fg:w="8"/><text x="37.0341%" y="1887.50"></text></g><g><title>vmbus_on_event (8 samples, 0.01%)</title><rect x="36.7841%" y="1861" width="0.0146%" height="15" fill="rgb(209,12,38)" fg:x="20147" fg:w="8"/><text x="37.0341%" y="1871.50"></text></g><g><title>storvsc_on_channel_callback (8 samples, 0.01%)</title><rect x="36.7841%" y="1845" width="0.0146%" height="15" fill="rgb(227,1,9)" fg:x="20147" fg:w="8"/><text x="37.0341%" y="1855.50"></text></g><g><title>scsi_io_completion (6 samples, 0.01%)</title><rect x="36.7877%" y="1829" width="0.0110%" height="15" fill="rgb(248,47,43)" fg:x="20149" fg:w="6"/><text x="37.0377%" y="1839.50"></text></g><g><title>scsi_end_request (6 samples, 0.01%)</title><rect x="36.7877%" y="1813" width="0.0110%" height="15" fill="rgb(221,10,30)" fg:x="20149" fg:w="6"/><text x="37.0377%" y="1823.50"></text></g><g><title>default_idle_call (19,909 samples, 36.35%)</title><rect x="0.4674%" y="2005" width="36.3495%" height="15" fill="rgb(210,229,1)" fg:x="256" fg:w="19909"/><text x="0.7174%" y="2015.50">default_idle_call</text></g><g><title>default_idle (19,908 samples, 36.35%)</title><rect x="0.4692%" y="1989" width="36.3477%" height="15" fill="rgb(222,148,37)" fg:x="257" fg:w="19908"/><text x="0.7192%" y="1999.50">default_idle</text></g><g><title>asm_sysvec_hyperv_stimer0 (10 samples, 0.02%)</title><rect x="36.7987%" y="1973" width="0.0183%" height="15" fill="rgb(234,67,33)" fg:x="20155" fg:w="10"/><text x="37.0487%" y="1983.50"></text></g><g><title>sysvec_hyperv_stimer0 (10 samples, 0.02%)</title><rect x="36.7987%" y="1957" width="0.0183%" height="15" fill="rgb(247,98,35)" fg:x="20155" fg:w="10"/><text x="37.0487%" y="1967.50"></text></g><g><title>irq_exit_rcu (10 samples, 0.02%)</title><rect x="36.7987%" y="1941" width="0.0183%" height="15" fill="rgb(247,138,52)" fg:x="20155" fg:w="10"/><text x="37.0487%" y="1951.50"></text></g><g><title>do_softirq_own_stack (10 samples, 0.02%)</title><rect x="36.7987%" y="1925" width="0.0183%" height="15" fill="rgb(213,79,30)" fg:x="20155" fg:w="10"/><text x="37.0487%" y="1935.50"></text></g><g><title>asm_call_sysvec_on_stack (10 samples, 0.02%)</title><rect x="36.7987%" y="1909" width="0.0183%" height="15" fill="rgb(246,177,23)" fg:x="20155" fg:w="10"/><text x="37.0487%" y="1919.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.02%)</title><rect x="36.7987%" y="1893" width="0.0183%" height="15" fill="rgb(230,62,27)" fg:x="20155" fg:w="10"/><text x="37.0487%" y="1903.50"></text></g><g><title>cpu_startup_entry (19,915 samples, 36.36%)</title><rect x="0.4674%" y="2037" width="36.3605%" height="15" fill="rgb(216,154,8)" fg:x="256" fg:w="19915"/><text x="0.7174%" y="2047.50">cpu_startup_entry</text></g><g><title>do_idle (19,915 samples, 36.36%)</title><rect x="0.4674%" y="2021" width="36.3605%" height="15" fill="rgb(244,35,45)" fg:x="256" fg:w="19915"/><text x="0.7174%" y="2031.50">do_idle</text></g><g><title>asm_sysvec_hyperv_callback (27 samples, 0.05%)</title><rect x="39.8587%" y="1957" width="0.0493%" height="15" fill="rgb(251,115,12)" fg:x="21831" fg:w="27"/><text x="40.1087%" y="1967.50"></text></g><g><title>sysvec_hyperv_callback (27 samples, 0.05%)</title><rect x="39.8587%" y="1941" width="0.0493%" height="15" fill="rgb(240,54,50)" fg:x="21831" fg:w="27"/><text x="40.1087%" y="1951.50"></text></g><g><title>irq_exit_rcu (27 samples, 0.05%)</title><rect x="39.8587%" y="1925" width="0.0493%" height="15" fill="rgb(233,84,52)" fg:x="21831" fg:w="27"/><text x="40.1087%" y="1935.50"></text></g><g><title>do_softirq_own_stack (27 samples, 0.05%)</title><rect x="39.8587%" y="1909" width="0.0493%" height="15" fill="rgb(207,117,47)" fg:x="21831" fg:w="27"/><text x="40.1087%" y="1919.50"></text></g><g><title>asm_call_sysvec_on_stack (27 samples, 0.05%)</title><rect x="39.8587%" y="1893" width="0.0493%" height="15" fill="rgb(249,43,39)" fg:x="21831" fg:w="27"/><text x="40.1087%" y="1903.50"></text></g><g><title>__softirqentry_text_start (27 samples, 0.05%)</title><rect x="39.8587%" y="1877" width="0.0493%" height="15" fill="rgb(209,38,44)" fg:x="21831" fg:w="27"/><text x="40.1087%" y="1887.50"></text></g><g><title>kworker/u32:0 (21,837 samples, 39.87%)</title><rect x="0.0420%" y="2069" width="39.8696%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="21837"/><text x="0.2920%" y="2079.50">kworker/u32:0</text></g><g><title>secondary_startup_64_no_verify (21,604 samples, 39.44%)</title><rect x="0.4674%" y="2053" width="39.4442%" height="15" fill="rgb(242,79,21)" fg:x="256" fg:w="21604"/><text x="0.7174%" y="2063.50">secondary_startup_64_no_verify</text></g><g><title>start_kernel (1,689 samples, 3.08%)</title><rect x="36.8279%" y="2037" width="3.0837%" height="15" fill="rgb(211,96,35)" fg:x="20171" fg:w="1689"/><text x="37.0779%" y="2047.50">sta..</text></g><g><title>cpu_startup_entry (1,689 samples, 3.08%)</title><rect x="36.8279%" y="2021" width="3.0837%" height="15" fill="rgb(253,215,40)" fg:x="20171" fg:w="1689"/><text x="37.0779%" y="2031.50">cpu..</text></g><g><title>do_idle (1,689 samples, 3.08%)</title><rect x="36.8279%" y="2005" width="3.0837%" height="15" fill="rgb(211,81,21)" fg:x="20171" fg:w="1689"/><text x="37.0779%" y="2015.50">do_..</text></g><g><title>default_idle_call (1,689 samples, 3.08%)</title><rect x="36.8279%" y="1989" width="3.0837%" height="15" fill="rgb(208,190,38)" fg:x="20171" fg:w="1689"/><text x="37.0779%" y="1999.50">def..</text></g><g><title>default_idle (1,689 samples, 3.08%)</title><rect x="36.8279%" y="1973" width="3.0837%" height="15" fill="rgb(235,213,38)" fg:x="20171" fg:w="1689"/><text x="37.0779%" y="1983.50">def..</text></g><g><title>ls (6 samples, 0.01%)</title><rect x="39.9116%" y="2069" width="0.0110%" height="15" fill="rgb(237,122,38)" fg:x="21860" fg:w="6"/><text x="40.1616%" y="2079.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (10 samples, 0.02%)</title><rect x="39.9427%" y="2037" width="0.0183%" height="15" fill="rgb(244,218,35)" fg:x="21877" fg:w="10"/><text x="40.1927%" y="2047.50"></text></g><g><title>dup_mm (8 samples, 0.01%)</title><rect x="39.9628%" y="1829" width="0.0146%" height="15" fill="rgb(240,68,47)" fg:x="21888" fg:w="8"/><text x="40.2128%" y="1839.50"></text></g><g><title>copy_page_range (8 samples, 0.01%)</title><rect x="39.9628%" y="1813" width="0.0146%" height="15" fill="rgb(210,16,53)" fg:x="21888" fg:w="8"/><text x="40.2128%" y="1823.50"></text></g><g><title>__libc_fork (9 samples, 0.02%)</title><rect x="39.9628%" y="1957" width="0.0164%" height="15" fill="rgb(235,124,12)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1967.50"></text></g><g><title>__GI__Fork (9 samples, 0.02%)</title><rect x="39.9628%" y="1941" width="0.0164%" height="15" fill="rgb(224,169,11)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1951.50"></text></g><g><title>arch_fork (9 samples, 0.02%)</title><rect x="39.9628%" y="1925" width="0.0164%" height="15" fill="rgb(250,166,2)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="39.9628%" y="1909" width="0.0164%" height="15" fill="rgb(242,216,29)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1919.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="39.9628%" y="1893" width="0.0164%" height="15" fill="rgb(230,116,27)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1903.50"></text></g><g><title>__do_sys_clone (9 samples, 0.02%)</title><rect x="39.9628%" y="1877" width="0.0164%" height="15" fill="rgb(228,99,48)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1887.50"></text></g><g><title>kernel_clone (9 samples, 0.02%)</title><rect x="39.9628%" y="1861" width="0.0164%" height="15" fill="rgb(253,11,6)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1871.50"></text></g><g><title>copy_process (9 samples, 0.02%)</title><rect x="39.9628%" y="1845" width="0.0164%" height="15" fill="rgb(247,143,39)" fg:x="21888" fg:w="9"/><text x="40.2128%" y="1855.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::Spawn (10 samples, 0.02%)</title><rect x="39.9628%" y="2021" width="0.0183%" height="15" fill="rgb(236,97,10)" fg:x="21888" fg:w="10"/><text x="40.2128%" y="2031.50"></text></g><g><title>uv_spawn (10 samples, 0.02%)</title><rect x="39.9628%" y="2005" width="0.0183%" height="15" fill="rgb(233,208,19)" fg:x="21888" fg:w="10"/><text x="40.2128%" y="2015.50"></text></g><g><title>uv__spawn_and_init_child (10 samples, 0.02%)</title><rect x="39.9628%" y="1989" width="0.0183%" height="15" fill="rgb(216,164,2)" fg:x="21888" fg:w="10"/><text x="40.2128%" y="1999.50"></text></g><g><title>uv__spawn_and_init_child_fork (10 samples, 0.02%)</title><rect x="39.9628%" y="1973" width="0.0183%" height="15" fill="rgb(220,129,5)" fg:x="21888" fg:w="10"/><text x="40.2128%" y="1983.50"></text></g><g><title>uv_cond_signal (7 samples, 0.01%)</title><rect x="40.0066%" y="1957" width="0.0128%" height="15" fill="rgb(242,17,10)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1967.50"></text></g><g><title>___pthread_cond_signal (7 samples, 0.01%)</title><rect x="40.0066%" y="1941" width="0.0128%" height="15" fill="rgb(242,107,0)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1951.50"></text></g><g><title>futex_wake (7 samples, 0.01%)</title><rect x="40.0066%" y="1925" width="0.0128%" height="15" fill="rgb(251,28,31)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="40.0066%" y="1909" width="0.0128%" height="15" fill="rgb(233,223,10)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1919.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="40.0066%" y="1893" width="0.0128%" height="15" fill="rgb(215,21,27)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1903.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="40.0066%" y="1877" width="0.0128%" height="15" fill="rgb(232,23,21)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1887.50"></text></g><g><title>do_futex (7 samples, 0.01%)</title><rect x="40.0066%" y="1861" width="0.0128%" height="15" fill="rgb(244,5,23)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1871.50"></text></g><g><title>futex_wake (7 samples, 0.01%)</title><rect x="40.0066%" y="1845" width="0.0128%" height="15" fill="rgb(226,81,46)" fg:x="21912" fg:w="7"/><text x="40.2566%" y="1855.50"></text></g><g><title>wake_up_q (6 samples, 0.01%)</title><rect x="40.0084%" y="1829" width="0.0110%" height="15" fill="rgb(247,70,30)" fg:x="21913" fg:w="6"/><text x="40.2584%" y="1839.50"></text></g><g><title>try_to_wake_up (6 samples, 0.01%)</title><rect x="40.0084%" y="1813" width="0.0110%" height="15" fill="rgb(212,68,19)" fg:x="21913" fg:w="6"/><text x="40.2584%" y="1823.50"></text></g><g><title>__lock_text_start (6 samples, 0.01%)</title><rect x="40.0084%" y="1797" width="0.0110%" height="15" fill="rgb(240,187,13)" fg:x="21913" fg:w="6"/><text x="40.2584%" y="1807.50"></text></g><g><title>Builtins_CallApiCallback (32 samples, 0.06%)</title><rect x="39.9628%" y="2037" width="0.0584%" height="15" fill="rgb(223,113,26)" fg:x="21888" fg:w="32"/><text x="40.2128%" y="2047.50"></text></g><g><title>node::fs::Stat (10 samples, 0.02%)</title><rect x="40.0029%" y="2021" width="0.0183%" height="15" fill="rgb(206,192,2)" fg:x="21910" fg:w="10"/><text x="40.2529%" y="2031.50"></text></g><g><title>uv_fs_stat (9 samples, 0.02%)</title><rect x="40.0047%" y="2005" width="0.0164%" height="15" fill="rgb(241,108,4)" fg:x="21911" fg:w="9"/><text x="40.2547%" y="2015.50"></text></g><g><title>uv__work_submit (8 samples, 0.01%)</title><rect x="40.0066%" y="1989" width="0.0146%" height="15" fill="rgb(247,173,49)" fg:x="21912" fg:w="8"/><text x="40.2566%" y="1999.50"></text></g><g><title>post (8 samples, 0.01%)</title><rect x="40.0066%" y="1973" width="0.0146%" height="15" fill="rgb(224,114,35)" fg:x="21912" fg:w="8"/><text x="40.2566%" y="1983.50"></text></g><g><title>[perf-110.map] (69 samples, 0.13%)</title><rect x="39.9244%" y="2053" width="0.1260%" height="15" fill="rgb(245,159,27)" fg:x="21867" fg:w="69"/><text x="40.1744%" y="2063.50"></text></g><g><title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (6 samples, 0.01%)</title><rect x="40.0595%" y="2037" width="0.0110%" height="15" fill="rgb(245,172,44)" fg:x="21941" fg:w="6"/><text x="40.3095%" y="2047.50"></text></g><g><title>node::StreamBase::JSMethod&lt;&amp;node::StreamBase::WriteBuffer&gt; (7 samples, 0.01%)</title><rect x="40.0723%" y="2021" width="0.0128%" height="15" fill="rgb(236,23,11)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="2031.50"></text></g><g><title>node::StreamBase::WriteBuffer (7 samples, 0.01%)</title><rect x="40.0723%" y="2005" width="0.0128%" height="15" fill="rgb(205,117,38)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="2015.50"></text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (7 samples, 0.01%)</title><rect x="40.0723%" y="1989" width="0.0128%" height="15" fill="rgb(237,72,25)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="1999.50"></text></g><g><title>uv__try_write (7 samples, 0.01%)</title><rect x="40.0723%" y="1973" width="0.0128%" height="15" fill="rgb(244,70,9)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="1983.50"></text></g><g><title>uv__writev (7 samples, 0.01%)</title><rect x="40.0723%" y="1957" width="0.0128%" height="15" fill="rgb(217,125,39)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="1967.50"></text></g><g><title>__GI___libc_write (7 samples, 0.01%)</title><rect x="40.0723%" y="1941" width="0.0128%" height="15" fill="rgb(235,36,10)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="1951.50"></text></g><g><title>__GI___libc_write (7 samples, 0.01%)</title><rect x="40.0723%" y="1925" width="0.0128%" height="15" fill="rgb(251,123,47)" fg:x="21948" fg:w="7"/><text x="40.3223%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="40.0741%" y="1909" width="0.0110%" height="15" fill="rgb(221,13,13)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1919.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="40.0741%" y="1893" width="0.0110%" height="15" fill="rgb(238,131,9)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1903.50"></text></g><g><title>ksys_write (6 samples, 0.01%)</title><rect x="40.0741%" y="1877" width="0.0110%" height="15" fill="rgb(211,50,8)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1887.50"></text></g><g><title>vfs_write (6 samples, 0.01%)</title><rect x="40.0741%" y="1861" width="0.0110%" height="15" fill="rgb(245,182,24)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1871.50"></text></g><g><title>new_sync_write (6 samples, 0.01%)</title><rect x="40.0741%" y="1845" width="0.0110%" height="15" fill="rgb(242,14,37)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1855.50"></text></g><g><title>sock_write_iter (6 samples, 0.01%)</title><rect x="40.0741%" y="1829" width="0.0110%" height="15" fill="rgb(246,228,12)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1839.50"></text></g><g><title>tcp_sendmsg (6 samples, 0.01%)</title><rect x="40.0741%" y="1813" width="0.0110%" height="15" fill="rgb(213,55,15)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1823.50"></text></g><g><title>tcp_sendmsg_locked (6 samples, 0.01%)</title><rect x="40.0741%" y="1797" width="0.0110%" height="15" fill="rgb(209,9,3)" fg:x="21949" fg:w="6"/><text x="40.3241%" y="1807.50"></text></g><g><title>Builtins_CallApiCallback (9 samples, 0.02%)</title><rect x="40.0723%" y="2037" width="0.0164%" height="15" fill="rgb(230,59,30)" fg:x="21948" fg:w="9"/><text x="40.3223%" y="2047.50"></text></g><g><title>[perf-23.map] (28 samples, 0.05%)</title><rect x="40.0504%" y="2053" width="0.0511%" height="15" fill="rgb(209,121,21)" fg:x="21936" fg:w="28"/><text x="40.3004%" y="2063.50"></text></g><g><title>[perf-692.map] (9 samples, 0.02%)</title><rect x="40.1198%" y="2053" width="0.0164%" height="15" fill="rgb(220,109,13)" fg:x="21974" fg:w="9"/><text x="40.3698%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.1399%" y="373" width="0.0183%" height="15" fill="rgb(232,18,1)" fg:x="21985" fg:w="10"/><text x="40.3899%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.02%)</title><rect x="40.1417%" y="357" width="0.0164%" height="15" fill="rgb(215,41,42)" fg:x="21986" fg:w="9"/><text x="40.3917%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9 samples, 0.02%)</title><rect x="40.1417%" y="341" width="0.0164%" height="15" fill="rgb(224,123,36)" fg:x="21986" fg:w="9"/><text x="40.3917%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.02%)</title><rect x="40.1417%" y="325" width="0.0164%" height="15" fill="rgb(240,125,3)" fg:x="21986" fg:w="9"/><text x="40.3917%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.03%)</title><rect x="40.1362%" y="437" width="0.0256%" height="15" fill="rgb(205,98,50)" fg:x="21983" fg:w="14"/><text x="40.3862%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.02%)</title><rect x="40.1380%" y="421" width="0.0237%" height="15" fill="rgb(205,185,37)" fg:x="21984" fg:w="13"/><text x="40.3880%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12 samples, 0.02%)</title><rect x="40.1399%" y="405" width="0.0219%" height="15" fill="rgb(238,207,15)" fg:x="21985" fg:w="12"/><text x="40.3899%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.02%)</title><rect x="40.1399%" y="389" width="0.0219%" height="15" fill="rgb(213,199,42)" fg:x="21985" fg:w="12"/><text x="40.3899%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.03%)</title><rect x="40.1362%" y="501" width="0.0292%" height="15" fill="rgb(235,201,11)" fg:x="21983" fg:w="16"/><text x="40.3862%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.03%)</title><rect x="40.1362%" y="485" width="0.0292%" height="15" fill="rgb(207,46,11)" fg:x="21983" fg:w="16"/><text x="40.3862%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (16 samples, 0.03%)</title><rect x="40.1362%" y="469" width="0.0292%" height="15" fill="rgb(241,35,35)" fg:x="21983" fg:w="16"/><text x="40.3862%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.03%)</title><rect x="40.1362%" y="453" width="0.0292%" height="15" fill="rgb(243,32,47)" fg:x="21983" fg:w="16"/><text x="40.3862%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21 samples, 0.04%)</title><rect x="40.1362%" y="565" width="0.0383%" height="15" fill="rgb(247,202,23)" fg:x="21983" fg:w="21"/><text x="40.3862%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21 samples, 0.04%)</title><rect x="40.1362%" y="549" width="0.0383%" height="15" fill="rgb(219,102,11)" fg:x="21983" fg:w="21"/><text x="40.3862%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21 samples, 0.04%)</title><rect x="40.1362%" y="533" width="0.0383%" height="15" fill="rgb(243,110,44)" fg:x="21983" fg:w="21"/><text x="40.3862%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21 samples, 0.04%)</title><rect x="40.1362%" y="517" width="0.0383%" height="15" fill="rgb(222,74,54)" fg:x="21983" fg:w="21"/><text x="40.3862%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25 samples, 0.05%)</title><rect x="40.1362%" y="629" width="0.0456%" height="15" fill="rgb(216,99,12)" fg:x="21983" fg:w="25"/><text x="40.3862%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25 samples, 0.05%)</title><rect x="40.1362%" y="613" width="0.0456%" height="15" fill="rgb(226,22,26)" fg:x="21983" fg:w="25"/><text x="40.3862%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25 samples, 0.05%)</title><rect x="40.1362%" y="597" width="0.0456%" height="15" fill="rgb(217,163,10)" fg:x="21983" fg:w="25"/><text x="40.3862%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25 samples, 0.05%)</title><rect x="40.1362%" y="581" width="0.0456%" height="15" fill="rgb(213,25,53)" fg:x="21983" fg:w="25"/><text x="40.3862%" y="591.50"></text></g><g><title>InotifyBackend::handleEvents (28 samples, 0.05%)</title><rect x="40.1362%" y="2037" width="0.0511%" height="15" fill="rgb(252,105,26)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="2047.50"></text></g><g><title>InotifyBackend::handleEvent (28 samples, 0.05%)</title><rect x="40.1362%" y="2021" width="0.0511%" height="15" fill="rgb(220,39,43)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="2031.50"></text></g><g><title>InotifyBackend::handleSubscription (28 samples, 0.05%)</title><rect x="40.1362%" y="2005" width="0.0511%" height="15" fill="rgb(229,68,48)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="2015.50"></text></g><g><title>Watcher::isIgnored (28 samples, 0.05%)</title><rect x="40.1362%" y="1989" width="0.0511%" height="15" fill="rgb(252,8,32)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1999.50"></text></g><g><title>Glob::isIgnored (28 samples, 0.05%)</title><rect x="40.1362%" y="1973" width="0.0511%" height="15" fill="rgb(223,20,43)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1983.50"></text></g><g><title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (28 samples, 0.05%)</title><rect x="40.1362%" y="1957" width="0.0511%" height="15" fill="rgb(229,81,49)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1941" width="0.0511%" height="15" fill="rgb(236,28,36)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1925" width="0.0511%" height="15" fill="rgb(249,185,26)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1909" width="0.0511%" height="15" fill="rgb(249,174,33)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1893" width="0.0511%" height="15" fill="rgb(233,201,37)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1877" width="0.0511%" height="15" fill="rgb(221,78,26)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1861" width="0.0511%" height="15" fill="rgb(250,127,30)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1845" width="0.0511%" height="15" fill="rgb(230,49,44)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1829" width="0.0511%" height="15" fill="rgb(229,67,23)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1813" width="0.0511%" height="15" fill="rgb(249,83,47)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1797" width="0.0511%" height="15" fill="rgb(215,43,3)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1781" width="0.0511%" height="15" fill="rgb(238,154,13)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1765" width="0.0511%" height="15" fill="rgb(219,56,2)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1749" width="0.0511%" height="15" fill="rgb(233,0,4)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1733" width="0.0511%" height="15" fill="rgb(235,30,7)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1717" width="0.0511%" height="15" fill="rgb(250,79,13)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1701" width="0.0511%" height="15" fill="rgb(211,146,34)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1685" width="0.0511%" height="15" fill="rgb(228,22,38)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1669" width="0.0511%" height="15" fill="rgb(235,168,5)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1653" width="0.0511%" height="15" fill="rgb(221,155,16)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1637" width="0.0511%" height="15" fill="rgb(215,215,53)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1621" width="0.0511%" height="15" fill="rgb(223,4,10)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1605" width="0.0511%" height="15" fill="rgb(234,103,6)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1589" width="0.0511%" height="15" fill="rgb(227,97,0)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1573" width="0.0511%" height="15" fill="rgb(234,150,53)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1557" width="0.0511%" height="15" fill="rgb(228,201,54)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1541" width="0.0511%" height="15" fill="rgb(222,22,37)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1525" width="0.0511%" height="15" fill="rgb(237,53,32)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1509" width="0.0511%" height="15" fill="rgb(233,25,53)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1493" width="0.0511%" height="15" fill="rgb(210,40,34)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1477" width="0.0511%" height="15" fill="rgb(241,220,44)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1461" width="0.0511%" height="15" fill="rgb(235,28,35)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1445" width="0.0511%" height="15" fill="rgb(210,56,17)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1429" width="0.0511%" height="15" fill="rgb(224,130,29)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1413" width="0.0511%" height="15" fill="rgb(235,212,8)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1397" width="0.0511%" height="15" fill="rgb(223,33,50)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1381" width="0.0511%" height="15" fill="rgb(219,149,13)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1365" width="0.0511%" height="15" fill="rgb(250,156,29)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1349" width="0.0511%" height="15" fill="rgb(216,193,19)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1333" width="0.0511%" height="15" fill="rgb(216,135,14)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1317" width="0.0511%" height="15" fill="rgb(241,47,5)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1301" width="0.0511%" height="15" fill="rgb(233,42,35)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1285" width="0.0511%" height="15" fill="rgb(231,13,6)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1269" width="0.0511%" height="15" fill="rgb(207,181,40)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1253" width="0.0511%" height="15" fill="rgb(254,173,49)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1237" width="0.0511%" height="15" fill="rgb(221,1,38)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1221" width="0.0511%" height="15" fill="rgb(206,124,46)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1205" width="0.0511%" height="15" fill="rgb(249,21,11)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1189" width="0.0511%" height="15" fill="rgb(222,201,40)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1173" width="0.0511%" height="15" fill="rgb(235,61,29)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1157" width="0.0511%" height="15" fill="rgb(219,207,3)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1141" width="0.0511%" height="15" fill="rgb(222,56,46)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1125" width="0.0511%" height="15" fill="rgb(239,76,54)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1109" width="0.0511%" height="15" fill="rgb(231,124,27)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1093" width="0.0511%" height="15" fill="rgb(249,195,6)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1077" width="0.0511%" height="15" fill="rgb(237,174,47)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1061" width="0.0511%" height="15" fill="rgb(206,201,31)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="1045" width="0.0511%" height="15" fill="rgb(231,57,52)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1029" width="0.0511%" height="15" fill="rgb(248,177,22)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="1013" width="0.0511%" height="15" fill="rgb(215,211,37)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="997" width="0.0511%" height="15" fill="rgb(241,128,51)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="981" width="0.0511%" height="15" fill="rgb(227,165,31)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="965" width="0.0511%" height="15" fill="rgb(228,167,24)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="949" width="0.0511%" height="15" fill="rgb(228,143,12)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="933" width="0.0511%" height="15" fill="rgb(249,149,8)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="917" width="0.0511%" height="15" fill="rgb(243,35,44)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="901" width="0.0511%" height="15" fill="rgb(246,89,9)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="885" width="0.0511%" height="15" fill="rgb(233,213,13)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="869" width="0.0511%" height="15" fill="rgb(233,141,41)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="853" width="0.0511%" height="15" fill="rgb(239,167,4)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="837" width="0.0511%" height="15" fill="rgb(209,217,16)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="821" width="0.0511%" height="15" fill="rgb(219,88,35)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="805" width="0.0511%" height="15" fill="rgb(220,193,23)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="789" width="0.0511%" height="15" fill="rgb(230,90,52)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="773" width="0.0511%" height="15" fill="rgb(252,106,19)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="757" width="0.0511%" height="15" fill="rgb(206,74,20)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="741" width="0.0511%" height="15" fill="rgb(230,138,44)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="725" width="0.0511%" height="15" fill="rgb(235,182,43)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="709" width="0.0511%" height="15" fill="rgb(242,16,51)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="693" width="0.0511%" height="15" fill="rgb(248,9,4)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="677" width="0.0511%" height="15" fill="rgb(210,31,22)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.1362%" y="661" width="0.0511%" height="15" fill="rgb(239,54,39)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.1362%" y="645" width="0.0511%" height="15" fill="rgb(230,99,41)" fg:x="21983" fg:w="28"/><text x="40.3862%" y="655.50"></text></g><g><title>[unknown] (38 samples, 0.07%)</title><rect x="40.1362%" y="2053" width="0.0694%" height="15" fill="rgb(253,106,12)" fg:x="21983" fg:w="38"/><text x="40.3862%" y="2063.50"></text></g><g><title>epoll_wait (6 samples, 0.01%)</title><rect x="40.2092%" y="1909" width="0.0110%" height="15" fill="rgb(213,46,41)" fg:x="22023" fg:w="6"/><text x="40.4592%" y="1919.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="40.2092%" y="1893" width="0.0110%" height="15" fill="rgb(215,133,35)" fg:x="22023" fg:w="6"/><text x="40.4592%" y="1903.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="40.2092%" y="1877" width="0.0110%" height="15" fill="rgb(213,28,5)" fg:x="22023" fg:w="6"/><text x="40.4592%" y="1887.50"></text></g><g><title>__x64_sys_epoll_wait (6 samples, 0.01%)</title><rect x="40.2092%" y="1861" width="0.0110%" height="15" fill="rgb(215,77,49)" fg:x="22023" fg:w="6"/><text x="40.4592%" y="1871.50"></text></g><g><title>do_epoll_wait (6 samples, 0.01%)</title><rect x="40.2092%" y="1845" width="0.0110%" height="15" fill="rgb(248,100,22)" fg:x="22023" fg:w="6"/><text x="40.4592%" y="1855.50"></text></g><g><title>ep_poll (6 samples, 0.01%)</title><rect x="40.2092%" y="1829" width="0.0110%" height="15" fill="rgb(208,67,9)" fg:x="22023" fg:w="6"/><text x="40.4592%" y="1839.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (7 samples, 0.01%)</title><rect x="40.2220%" y="1861" width="0.0128%" height="15" fill="rgb(219,133,21)" fg:x="22030" fg:w="7"/><text x="40.4720%" y="1871.50"></text></g><g><title>node::EmitToJSStreamListener::OnStreamRead (7 samples, 0.01%)</title><rect x="40.2220%" y="1845" width="0.0128%" height="15" fill="rgb(246,46,29)" fg:x="22030" fg:w="7"/><text x="40.4720%" y="1855.50"></text></g><g><title>uv__io_poll (18 samples, 0.03%)</title><rect x="40.2056%" y="1925" width="0.0329%" height="15" fill="rgb(246,185,52)" fg:x="22021" fg:w="18"/><text x="40.4556%" y="1935.50"></text></g><g><title>uv__stream_io (9 samples, 0.02%)</title><rect x="40.2220%" y="1909" width="0.0164%" height="15" fill="rgb(252,136,11)" fg:x="22030" fg:w="9"/><text x="40.4720%" y="1919.50"></text></g><g><title>uv__read (9 samples, 0.02%)</title><rect x="40.2220%" y="1893" width="0.0164%" height="15" fill="rgb(219,138,53)" fg:x="22030" fg:w="9"/><text x="40.4720%" y="1903.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (9 samples, 0.02%)</title><rect x="40.2220%" y="1877" width="0.0164%" height="15" fill="rgb(211,51,23)" fg:x="22030" fg:w="9"/><text x="40.4720%" y="1887.50"></text></g><g><title>_start (22 samples, 0.04%)</title><rect x="40.2056%" y="2053" width="0.0402%" height="15" fill="rgb(247,221,28)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="2063.50"></text></g><g><title>__libc_start_main_impl (22 samples, 0.04%)</title><rect x="40.2056%" y="2037" width="0.0402%" height="15" fill="rgb(251,222,45)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="2047.50"></text></g><g><title>__libc_start_call_main (22 samples, 0.04%)</title><rect x="40.2056%" y="2021" width="0.0402%" height="15" fill="rgb(217,162,53)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="2031.50"></text></g><g><title>node::Start (22 samples, 0.04%)</title><rect x="40.2056%" y="2005" width="0.0402%" height="15" fill="rgb(229,93,14)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="2015.50"></text></g><g><title>node::LoadSnapshotDataAndRun (22 samples, 0.04%)</title><rect x="40.2056%" y="1989" width="0.0402%" height="15" fill="rgb(209,67,49)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="1999.50"></text></g><g><title>node::NodeMainInstance::Run (22 samples, 0.04%)</title><rect x="40.2056%" y="1973" width="0.0402%" height="15" fill="rgb(213,87,29)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="1983.50"></text></g><g><title>node::SpinEventLoop (22 samples, 0.04%)</title><rect x="40.2056%" y="1957" width="0.0402%" height="15" fill="rgb(205,151,52)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="1967.50"></text></g><g><title>uv_run (22 samples, 0.04%)</title><rect x="40.2056%" y="1941" width="0.0402%" height="15" fill="rgb(253,215,39)" fg:x="22021" fg:w="22"/><text x="40.4556%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.02%)</title><rect x="40.3407%" y="821" width="0.0164%" height="15" fill="rgb(221,220,41)" fg:x="22095" fg:w="9"/><text x="40.5907%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.02%)</title><rect x="40.3407%" y="805" width="0.0164%" height="15" fill="rgb(218,133,21)" fg:x="22095" fg:w="9"/><text x="40.5907%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9 samples, 0.02%)</title><rect x="40.3407%" y="789" width="0.0164%" height="15" fill="rgb(221,193,43)" fg:x="22095" fg:w="9"/><text x="40.5907%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.02%)</title><rect x="40.3407%" y="773" width="0.0164%" height="15" fill="rgb(240,128,52)" fg:x="22095" fg:w="9"/><text x="40.5907%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7 samples, 0.01%)</title><rect x="40.3443%" y="757" width="0.0128%" height="15" fill="rgb(253,114,12)" fg:x="22097" fg:w="7"/><text x="40.5943%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.03%)</title><rect x="40.3407%" y="885" width="0.0256%" height="15" fill="rgb(215,223,47)" fg:x="22095" fg:w="14"/><text x="40.5907%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.03%)</title><rect x="40.3407%" y="869" width="0.0256%" height="15" fill="rgb(248,225,23)" fg:x="22095" fg:w="14"/><text x="40.5907%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14 samples, 0.03%)</title><rect x="40.3407%" y="853" width="0.0256%" height="15" fill="rgb(250,108,0)" fg:x="22095" fg:w="14"/><text x="40.5907%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.03%)</title><rect x="40.3407%" y="837" width="0.0256%" height="15" fill="rgb(228,208,7)" fg:x="22095" fg:w="14"/><text x="40.5907%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18 samples, 0.03%)</title><rect x="40.3389%" y="949" width="0.0329%" height="15" fill="rgb(244,45,10)" fg:x="22094" fg:w="18"/><text x="40.5889%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18 samples, 0.03%)</title><rect x="40.3389%" y="933" width="0.0329%" height="15" fill="rgb(207,125,25)" fg:x="22094" fg:w="18"/><text x="40.5889%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18 samples, 0.03%)</title><rect x="40.3389%" y="917" width="0.0329%" height="15" fill="rgb(210,195,18)" fg:x="22094" fg:w="18"/><text x="40.5889%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18 samples, 0.03%)</title><rect x="40.3389%" y="901" width="0.0329%" height="15" fill="rgb(249,80,12)" fg:x="22094" fg:w="18"/><text x="40.5889%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22 samples, 0.04%)</title><rect x="40.3389%" y="1013" width="0.0402%" height="15" fill="rgb(221,65,9)" fg:x="22094" fg:w="22"/><text x="40.5889%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22 samples, 0.04%)</title><rect x="40.3389%" y="997" width="0.0402%" height="15" fill="rgb(235,49,36)" fg:x="22094" fg:w="22"/><text x="40.5889%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22 samples, 0.04%)</title><rect x="40.3389%" y="981" width="0.0402%" height="15" fill="rgb(225,32,20)" fg:x="22094" fg:w="22"/><text x="40.5889%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22 samples, 0.04%)</title><rect x="40.3389%" y="965" width="0.0402%" height="15" fill="rgb(215,141,46)" fg:x="22094" fg:w="22"/><text x="40.5889%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.3370%" y="1077" width="0.0511%" height="15" fill="rgb(250,160,47)" fg:x="22093" fg:w="28"/><text x="40.5870%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.3370%" y="1061" width="0.0511%" height="15" fill="rgb(216,222,40)" fg:x="22093" fg:w="28"/><text x="40.5870%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28 samples, 0.05%)</title><rect x="40.3370%" y="1045" width="0.0511%" height="15" fill="rgb(234,217,39)" fg:x="22093" fg:w="28"/><text x="40.5870%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28 samples, 0.05%)</title><rect x="40.3370%" y="1029" width="0.0511%" height="15" fill="rgb(207,178,40)" fg:x="22093" fg:w="28"/><text x="40.5870%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34 samples, 0.06%)</title><rect x="40.3352%" y="1141" width="0.0621%" height="15" fill="rgb(221,136,13)" fg:x="22092" fg:w="34"/><text x="40.5852%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34 samples, 0.06%)</title><rect x="40.3352%" y="1125" width="0.0621%" height="15" fill="rgb(249,199,10)" fg:x="22092" fg:w="34"/><text x="40.5852%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33 samples, 0.06%)</title><rect x="40.3370%" y="1109" width="0.0603%" height="15" fill="rgb(249,222,13)" fg:x="22093" fg:w="33"/><text x="40.5870%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33 samples, 0.06%)</title><rect x="40.3370%" y="1093" width="0.0603%" height="15" fill="rgb(244,185,38)" fg:x="22093" fg:w="33"/><text x="40.5870%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39 samples, 0.07%)</title><rect x="40.3352%" y="1205" width="0.0712%" height="15" fill="rgb(236,202,9)" fg:x="22092" fg:w="39"/><text x="40.5852%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39 samples, 0.07%)</title><rect x="40.3352%" y="1189" width="0.0712%" height="15" fill="rgb(250,229,37)" fg:x="22092" fg:w="39"/><text x="40.5852%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (39 samples, 0.07%)</title><rect x="40.3352%" y="1173" width="0.0712%" height="15" fill="rgb(206,174,23)" fg:x="22092" fg:w="39"/><text x="40.5852%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39 samples, 0.07%)</title><rect x="40.3352%" y="1157" width="0.0712%" height="15" fill="rgb(211,33,43)" fg:x="22092" fg:w="39"/><text x="40.5852%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47 samples, 0.09%)</title><rect x="40.3316%" y="1269" width="0.0858%" height="15" fill="rgb(245,58,50)" fg:x="22090" fg:w="47"/><text x="40.5816%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46 samples, 0.08%)</title><rect x="40.3334%" y="1253" width="0.0840%" height="15" fill="rgb(244,68,36)" fg:x="22091" fg:w="46"/><text x="40.5834%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45 samples, 0.08%)</title><rect x="40.3352%" y="1237" width="0.0822%" height="15" fill="rgb(232,229,15)" fg:x="22092" fg:w="45"/><text x="40.5852%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45 samples, 0.08%)</title><rect x="40.3352%" y="1221" width="0.0822%" height="15" fill="rgb(254,30,23)" fg:x="22092" fg:w="45"/><text x="40.5852%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6 samples, 0.01%)</title><rect x="40.4064%" y="1205" width="0.0110%" height="15" fill="rgb(235,160,14)" fg:x="22131" fg:w="6"/><text x="40.6564%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53 samples, 0.10%)</title><rect x="40.3243%" y="1333" width="0.0968%" height="15" fill="rgb(212,155,44)" fg:x="22086" fg:w="53"/><text x="40.5743%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53 samples, 0.10%)</title><rect x="40.3243%" y="1317" width="0.0968%" height="15" fill="rgb(226,2,50)" fg:x="22086" fg:w="53"/><text x="40.5743%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (52 samples, 0.09%)</title><rect x="40.3261%" y="1301" width="0.0949%" height="15" fill="rgb(234,177,6)" fg:x="22087" fg:w="52"/><text x="40.5761%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52 samples, 0.09%)</title><rect x="40.3261%" y="1285" width="0.0949%" height="15" fill="rgb(217,24,9)" fg:x="22087" fg:w="52"/><text x="40.5761%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56 samples, 0.10%)</title><rect x="40.3243%" y="1397" width="0.1022%" height="15" fill="rgb(220,13,46)" fg:x="22086" fg:w="56"/><text x="40.5743%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56 samples, 0.10%)</title><rect x="40.3243%" y="1381" width="0.1022%" height="15" fill="rgb(239,221,27)" fg:x="22086" fg:w="56"/><text x="40.5743%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56 samples, 0.10%)</title><rect x="40.3243%" y="1365" width="0.1022%" height="15" fill="rgb(222,198,25)" fg:x="22086" fg:w="56"/><text x="40.5743%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56 samples, 0.10%)</title><rect x="40.3243%" y="1349" width="0.1022%" height="15" fill="rgb(211,99,13)" fg:x="22086" fg:w="56"/><text x="40.5743%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62 samples, 0.11%)</title><rect x="40.3224%" y="1461" width="0.1132%" height="15" fill="rgb(232,111,31)" fg:x="22085" fg:w="62"/><text x="40.5724%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62 samples, 0.11%)</title><rect x="40.3224%" y="1445" width="0.1132%" height="15" fill="rgb(245,82,37)" fg:x="22085" fg:w="62"/><text x="40.5724%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (62 samples, 0.11%)</title><rect x="40.3224%" y="1429" width="0.1132%" height="15" fill="rgb(227,149,46)" fg:x="22085" fg:w="62"/><text x="40.5724%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61 samples, 0.11%)</title><rect x="40.3243%" y="1413" width="0.1114%" height="15" fill="rgb(218,36,50)" fg:x="22086" fg:w="61"/><text x="40.5743%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63 samples, 0.12%)</title><rect x="40.3224%" y="1525" width="0.1150%" height="15" fill="rgb(226,80,48)" fg:x="22085" fg:w="63"/><text x="40.5724%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63 samples, 0.12%)</title><rect x="40.3224%" y="1509" width="0.1150%" height="15" fill="rgb(238,224,15)" fg:x="22085" fg:w="63"/><text x="40.5724%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63 samples, 0.12%)</title><rect x="40.3224%" y="1493" width="0.1150%" height="15" fill="rgb(241,136,10)" fg:x="22085" fg:w="63"/><text x="40.5724%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63 samples, 0.12%)</title><rect x="40.3224%" y="1477" width="0.1150%" height="15" fill="rgb(208,32,45)" fg:x="22085" fg:w="63"/><text x="40.5724%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70 samples, 0.13%)</title><rect x="40.3224%" y="1589" width="0.1278%" height="15" fill="rgb(207,135,9)" fg:x="22085" fg:w="70"/><text x="40.5724%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70 samples, 0.13%)</title><rect x="40.3224%" y="1573" width="0.1278%" height="15" fill="rgb(206,86,44)" fg:x="22085" fg:w="70"/><text x="40.5724%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (70 samples, 0.13%)</title><rect x="40.3224%" y="1557" width="0.1278%" height="15" fill="rgb(245,177,15)" fg:x="22085" fg:w="70"/><text x="40.5724%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70 samples, 0.13%)</title><rect x="40.3224%" y="1541" width="0.1278%" height="15" fill="rgb(206,64,50)" fg:x="22085" fg:w="70"/><text x="40.5724%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7 samples, 0.01%)</title><rect x="40.4375%" y="1525" width="0.0128%" height="15" fill="rgb(234,36,40)" fg:x="22148" fg:w="7"/><text x="40.6875%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73 samples, 0.13%)</title><rect x="40.3224%" y="1653" width="0.1333%" height="15" fill="rgb(213,64,8)" fg:x="22085" fg:w="73"/><text x="40.5724%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73 samples, 0.13%)</title><rect x="40.3224%" y="1637" width="0.1333%" height="15" fill="rgb(210,75,36)" fg:x="22085" fg:w="73"/><text x="40.5724%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (73 samples, 0.13%)</title><rect x="40.3224%" y="1621" width="0.1333%" height="15" fill="rgb(229,88,21)" fg:x="22085" fg:w="73"/><text x="40.5724%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73 samples, 0.13%)</title><rect x="40.3224%" y="1605" width="0.1333%" height="15" fill="rgb(252,204,47)" fg:x="22085" fg:w="73"/><text x="40.5724%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (80 samples, 0.15%)</title><rect x="40.3188%" y="1717" width="0.1461%" height="15" fill="rgb(208,77,27)" fg:x="22083" fg:w="80"/><text x="40.5688%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79 samples, 0.14%)</title><rect x="40.3206%" y="1701" width="0.1442%" height="15" fill="rgb(221,76,26)" fg:x="22084" fg:w="79"/><text x="40.5706%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (78 samples, 0.14%)</title><rect x="40.3224%" y="1685" width="0.1424%" height="15" fill="rgb(225,139,18)" fg:x="22085" fg:w="78"/><text x="40.5724%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78 samples, 0.14%)</title><rect x="40.3224%" y="1669" width="0.1424%" height="15" fill="rgb(230,137,11)" fg:x="22085" fg:w="78"/><text x="40.5724%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85 samples, 0.16%)</title><rect x="40.3170%" y="1781" width="0.1552%" height="15" fill="rgb(212,28,1)" fg:x="22082" fg:w="85"/><text x="40.5670%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85 samples, 0.16%)</title><rect x="40.3170%" y="1765" width="0.1552%" height="15" fill="rgb(248,164,17)" fg:x="22082" fg:w="85"/><text x="40.5670%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (85 samples, 0.16%)</title><rect x="40.3170%" y="1749" width="0.1552%" height="15" fill="rgb(222,171,42)" fg:x="22082" fg:w="85"/><text x="40.5670%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85 samples, 0.16%)</title><rect x="40.3170%" y="1733" width="0.1552%" height="15" fill="rgb(243,84,45)" fg:x="22082" fg:w="85"/><text x="40.5670%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104 samples, 0.19%)</title><rect x="40.2950%" y="1877" width="0.1899%" height="15" fill="rgb(252,49,23)" fg:x="22070" fg:w="104"/><text x="40.5450%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102 samples, 0.19%)</title><rect x="40.2987%" y="1861" width="0.1862%" height="15" fill="rgb(215,19,7)" fg:x="22072" fg:w="102"/><text x="40.5487%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101 samples, 0.18%)</title><rect x="40.3005%" y="1845" width="0.1844%" height="15" fill="rgb(238,81,41)" fg:x="22073" fg:w="101"/><text x="40.5505%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99 samples, 0.18%)</title><rect x="40.3042%" y="1829" width="0.1808%" height="15" fill="rgb(210,199,37)" fg:x="22075" fg:w="99"/><text x="40.5542%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (93 samples, 0.17%)</title><rect x="40.3151%" y="1813" width="0.1698%" height="15" fill="rgb(244,192,49)" fg:x="22081" fg:w="93"/><text x="40.5651%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92 samples, 0.17%)</title><rect x="40.3170%" y="1797" width="0.1680%" height="15" fill="rgb(226,211,11)" fg:x="22082" fg:w="92"/><text x="40.5670%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7 samples, 0.01%)</title><rect x="40.4721%" y="1781" width="0.0128%" height="15" fill="rgb(236,162,54)" fg:x="22167" fg:w="7"/><text x="40.7221%" y="1791.50"></text></g><g><title>Watcher::isIgnored (121 samples, 0.22%)</title><rect x="40.2695%" y="1925" width="0.2209%" height="15" fill="rgb(220,229,9)" fg:x="22056" fg:w="121"/><text x="40.5195%" y="1935.50"></text></g><g><title>Glob::isIgnored (117 samples, 0.21%)</title><rect x="40.2768%" y="1909" width="0.2136%" height="15" fill="rgb(250,87,22)" fg:x="22060" fg:w="117"/><text x="40.5268%" y="1919.50"></text></g><g><title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (115 samples, 0.21%)</title><rect x="40.2804%" y="1893" width="0.2100%" height="15" fill="rgb(239,43,17)" fg:x="22062" fg:w="115"/><text x="40.5304%" y="1903.50"></text></g><g><title>path_lookupat.isra.0 (10 samples, 0.02%)</title><rect x="40.5032%" y="1829" width="0.0183%" height="15" fill="rgb(231,177,25)" fg:x="22184" fg:w="10"/><text x="40.7532%" y="1839.50"></text></g><g><title>link_path_walk.part.0 (9 samples, 0.02%)</title><rect x="40.5050%" y="1813" width="0.0164%" height="15" fill="rgb(219,179,1)" fg:x="22185" fg:w="9"/><text x="40.7550%" y="1823.50"></text></g><g><title>walk_component (6 samples, 0.01%)</title><rect x="40.5105%" y="1797" width="0.0110%" height="15" fill="rgb(238,219,53)" fg:x="22188" fg:w="6"/><text x="40.7605%" y="1807.50"></text></g><g><title>filename_lookup (11 samples, 0.02%)</title><rect x="40.5032%" y="1845" width="0.0201%" height="15" fill="rgb(232,167,36)" fg:x="22184" fg:w="11"/><text x="40.7532%" y="1855.50"></text></g><g><title>__do_sys_newstat (21 samples, 0.04%)</title><rect x="40.4941%" y="1877" width="0.0383%" height="15" fill="rgb(244,19,51)" fg:x="22179" fg:w="21"/><text x="40.7441%" y="1887.50"></text></g><g><title>vfs_statx (18 samples, 0.03%)</title><rect x="40.4995%" y="1861" width="0.0329%" height="15" fill="rgb(224,6,22)" fg:x="22182" fg:w="18"/><text x="40.7495%" y="1871.50"></text></g><g><title>___xstat64 (23 samples, 0.04%)</title><rect x="40.4922%" y="1925" width="0.0420%" height="15" fill="rgb(224,145,5)" fg:x="22178" fg:w="23"/><text x="40.7422%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.04%)</title><rect x="40.4941%" y="1909" width="0.0402%" height="15" fill="rgb(234,130,49)" fg:x="22179" fg:w="22"/><text x="40.7441%" y="1919.50"></text></g><g><title>do_syscall_64 (22 samples, 0.04%)</title><rect x="40.4941%" y="1893" width="0.0402%" height="15" fill="rgb(254,6,2)" fg:x="22179" fg:w="22"/><text x="40.7441%" y="1903.50"></text></g><g><title>InotifyBackend::handleSubscription (161 samples, 0.29%)</title><rect x="40.2549%" y="1941" width="0.2940%" height="15" fill="rgb(208,96,46)" fg:x="22048" fg:w="161"/><text x="40.5049%" y="1951.50"></text></g><g><title>InotifyBackend::handleEvent (168 samples, 0.31%)</title><rect x="40.2531%" y="1957" width="0.3067%" height="15" fill="rgb(239,3,39)" fg:x="22047" fg:w="168"/><text x="40.5031%" y="1967.50"></text></g><g><title>___pthread_cond_broadcast (75 samples, 0.14%)</title><rect x="40.5616%" y="1941" width="0.1369%" height="15" fill="rgb(233,210,1)" fg:x="22216" fg:w="75"/><text x="40.8116%" y="1951.50"></text></g><g><title>futex_wake (74 samples, 0.14%)</title><rect x="40.5634%" y="1925" width="0.1351%" height="15" fill="rgb(244,137,37)" fg:x="22217" fg:w="74"/><text x="40.8134%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (74 samples, 0.14%)</title><rect x="40.5634%" y="1909" width="0.1351%" height="15" fill="rgb(240,136,2)" fg:x="22217" fg:w="74"/><text x="40.8134%" y="1919.50"></text></g><g><title>do_syscall_64 (74 samples, 0.14%)</title><rect x="40.5634%" y="1893" width="0.1351%" height="15" fill="rgb(239,18,37)" fg:x="22217" fg:w="74"/><text x="40.8134%" y="1903.50"></text></g><g><title>__x64_sys_futex (74 samples, 0.14%)</title><rect x="40.5634%" y="1877" width="0.1351%" height="15" fill="rgb(218,185,22)" fg:x="22217" fg:w="74"/><text x="40.8134%" y="1887.50"></text></g><g><title>do_futex (74 samples, 0.14%)</title><rect x="40.5634%" y="1861" width="0.1351%" height="15" fill="rgb(225,218,4)" fg:x="22217" fg:w="74"/><text x="40.8134%" y="1871.50"></text></g><g><title>futex_wake (74 samples, 0.14%)</title><rect x="40.5634%" y="1845" width="0.1351%" height="15" fill="rgb(230,182,32)" fg:x="22217" fg:w="74"/><text x="40.8134%" y="1855.50"></text></g><g><title>wake_up_q (73 samples, 0.13%)</title><rect x="40.5653%" y="1829" width="0.1333%" height="15" fill="rgb(242,56,43)" fg:x="22218" fg:w="73"/><text x="40.8153%" y="1839.50"></text></g><g><title>try_to_wake_up (72 samples, 0.13%)</title><rect x="40.5671%" y="1813" width="0.1315%" height="15" fill="rgb(233,99,24)" fg:x="22219" fg:w="72"/><text x="40.8171%" y="1823.50"></text></g><g><title>__lock_text_start (72 samples, 0.13%)</title><rect x="40.5671%" y="1797" width="0.1315%" height="15" fill="rgb(234,209,42)" fg:x="22219" fg:w="72"/><text x="40.8171%" y="1807.50"></text></g><g><title>Watcher::notify (78 samples, 0.14%)</title><rect x="40.5598%" y="1957" width="0.1424%" height="15" fill="rgb(227,7,12)" fg:x="22215" fg:w="78"/><text x="40.8098%" y="1967.50"></text></g><g><title>InotifyBackend::handleEvents (262 samples, 0.48%)</title><rect x="40.2458%" y="1973" width="0.4784%" height="15" fill="rgb(245,203,43)" fg:x="22043" fg:w="262"/><text x="40.4958%" y="1983.50"></text></g><g><title>__GI___libc_read (12 samples, 0.02%)</title><rect x="40.7022%" y="1957" width="0.0219%" height="15" fill="rgb(238,205,33)" fg:x="22293" fg:w="12"/><text x="40.9522%" y="1967.50"></text></g><g><title>__GI___libc_read (11 samples, 0.02%)</title><rect x="40.7040%" y="1941" width="0.0201%" height="15" fill="rgb(231,56,7)" fg:x="22294" fg:w="11"/><text x="40.9540%" y="1951.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.02%)</title><rect x="40.7040%" y="1925" width="0.0201%" height="15" fill="rgb(244,186,29)" fg:x="22294" fg:w="11"/><text x="40.9540%" y="1935.50"></text></g><g><title>do_syscall_64 (11 samples, 0.02%)</title><rect x="40.7040%" y="1909" width="0.0201%" height="15" fill="rgb(234,111,31)" fg:x="22294" fg:w="11"/><text x="40.9540%" y="1919.50"></text></g><g><title>ksys_read (9 samples, 0.02%)</title><rect x="40.7077%" y="1893" width="0.0164%" height="15" fill="rgb(241,149,10)" fg:x="22296" fg:w="9"/><text x="40.9577%" y="1903.50"></text></g><g><title>vfs_read (8 samples, 0.01%)</title><rect x="40.7095%" y="1877" width="0.0146%" height="15" fill="rgb(249,206,44)" fg:x="22297" fg:w="8"/><text x="40.9595%" y="1887.50"></text></g><g><title>do_sys_poll (20 samples, 0.04%)</title><rect x="40.7278%" y="1909" width="0.0365%" height="15" fill="rgb(251,153,30)" fg:x="22307" fg:w="20"/><text x="40.9778%" y="1919.50"></text></g><g><title>poll_schedule_timeout.constprop.0 (13 samples, 0.02%)</title><rect x="40.7405%" y="1893" width="0.0237%" height="15" fill="rgb(239,152,38)" fg:x="22314" fg:w="13"/><text x="40.9905%" y="1903.50"></text></g><g><title>schedule_hrtimeout_range_clock (12 samples, 0.02%)</title><rect x="40.7424%" y="1877" width="0.0219%" height="15" fill="rgb(249,139,47)" fg:x="22315" fg:w="12"/><text x="40.9924%" y="1887.50"></text></g><g><title>schedule (9 samples, 0.02%)</title><rect x="40.7478%" y="1861" width="0.0164%" height="15" fill="rgb(244,64,35)" fg:x="22318" fg:w="9"/><text x="40.9978%" y="1871.50"></text></g><g><title>__sched_text_start (9 samples, 0.02%)</title><rect x="40.7478%" y="1845" width="0.0164%" height="15" fill="rgb(216,46,15)" fg:x="22318" fg:w="9"/><text x="40.9978%" y="1855.50"></text></g><g><title>finish_task_switch (9 samples, 0.02%)</title><rect x="40.7478%" y="1829" width="0.0164%" height="15" fill="rgb(250,74,19)" fg:x="22318" fg:w="9"/><text x="40.9978%" y="1839.50"></text></g><g><title>__x64_sys_poll (21 samples, 0.04%)</title><rect x="40.7278%" y="1925" width="0.0383%" height="15" fill="rgb(249,42,33)" fg:x="22307" fg:w="21"/><text x="40.9778%" y="1935.50"></text></g><g><title>do_syscall_64 (22 samples, 0.04%)</title><rect x="40.7278%" y="1941" width="0.0402%" height="15" fill="rgb(242,149,17)" fg:x="22307" fg:w="22"/><text x="40.9778%" y="1951.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (291 samples, 0.53%)</title><rect x="40.2458%" y="2005" width="0.5313%" height="15" fill="rgb(244,29,21)" fg:x="22043" fg:w="291"/><text x="40.4958%" y="2015.50"></text></g><g><title>InotifyBackend::start (291 samples, 0.53%)</title><rect x="40.2458%" y="1989" width="0.5313%" height="15" fill="rgb(220,130,37)" fg:x="22043" fg:w="291"/><text x="40.4958%" y="1999.50"></text></g><g><title>__GI___poll (29 samples, 0.05%)</title><rect x="40.7241%" y="1973" width="0.0529%" height="15" fill="rgb(211,67,2)" fg:x="22305" fg:w="29"/><text x="40.9741%" y="1983.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.05%)</title><rect x="40.7278%" y="1957" width="0.0493%" height="15" fill="rgb(235,68,52)" fg:x="22307" fg:w="27"/><text x="40.9778%" y="1967.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.02%)</title><rect x="40.7862%" y="1893" width="0.0164%" height="15" fill="rgb(246,142,3)" fg:x="22339" fg:w="9"/><text x="41.0362%" y="1903.50"></text></g><g><title>do_futex (9 samples, 0.02%)</title><rect x="40.7862%" y="1877" width="0.0164%" height="15" fill="rgb(241,25,7)" fg:x="22339" fg:w="9"/><text x="41.0362%" y="1887.50"></text></g><g><title>futex_wait (9 samples, 0.02%)</title><rect x="40.7862%" y="1861" width="0.0164%" height="15" fill="rgb(242,119,39)" fg:x="22339" fg:w="9"/><text x="41.0362%" y="1871.50"></text></g><g><title>futex_wait_queue_me (9 samples, 0.02%)</title><rect x="40.7862%" y="1845" width="0.0164%" height="15" fill="rgb(241,98,45)" fg:x="22339" fg:w="9"/><text x="41.0362%" y="1855.50"></text></g><g><title>schedule (8 samples, 0.01%)</title><rect x="40.7880%" y="1829" width="0.0146%" height="15" fill="rgb(254,28,30)" fg:x="22340" fg:w="8"/><text x="41.0380%" y="1839.50"></text></g><g><title>__sched_text_start (8 samples, 0.01%)</title><rect x="40.7880%" y="1813" width="0.0146%" height="15" fill="rgb(241,142,54)" fg:x="22340" fg:w="8"/><text x="41.0380%" y="1823.50"></text></g><g><title>finish_task_switch (8 samples, 0.01%)</title><rect x="40.7880%" y="1797" width="0.0146%" height="15" fill="rgb(222,85,15)" fg:x="22340" fg:w="8"/><text x="41.0380%" y="1807.50"></text></g><g><title>do_syscall_64 (12 samples, 0.02%)</title><rect x="40.7844%" y="1909" width="0.0219%" height="15" fill="rgb(210,85,47)" fg:x="22338" fg:w="12"/><text x="41.0344%" y="1919.50"></text></g><g><title>___pthread_cond_timedwait64 (16 samples, 0.03%)</title><rect x="40.7844%" y="1989" width="0.0292%" height="15" fill="rgb(224,206,25)" fg:x="22338" fg:w="16"/><text x="41.0344%" y="1999.50"></text></g><g><title>__pthread_cond_wait_common (16 samples, 0.03%)</title><rect x="40.7844%" y="1973" width="0.0292%" height="15" fill="rgb(243,201,19)" fg:x="22338" fg:w="16"/><text x="41.0344%" y="1983.50"></text></g><g><title>__futex_abstimed_wait_common (16 samples, 0.03%)</title><rect x="40.7844%" y="1957" width="0.0292%" height="15" fill="rgb(236,59,4)" fg:x="22338" fg:w="16"/><text x="41.0344%" y="1967.50"></text></g><g><title>__futex_abstimed_wait_common64 (16 samples, 0.03%)</title><rect x="40.7844%" y="1941" width="0.0292%" height="15" fill="rgb(254,179,45)" fg:x="22338" fg:w="16"/><text x="41.0344%" y="1951.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.03%)</title><rect x="40.7844%" y="1925" width="0.0292%" height="15" fill="rgb(226,14,10)" fg:x="22338" fg:w="16"/><text x="41.0344%" y="1935.50"></text></g><g><title>[libstdc++.so.6.0.30] (313 samples, 0.57%)</title><rect x="40.2458%" y="2021" width="0.5715%" height="15" fill="rgb(244,27,41)" fg:x="22043" fg:w="313"/><text x="40.4958%" y="2031.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce()::{lambda()#1}&gt; &gt; &gt;::_M_run (22 samples, 0.04%)</title><rect x="40.7771%" y="2005" width="0.0402%" height="15" fill="rgb(235,35,32)" fg:x="22334" fg:w="22"/><text x="41.0271%" y="2015.50"></text></g><g><title>uv_async_send (11 samples, 0.02%)</title><rect x="40.8282%" y="2005" width="0.0201%" height="15" fill="rgb(218,68,31)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="2015.50"></text></g><g><title>uv__async_send (11 samples, 0.02%)</title><rect x="40.8282%" y="1989" width="0.0201%" height="15" fill="rgb(207,120,37)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1999.50"></text></g><g><title>__GI___libc_write (11 samples, 0.02%)</title><rect x="40.8282%" y="1973" width="0.0201%" height="15" fill="rgb(227,98,0)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1983.50"></text></g><g><title>__GI___libc_write (11 samples, 0.02%)</title><rect x="40.8282%" y="1957" width="0.0201%" height="15" fill="rgb(207,7,3)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1967.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.02%)</title><rect x="40.8282%" y="1941" width="0.0201%" height="15" fill="rgb(206,98,19)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1951.50"></text></g><g><title>do_syscall_64 (11 samples, 0.02%)</title><rect x="40.8282%" y="1925" width="0.0201%" height="15" fill="rgb(217,5,26)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1935.50"></text></g><g><title>ksys_write (11 samples, 0.02%)</title><rect x="40.8282%" y="1909" width="0.0201%" height="15" fill="rgb(235,190,38)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1919.50"></text></g><g><title>vfs_write (11 samples, 0.02%)</title><rect x="40.8282%" y="1893" width="0.0201%" height="15" fill="rgb(247,86,24)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1903.50"></text></g><g><title>eventfd_write (11 samples, 0.02%)</title><rect x="40.8282%" y="1877" width="0.0201%" height="15" fill="rgb(205,101,16)" fg:x="22362" fg:w="11"/><text x="41.0782%" y="1887.50"></text></g><g><title>clone3 (332 samples, 0.61%)</title><rect x="40.2458%" y="2053" width="0.6062%" height="15" fill="rgb(246,168,33)" fg:x="22043" fg:w="332"/><text x="40.4958%" y="2063.50"></text></g><g><title>start_thread (332 samples, 0.61%)</title><rect x="40.2458%" y="2037" width="0.6062%" height="15" fill="rgb(231,114,1)" fg:x="22043" fg:w="332"/><text x="40.4958%" y="2047.50"></text></g><g><title>worker (16 samples, 0.03%)</title><rect x="40.8227%" y="2021" width="0.0292%" height="15" fill="rgb(207,184,53)" fg:x="22359" fg:w="16"/><text x="41.0727%" y="2031.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="40.8519%" y="2053" width="0.0183%" height="15" fill="rgb(224,95,51)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="2063.50"></text></g><g><title>do_syscall_64 (10 samples, 0.02%)</title><rect x="40.8519%" y="2037" width="0.0183%" height="15" fill="rgb(212,188,45)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="2047.50"></text></g><g><title>__x64_sys_execve (10 samples, 0.02%)</title><rect x="40.8519%" y="2021" width="0.0183%" height="15" fill="rgb(223,154,38)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="2031.50"></text></g><g><title>do_execveat_common.isra.0 (10 samples, 0.02%)</title><rect x="40.8519%" y="2005" width="0.0183%" height="15" fill="rgb(251,22,52)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="2015.50"></text></g><g><title>bprm_execve (10 samples, 0.02%)</title><rect x="40.8519%" y="1989" width="0.0183%" height="15" fill="rgb(229,209,22)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="1999.50"></text></g><g><title>load_elf_binary (10 samples, 0.02%)</title><rect x="40.8519%" y="1973" width="0.0183%" height="15" fill="rgb(234,138,34)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="1983.50"></text></g><g><title>begin_new_exec (10 samples, 0.02%)</title><rect x="40.8519%" y="1957" width="0.0183%" height="15" fill="rgb(212,95,11)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="1967.50"></text></g><g><title>mmput (10 samples, 0.02%)</title><rect x="40.8519%" y="1941" width="0.0183%" height="15" fill="rgb(240,179,47)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="1951.50"></text></g><g><title>exit_mmap (10 samples, 0.02%)</title><rect x="40.8519%" y="1925" width="0.0183%" height="15" fill="rgb(240,163,11)" fg:x="22375" fg:w="10"/><text x="41.1019%" y="1935.50"></text></g><g><title>unmap_vmas (9 samples, 0.02%)</title><rect x="40.8537%" y="1909" width="0.0164%" height="15" fill="rgb(236,37,12)" fg:x="22376" fg:w="9"/><text x="41.1037%" y="1919.50"></text></g><g><title>unmap_page_range (9 samples, 0.02%)</title><rect x="40.8537%" y="1893" width="0.0164%" height="15" fill="rgb(232,164,16)" fg:x="22376" fg:w="9"/><text x="41.1037%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.02%)</title><rect x="40.8702%" y="2021" width="0.0219%" height="15" fill="rgb(244,205,15)" fg:x="22385" fg:w="12"/><text x="41.1202%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="2005" width="0.0183%" height="15" fill="rgb(223,117,47)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1989" width="0.0183%" height="15" fill="rgb(244,107,35)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1973" width="0.0183%" height="15" fill="rgb(205,140,8)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1957" width="0.0183%" height="15" fill="rgb(228,84,46)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1941" width="0.0183%" height="15" fill="rgb(254,188,9)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1925" width="0.0183%" height="15" fill="rgb(206,112,54)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1909" width="0.0183%" height="15" fill="rgb(216,84,49)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1893" width="0.0183%" height="15" fill="rgb(214,194,35)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1877" width="0.0183%" height="15" fill="rgb(249,28,3)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1861" width="0.0183%" height="15" fill="rgb(222,56,52)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1845" width="0.0183%" height="15" fill="rgb(245,217,50)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1829" width="0.0183%" height="15" fill="rgb(213,201,24)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1813" width="0.0183%" height="15" fill="rgb(248,116,28)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1797" width="0.0183%" height="15" fill="rgb(219,72,43)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1781" width="0.0183%" height="15" fill="rgb(209,138,14)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1765" width="0.0183%" height="15" fill="rgb(222,18,33)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1749" width="0.0183%" height="15" fill="rgb(213,199,7)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1733" width="0.0183%" height="15" fill="rgb(250,110,10)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1717" width="0.0183%" height="15" fill="rgb(248,123,6)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1701" width="0.0183%" height="15" fill="rgb(206,91,31)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1685" width="0.0183%" height="15" fill="rgb(211,154,13)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1669" width="0.0183%" height="15" fill="rgb(225,148,7)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1653" width="0.0183%" height="15" fill="rgb(220,160,43)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1637" width="0.0183%" height="15" fill="rgb(213,52,39)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1621" width="0.0183%" height="15" fill="rgb(243,137,7)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1605" width="0.0183%" height="15" fill="rgb(230,79,13)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1589" width="0.0183%" height="15" fill="rgb(247,105,23)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1573" width="0.0183%" height="15" fill="rgb(223,179,41)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1557" width="0.0183%" height="15" fill="rgb(218,9,34)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1541" width="0.0183%" height="15" fill="rgb(222,106,8)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1525" width="0.0183%" height="15" fill="rgb(211,220,0)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1509" width="0.0183%" height="15" fill="rgb(229,52,16)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1493" width="0.0183%" height="15" fill="rgb(212,155,18)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1477" width="0.0183%" height="15" fill="rgb(242,21,14)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1461" width="0.0183%" height="15" fill="rgb(222,19,48)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1445" width="0.0183%" height="15" fill="rgb(232,45,27)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1429" width="0.0183%" height="15" fill="rgb(249,103,42)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1413" width="0.0183%" height="15" fill="rgb(246,81,33)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1397" width="0.0183%" height="15" fill="rgb(252,33,42)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1381" width="0.0183%" height="15" fill="rgb(209,212,41)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1365" width="0.0183%" height="15" fill="rgb(207,154,6)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1349" width="0.0183%" height="15" fill="rgb(223,64,47)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1333" width="0.0183%" height="15" fill="rgb(211,161,38)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1317" width="0.0183%" height="15" fill="rgb(219,138,40)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1301" width="0.0183%" height="15" fill="rgb(241,228,46)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1285" width="0.0183%" height="15" fill="rgb(223,209,38)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1269" width="0.0183%" height="15" fill="rgb(236,164,45)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1253" width="0.0183%" height="15" fill="rgb(231,15,5)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1237" width="0.0183%" height="15" fill="rgb(252,35,15)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1221" width="0.0183%" height="15" fill="rgb(248,181,18)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1205" width="0.0183%" height="15" fill="rgb(233,39,42)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1189" width="0.0183%" height="15" fill="rgb(238,110,33)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1173" width="0.0183%" height="15" fill="rgb(233,195,10)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1157" width="0.0183%" height="15" fill="rgb(254,105,3)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1141" width="0.0183%" height="15" fill="rgb(221,225,9)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1125" width="0.0183%" height="15" fill="rgb(224,227,45)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1109" width="0.0183%" height="15" fill="rgb(229,198,43)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1093" width="0.0183%" height="15" fill="rgb(206,209,35)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1077" width="0.0183%" height="15" fill="rgb(245,195,53)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1061" width="0.0183%" height="15" fill="rgb(240,92,26)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="1045" width="0.0183%" height="15" fill="rgb(207,40,23)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1029" width="0.0183%" height="15" fill="rgb(223,111,35)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="1013" width="0.0183%" height="15" fill="rgb(229,147,28)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="997" width="0.0183%" height="15" fill="rgb(211,29,28)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="981" width="0.0183%" height="15" fill="rgb(228,72,33)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="965" width="0.0183%" height="15" fill="rgb(205,214,31)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="949" width="0.0183%" height="15" fill="rgb(224,111,15)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="933" width="0.0183%" height="15" fill="rgb(253,21,26)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="917" width="0.0183%" height="15" fill="rgb(245,139,43)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="901" width="0.0183%" height="15" fill="rgb(252,170,7)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="885" width="0.0183%" height="15" fill="rgb(231,118,14)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="869" width="0.0183%" height="15" fill="rgb(238,83,0)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="853" width="0.0183%" height="15" fill="rgb(221,39,39)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="837" width="0.0183%" height="15" fill="rgb(222,119,46)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="821" width="0.0183%" height="15" fill="rgb(222,165,49)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="805" width="0.0183%" height="15" fill="rgb(219,113,52)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="789" width="0.0183%" height="15" fill="rgb(214,7,15)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="773" width="0.0183%" height="15" fill="rgb(235,32,4)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="757" width="0.0183%" height="15" fill="rgb(238,90,54)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="741" width="0.0183%" height="15" fill="rgb(213,208,19)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="725" width="0.0183%" height="15" fill="rgb(233,156,4)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="709" width="0.0183%" height="15" fill="rgb(207,194,5)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="693" width="0.0183%" height="15" fill="rgb(206,111,30)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="677" width="0.0183%" height="15" fill="rgb(243,70,54)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="661" width="0.0183%" height="15" fill="rgb(242,28,8)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="645" width="0.0183%" height="15" fill="rgb(219,106,18)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="629" width="0.0183%" height="15" fill="rgb(244,222,10)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="613" width="0.0183%" height="15" fill="rgb(236,179,52)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="597" width="0.0183%" height="15" fill="rgb(213,23,39)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="581" width="0.0183%" height="15" fill="rgb(238,48,10)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="565" width="0.0183%" height="15" fill="rgb(251,196,23)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="549" width="0.0183%" height="15" fill="rgb(250,152,24)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="533" width="0.0183%" height="15" fill="rgb(209,150,17)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="517" width="0.0183%" height="15" fill="rgb(234,202,34)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="501" width="0.0183%" height="15" fill="rgb(253,148,53)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="485" width="0.0183%" height="15" fill="rgb(218,129,16)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="469" width="0.0183%" height="15" fill="rgb(216,85,19)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="453" width="0.0183%" height="15" fill="rgb(235,228,7)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="437" width="0.0183%" height="15" fill="rgb(245,175,0)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="421" width="0.0183%" height="15" fill="rgb(208,168,36)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="405" width="0.0183%" height="15" fill="rgb(246,171,24)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="389" width="0.0183%" height="15" fill="rgb(215,142,24)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="373" width="0.0183%" height="15" fill="rgb(250,187,7)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="357" width="0.0183%" height="15" fill="rgb(228,66,33)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="341" width="0.0183%" height="15" fill="rgb(234,215,21)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="325" width="0.0183%" height="15" fill="rgb(222,191,20)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="309" width="0.0183%" height="15" fill="rgb(245,79,54)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="293" width="0.0183%" height="15" fill="rgb(240,10,37)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="277" width="0.0183%" height="15" fill="rgb(214,192,32)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="261" width="0.0183%" height="15" fill="rgb(209,36,54)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="245" width="0.0183%" height="15" fill="rgb(220,10,11)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="229" width="0.0183%" height="15" fill="rgb(221,106,17)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="213" width="0.0183%" height="15" fill="rgb(251,142,44)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="197" width="0.0183%" height="15" fill="rgb(238,13,15)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="181" width="0.0183%" height="15" fill="rgb(208,107,27)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="165" width="0.0183%" height="15" fill="rgb(205,136,37)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="149" width="0.0183%" height="15" fill="rgb(250,205,27)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="133" width="0.0183%" height="15" fill="rgb(210,80,43)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="117" width="0.0183%" height="15" fill="rgb(247,160,36)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="101" width="0.0183%" height="15" fill="rgb(234,13,49)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10 samples, 0.02%)</title><rect x="40.8738%" y="85" width="0.0183%" height="15" fill="rgb(234,122,0)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.02%)</title><rect x="40.8738%" y="69" width="0.0183%" height="15" fill="rgb(207,146,38)" fg:x="22387" fg:w="10"/><text x="41.1238%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8 samples, 0.01%)</title><rect x="40.8775%" y="53" width="0.0146%" height="15" fill="rgb(207,177,25)" fg:x="22389" fg:w="8"/><text x="41.1275%" y="63.50"></text></g><g><title>__GI___libc_free (9 samples, 0.02%)</title><rect x="40.8939%" y="53" width="0.0164%" height="15" fill="rgb(211,178,42)" fg:x="22398" fg:w="9"/><text x="41.1439%" y="63.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="40.8939%" y="37" width="0.0164%" height="15" fill="rgb(230,69,54)" fg:x="22398" fg:w="9"/><text x="41.1439%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27 samples, 0.05%)</title><rect x="40.8702%" y="2037" width="0.0493%" height="15" fill="rgb(214,135,41)" fg:x="22385" fg:w="27"/><text x="41.1202%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="2021" width="0.0274%" height="15" fill="rgb(237,67,25)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="2005" width="0.0274%" height="15" fill="rgb(222,189,50)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1989" width="0.0274%" height="15" fill="rgb(245,148,34)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1973" width="0.0274%" height="15" fill="rgb(222,29,6)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1957" width="0.0274%" height="15" fill="rgb(221,189,43)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1941" width="0.0274%" height="15" fill="rgb(207,36,27)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1925" width="0.0274%" height="15" fill="rgb(217,90,24)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1909" width="0.0274%" height="15" fill="rgb(224,66,35)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1893" width="0.0274%" height="15" fill="rgb(221,13,50)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1877" width="0.0274%" height="15" fill="rgb(236,68,49)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1861" width="0.0274%" height="15" fill="rgb(229,146,28)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1845" width="0.0274%" height="15" fill="rgb(225,31,38)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1829" width="0.0274%" height="15" fill="rgb(250,208,3)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1813" width="0.0274%" height="15" fill="rgb(246,54,23)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1797" width="0.0274%" height="15" fill="rgb(243,76,11)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1781" width="0.0274%" height="15" fill="rgb(245,21,50)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1765" width="0.0274%" height="15" fill="rgb(228,9,43)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1749" width="0.0274%" height="15" fill="rgb(208,100,47)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1733" width="0.0274%" height="15" fill="rgb(232,26,8)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1717" width="0.0274%" height="15" fill="rgb(216,166,38)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1701" width="0.0274%" height="15" fill="rgb(251,202,51)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1685" width="0.0274%" height="15" fill="rgb(254,216,34)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1669" width="0.0274%" height="15" fill="rgb(251,32,27)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1653" width="0.0274%" height="15" fill="rgb(208,127,28)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1637" width="0.0274%" height="15" fill="rgb(224,137,22)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1621" width="0.0274%" height="15" fill="rgb(254,70,32)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1605" width="0.0274%" height="15" fill="rgb(229,75,37)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1589" width="0.0274%" height="15" fill="rgb(252,64,23)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1573" width="0.0274%" height="15" fill="rgb(232,162,48)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1557" width="0.0274%" height="15" fill="rgb(246,160,12)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1541" width="0.0274%" height="15" fill="rgb(247,166,0)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1525" width="0.0274%" height="15" fill="rgb(249,219,21)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1509" width="0.0274%" height="15" fill="rgb(205,209,3)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1493" width="0.0274%" height="15" fill="rgb(243,44,1)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1477" width="0.0274%" height="15" fill="rgb(206,159,16)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1461" width="0.0274%" height="15" fill="rgb(244,77,30)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1445" width="0.0274%" height="15" fill="rgb(218,69,12)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1429" width="0.0274%" height="15" fill="rgb(212,87,7)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1413" width="0.0274%" height="15" fill="rgb(245,114,25)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1397" width="0.0274%" height="15" fill="rgb(210,61,42)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1381" width="0.0274%" height="15" fill="rgb(211,52,33)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1365" width="0.0274%" height="15" fill="rgb(234,58,33)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1349" width="0.0274%" height="15" fill="rgb(220,115,36)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1333" width="0.0274%" height="15" fill="rgb(243,153,54)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1317" width="0.0274%" height="15" fill="rgb(251,47,18)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1301" width="0.0274%" height="15" fill="rgb(242,102,42)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1285" width="0.0274%" height="15" fill="rgb(234,31,38)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1269" width="0.0274%" height="15" fill="rgb(221,117,51)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1253" width="0.0274%" height="15" fill="rgb(212,20,18)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1237" width="0.0274%" height="15" fill="rgb(245,133,36)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1221" width="0.0274%" height="15" fill="rgb(212,6,19)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1205" width="0.0274%" height="15" fill="rgb(218,1,36)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1189" width="0.0274%" height="15" fill="rgb(246,84,54)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1173" width="0.0274%" height="15" fill="rgb(242,110,6)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1157" width="0.0274%" height="15" fill="rgb(214,47,5)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1141" width="0.0274%" height="15" fill="rgb(218,159,25)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1125" width="0.0274%" height="15" fill="rgb(215,211,28)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1109" width="0.0274%" height="15" fill="rgb(238,59,32)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1093" width="0.0274%" height="15" fill="rgb(226,82,3)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1077" width="0.0274%" height="15" fill="rgb(240,164,32)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="1061" width="0.0274%" height="15" fill="rgb(232,46,7)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1045" width="0.0274%" height="15" fill="rgb(229,129,53)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1029" width="0.0274%" height="15" fill="rgb(234,188,29)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="1013" width="0.0274%" height="15" fill="rgb(246,141,4)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="997" width="0.0274%" height="15" fill="rgb(229,23,39)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="981" width="0.0274%" height="15" fill="rgb(206,12,3)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="965" width="0.0274%" height="15" fill="rgb(252,226,20)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="949" width="0.0274%" height="15" fill="rgb(216,123,35)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="933" width="0.0274%" height="15" fill="rgb(212,68,40)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="917" width="0.0274%" height="15" fill="rgb(254,125,32)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="901" width="0.0274%" height="15" fill="rgb(253,97,22)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="885" width="0.0274%" height="15" fill="rgb(241,101,14)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="869" width="0.0274%" height="15" fill="rgb(238,103,29)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="853" width="0.0274%" height="15" fill="rgb(233,195,47)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="837" width="0.0274%" height="15" fill="rgb(246,218,30)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="821" width="0.0274%" height="15" fill="rgb(219,145,47)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="805" width="0.0274%" height="15" fill="rgb(243,12,26)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="789" width="0.0274%" height="15" fill="rgb(214,87,16)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="773" width="0.0274%" height="15" fill="rgb(208,99,42)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="757" width="0.0274%" height="15" fill="rgb(253,99,2)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="741" width="0.0274%" height="15" fill="rgb(220,168,23)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="725" width="0.0274%" height="15" fill="rgb(242,38,24)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="709" width="0.0274%" height="15" fill="rgb(225,182,9)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="693" width="0.0274%" height="15" fill="rgb(243,178,37)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="677" width="0.0274%" height="15" fill="rgb(232,139,19)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="661" width="0.0274%" height="15" fill="rgb(225,201,24)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="645" width="0.0274%" height="15" fill="rgb(221,47,46)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="629" width="0.0274%" height="15" fill="rgb(249,23,13)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="613" width="0.0274%" height="15" fill="rgb(219,9,5)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="597" width="0.0274%" height="15" fill="rgb(254,171,16)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="581" width="0.0274%" height="15" fill="rgb(230,171,20)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="565" width="0.0274%" height="15" fill="rgb(210,71,41)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="549" width="0.0274%" height="15" fill="rgb(206,173,20)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="533" width="0.0274%" height="15" fill="rgb(233,88,34)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="517" width="0.0274%" height="15" fill="rgb(223,209,46)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="501" width="0.0274%" height="15" fill="rgb(250,43,18)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="485" width="0.0274%" height="15" fill="rgb(208,13,10)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="469" width="0.0274%" height="15" fill="rgb(212,200,36)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="453" width="0.0274%" height="15" fill="rgb(225,90,30)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="437" width="0.0274%" height="15" fill="rgb(236,182,39)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="421" width="0.0274%" height="15" fill="rgb(212,144,35)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="405" width="0.0274%" height="15" fill="rgb(228,63,44)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="389" width="0.0274%" height="15" fill="rgb(228,109,6)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="373" width="0.0274%" height="15" fill="rgb(238,117,24)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="357" width="0.0274%" height="15" fill="rgb(242,26,26)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="341" width="0.0274%" height="15" fill="rgb(221,92,48)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="325" width="0.0274%" height="15" fill="rgb(209,209,32)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="309" width="0.0274%" height="15" fill="rgb(221,70,22)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="293" width="0.0274%" height="15" fill="rgb(248,145,5)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="277" width="0.0274%" height="15" fill="rgb(226,116,26)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="261" width="0.0274%" height="15" fill="rgb(244,5,17)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="245" width="0.0274%" height="15" fill="rgb(252,159,33)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="229" width="0.0274%" height="15" fill="rgb(206,71,0)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="213" width="0.0274%" height="15" fill="rgb(233,118,54)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="197" width="0.0274%" height="15" fill="rgb(234,83,48)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="181" width="0.0274%" height="15" fill="rgb(228,3,54)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="165" width="0.0274%" height="15" fill="rgb(226,155,13)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="149" width="0.0274%" height="15" fill="rgb(241,28,37)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="133" width="0.0274%" height="15" fill="rgb(233,93,10)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="117" width="0.0274%" height="15" fill="rgb(225,113,19)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (15 samples, 0.03%)</title><rect x="40.8921%" y="101" width="0.0274%" height="15" fill="rgb(241,2,18)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.03%)</title><rect x="40.8921%" y="85" width="0.0274%" height="15" fill="rgb(228,207,21)" fg:x="22397" fg:w="15"/><text x="41.1421%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (14 samples, 0.03%)</title><rect x="40.8939%" y="69" width="0.0256%" height="15" fill="rgb(213,211,35)" fg:x="22398" fg:w="14"/><text x="41.1439%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30 samples, 0.05%)</title><rect x="40.8702%" y="2053" width="0.0548%" height="15" fill="rgb(209,83,10)" fg:x="22385" fg:w="30"/><text x="41.1202%" y="2063.50"></text></g><g><title>node (560 samples, 1.02%)</title><rect x="39.9226%" y="2069" width="1.0224%" height="15" fill="rgb(209,164,1)" fg:x="21866" fg:w="560"/><text x="40.1726%" y="2079.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="2053" width="0.0201%" height="15" fill="rgb(213,184,43)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="2037" width="0.0201%" height="15" fill="rgb(231,61,34)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="2021" width="0.0201%" height="15" fill="rgb(235,75,3)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="2005" width="0.0201%" height="15" fill="rgb(220,106,47)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1989" width="0.0201%" height="15" fill="rgb(210,196,33)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1973" width="0.0201%" height="15" fill="rgb(229,154,42)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1957" width="0.0201%" height="15" fill="rgb(228,114,26)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1941" width="0.0201%" height="15" fill="rgb(208,144,1)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1925" width="0.0201%" height="15" fill="rgb(239,112,37)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1909" width="0.0201%" height="15" fill="rgb(210,96,50)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1893" width="0.0201%" height="15" fill="rgb(222,178,2)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1877" width="0.0201%" height="15" fill="rgb(226,74,18)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1861" width="0.0201%" height="15" fill="rgb(225,67,54)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1845" width="0.0201%" height="15" fill="rgb(251,92,32)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1829" width="0.0201%" height="15" fill="rgb(228,149,22)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1813" width="0.0201%" height="15" fill="rgb(243,54,13)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1797" width="0.0201%" height="15" fill="rgb(243,180,28)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1781" width="0.0201%" height="15" fill="rgb(208,167,24)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1765" width="0.0201%" height="15" fill="rgb(245,73,45)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1749" width="0.0201%" height="15" fill="rgb(237,203,48)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1733" width="0.0201%" height="15" fill="rgb(211,197,16)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1717" width="0.0201%" height="15" fill="rgb(243,99,51)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1701" width="0.0201%" height="15" fill="rgb(215,123,29)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1685" width="0.0201%" height="15" fill="rgb(239,186,37)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1669" width="0.0201%" height="15" fill="rgb(252,136,39)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1653" width="0.0201%" height="15" fill="rgb(223,213,32)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1637" width="0.0201%" height="15" fill="rgb(233,115,5)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1621" width="0.0201%" height="15" fill="rgb(207,226,44)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1605" width="0.0201%" height="15" fill="rgb(208,126,0)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1589" width="0.0201%" height="15" fill="rgb(244,66,21)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1573" width="0.0201%" height="15" fill="rgb(222,97,12)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1557" width="0.0201%" height="15" fill="rgb(219,213,19)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1541" width="0.0201%" height="15" fill="rgb(252,169,30)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1525" width="0.0201%" height="15" fill="rgb(206,32,51)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1509" width="0.0201%" height="15" fill="rgb(250,172,42)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1493" width="0.0201%" height="15" fill="rgb(209,34,43)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1477" width="0.0201%" height="15" fill="rgb(223,11,35)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1461" width="0.0201%" height="15" fill="rgb(251,219,26)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1445" width="0.0201%" height="15" fill="rgb(231,119,3)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1429" width="0.0201%" height="15" fill="rgb(216,97,11)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1413" width="0.0201%" height="15" fill="rgb(223,59,9)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1397" width="0.0201%" height="15" fill="rgb(233,93,31)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1381" width="0.0201%" height="15" fill="rgb(239,81,33)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1365" width="0.0201%" height="15" fill="rgb(213,120,34)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1349" width="0.0201%" height="15" fill="rgb(243,49,53)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1333" width="0.0201%" height="15" fill="rgb(247,216,33)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1317" width="0.0201%" height="15" fill="rgb(226,26,14)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1301" width="0.0201%" height="15" fill="rgb(215,49,53)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1285" width="0.0201%" height="15" fill="rgb(245,162,40)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1269" width="0.0201%" height="15" fill="rgb(229,68,17)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1253" width="0.0201%" height="15" fill="rgb(213,182,10)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1237" width="0.0201%" height="15" fill="rgb(245,125,30)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1221" width="0.0201%" height="15" fill="rgb(232,202,2)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1205" width="0.0201%" height="15" fill="rgb(237,140,51)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1189" width="0.0201%" height="15" fill="rgb(236,157,25)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1173" width="0.0201%" height="15" fill="rgb(219,209,0)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1157" width="0.0201%" height="15" fill="rgb(240,116,54)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1141" width="0.0201%" height="15" fill="rgb(216,10,36)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1125" width="0.0201%" height="15" fill="rgb(222,72,44)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1109" width="0.0201%" height="15" fill="rgb(232,159,9)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1093" width="0.0201%" height="15" fill="rgb(210,39,32)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1077" width="0.0201%" height="15" fill="rgb(216,194,45)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1061" width="0.0201%" height="15" fill="rgb(218,18,35)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1045" width="0.0201%" height="15" fill="rgb(207,83,51)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="1029" width="0.0201%" height="15" fill="rgb(225,63,43)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="1013" width="0.0201%" height="15" fill="rgb(207,57,36)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="997" width="0.0201%" height="15" fill="rgb(216,99,33)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="981" width="0.0201%" height="15" fill="rgb(225,42,16)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="965" width="0.0201%" height="15" fill="rgb(220,201,45)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="949" width="0.0201%" height="15" fill="rgb(225,33,4)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="933" width="0.0201%" height="15" fill="rgb(224,33,50)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="917" width="0.0201%" height="15" fill="rgb(246,198,51)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="901" width="0.0201%" height="15" fill="rgb(205,22,4)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="885" width="0.0201%" height="15" fill="rgb(206,3,8)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="869" width="0.0201%" height="15" fill="rgb(251,23,15)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="853" width="0.0201%" height="15" fill="rgb(252,88,28)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="837" width="0.0201%" height="15" fill="rgb(212,127,14)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="821" width="0.0201%" height="15" fill="rgb(247,145,37)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="805" width="0.0201%" height="15" fill="rgb(209,117,53)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="789" width="0.0201%" height="15" fill="rgb(212,90,42)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="773" width="0.0201%" height="15" fill="rgb(218,164,37)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="757" width="0.0201%" height="15" fill="rgb(246,65,34)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="741" width="0.0201%" height="15" fill="rgb(231,100,33)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="725" width="0.0201%" height="15" fill="rgb(228,126,14)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="709" width="0.0201%" height="15" fill="rgb(215,173,21)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="693" width="0.0201%" height="15" fill="rgb(210,6,40)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="677" width="0.0201%" height="15" fill="rgb(212,48,18)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="661" width="0.0201%" height="15" fill="rgb(230,214,11)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="645" width="0.0201%" height="15" fill="rgb(254,105,39)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="629" width="0.0201%" height="15" fill="rgb(245,158,5)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="613" width="0.0201%" height="15" fill="rgb(249,208,11)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="597" width="0.0201%" height="15" fill="rgb(210,39,28)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="581" width="0.0201%" height="15" fill="rgb(211,56,53)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="565" width="0.0201%" height="15" fill="rgb(226,201,30)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="549" width="0.0201%" height="15" fill="rgb(239,101,34)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="533" width="0.0201%" height="15" fill="rgb(226,209,5)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="517" width="0.0201%" height="15" fill="rgb(250,105,47)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="501" width="0.0201%" height="15" fill="rgb(230,72,3)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="485" width="0.0201%" height="15" fill="rgb(232,218,39)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="469" width="0.0201%" height="15" fill="rgb(248,166,6)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="453" width="0.0201%" height="15" fill="rgb(247,89,20)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="437" width="0.0201%" height="15" fill="rgb(248,130,54)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="421" width="0.0201%" height="15" fill="rgb(234,196,4)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="405" width="0.0201%" height="15" fill="rgb(250,143,31)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="389" width="0.0201%" height="15" fill="rgb(211,110,34)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="373" width="0.0201%" height="15" fill="rgb(215,124,48)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="357" width="0.0201%" height="15" fill="rgb(216,46,13)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="341" width="0.0201%" height="15" fill="rgb(205,184,25)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="325" width="0.0201%" height="15" fill="rgb(228,1,10)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="309" width="0.0201%" height="15" fill="rgb(213,116,27)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="293" width="0.0201%" height="15" fill="rgb(241,95,50)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="277" width="0.0201%" height="15" fill="rgb(238,48,32)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="261" width="0.0201%" height="15" fill="rgb(235,113,49)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="245" width="0.0201%" height="15" fill="rgb(205,127,43)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="229" width="0.0201%" height="15" fill="rgb(250,162,2)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="213" width="0.0201%" height="15" fill="rgb(220,13,41)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="197" width="0.0201%" height="15" fill="rgb(249,221,25)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="181" width="0.0201%" height="15" fill="rgb(215,208,19)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="165" width="0.0201%" height="15" fill="rgb(236,175,2)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="149" width="0.0201%" height="15" fill="rgb(241,52,2)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="133" width="0.0201%" height="15" fill="rgb(248,140,14)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="117" width="0.0201%" height="15" fill="rgb(253,22,42)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="101" width="0.0201%" height="15" fill="rgb(234,61,47)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="85" width="0.0201%" height="15" fill="rgb(208,226,15)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11 samples, 0.02%)</title><rect x="40.9249%" y="69" width="0.0201%" height="15" fill="rgb(217,221,4)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.02%)</title><rect x="40.9249%" y="53" width="0.0201%" height="15" fill="rgb(212,174,34)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (11 samples, 0.02%)</title><rect x="40.9249%" y="37" width="0.0201%" height="15" fill="rgb(253,83,4)" fg:x="22415" fg:w="11"/><text x="41.1749%" y="47.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (83 samples, 0.15%)</title><rect x="40.9469%" y="1557" width="0.1515%" height="15" fill="rgb(250,195,49)" fg:x="22427" fg:w="83"/><text x="41.1969%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83 samples, 0.15%)</title><rect x="40.9469%" y="1541" width="0.1515%" height="15" fill="rgb(241,192,25)" fg:x="22427" fg:w="83"/><text x="41.1969%" y="1551.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (92 samples, 0.17%)</title><rect x="40.9469%" y="2037" width="0.1680%" height="15" fill="rgb(208,124,10)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.17%)</title><rect x="40.9469%" y="2021" width="0.1680%" height="15" fill="rgb(222,33,0)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="2031.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.17%)</title><rect x="40.9469%" y="2005" width="0.1680%" height="15" fill="rgb(234,209,28)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (92 samples, 0.17%)</title><rect x="40.9469%" y="1989" width="0.1680%" height="15" fill="rgb(224,11,23)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1999.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (92 samples, 0.17%)</title><rect x="40.9469%" y="1973" width="0.1680%" height="15" fill="rgb(232,99,1)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1983.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (92 samples, 0.17%)</title><rect x="40.9469%" y="1957" width="0.1680%" height="15" fill="rgb(237,95,45)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.17%)</title><rect x="40.9469%" y="1941" width="0.1680%" height="15" fill="rgb(208,109,11)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.17%)</title><rect x="40.9469%" y="1925" width="0.1680%" height="15" fill="rgb(216,190,48)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (92 samples, 0.17%)</title><rect x="40.9469%" y="1909" width="0.1680%" height="15" fill="rgb(251,171,36)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (92 samples, 0.17%)</title><rect x="40.9469%" y="1893" width="0.1680%" height="15" fill="rgb(230,62,22)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.17%)</title><rect x="40.9469%" y="1877" width="0.1680%" height="15" fill="rgb(225,114,35)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.17%)</title><rect x="40.9469%" y="1861" width="0.1680%" height="15" fill="rgb(215,118,42)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (92 samples, 0.17%)</title><rect x="40.9469%" y="1845" width="0.1680%" height="15" fill="rgb(243,119,21)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (92 samples, 0.17%)</title><rect x="40.9469%" y="1829" width="0.1680%" height="15" fill="rgb(252,177,53)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1839.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (92 samples, 0.17%)</title><rect x="40.9469%" y="1813" width="0.1680%" height="15" fill="rgb(237,209,29)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.17%)</title><rect x="40.9469%" y="1797" width="0.1680%" height="15" fill="rgb(212,65,23)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1807.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.17%)</title><rect x="40.9469%" y="1781" width="0.1680%" height="15" fill="rgb(230,222,46)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (92 samples, 0.17%)</title><rect x="40.9469%" y="1765" width="0.1680%" height="15" fill="rgb(215,135,32)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.17%)</title><rect x="40.9469%" y="1749" width="0.1680%" height="15" fill="rgb(246,101,22)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (92 samples, 0.17%)</title><rect x="40.9469%" y="1733" width="0.1680%" height="15" fill="rgb(206,107,13)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (92 samples, 0.17%)</title><rect x="40.9469%" y="1717" width="0.1680%" height="15" fill="rgb(250,100,44)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (92 samples, 0.17%)</title><rect x="40.9469%" y="1701" width="0.1680%" height="15" fill="rgb(231,147,38)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (92 samples, 0.17%)</title><rect x="40.9469%" y="1685" width="0.1680%" height="15" fill="rgb(229,8,40)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (92 samples, 0.17%)</title><rect x="40.9469%" y="1669" width="0.1680%" height="15" fill="rgb(221,135,30)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (92 samples, 0.17%)</title><rect x="40.9469%" y="1653" width="0.1680%" height="15" fill="rgb(249,193,18)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.17%)</title><rect x="40.9469%" y="1637" width="0.1680%" height="15" fill="rgb(209,133,39)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.17%)</title><rect x="40.9469%" y="1621" width="0.1680%" height="15" fill="rgb(232,100,14)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (92 samples, 0.17%)</title><rect x="40.9469%" y="1605" width="0.1680%" height="15" fill="rgb(224,185,1)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (92 samples, 0.17%)</title><rect x="40.9469%" y="1589" width="0.1680%" height="15" fill="rgb(223,139,8)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (92 samples, 0.17%)</title><rect x="40.9469%" y="1573" width="0.1680%" height="15" fill="rgb(232,213,38)" fg:x="22427" fg:w="92"/><text x="41.1969%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (9 samples, 0.02%)</title><rect x="41.0984%" y="1557" width="0.0164%" height="15" fill="rgb(207,94,22)" fg:x="22510" fg:w="9"/><text x="41.3484%" y="1567.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (9 samples, 0.02%)</title><rect x="41.0984%" y="1541" width="0.0164%" height="15" fill="rgb(219,183,54)" fg:x="22510" fg:w="9"/><text x="41.3484%" y="1551.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (9 samples, 0.02%)</title><rect x="41.0984%" y="1525" width="0.0164%" height="15" fill="rgb(216,185,54)" fg:x="22510" fg:w="9"/><text x="41.3484%" y="1535.50"></text></g><g><title>__lock_text_start (8 samples, 0.01%)</title><rect x="41.1166%" y="1813" width="0.0146%" height="15" fill="rgb(254,217,39)" fg:x="22520" fg:w="8"/><text x="41.3666%" y="1823.50"></text></g><g><title>__pagevec_release (20 samples, 0.04%)</title><rect x="41.1166%" y="1845" width="0.0365%" height="15" fill="rgb(240,178,23)" fg:x="22520" fg:w="20"/><text x="41.3666%" y="1855.50"></text></g><g><title>release_pages (20 samples, 0.04%)</title><rect x="41.1166%" y="1829" width="0.0365%" height="15" fill="rgb(218,11,47)" fg:x="22520" fg:w="20"/><text x="41.3666%" y="1839.50"></text></g><g><title>free_unref_page_list (12 samples, 0.02%)</title><rect x="41.1313%" y="1813" width="0.0219%" height="15" fill="rgb(218,51,51)" fg:x="22528" fg:w="12"/><text x="41.3813%" y="1823.50"></text></g><g><title>block_invalidatepage (6 samples, 0.01%)</title><rect x="41.1678%" y="1829" width="0.0110%" height="15" fill="rgb(238,126,27)" fg:x="22548" fg:w="6"/><text x="41.4178%" y="1839.50"></text></g><g><title>truncate_cleanup_page (21 samples, 0.04%)</title><rect x="41.1659%" y="1845" width="0.0383%" height="15" fill="rgb(249,202,22)" fg:x="22547" fg:w="21"/><text x="41.4159%" y="1855.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (11 samples, 0.02%)</title><rect x="41.1842%" y="1829" width="0.0201%" height="15" fill="rgb(254,195,49)" fg:x="22557" fg:w="11"/><text x="41.4342%" y="1839.50"></text></g><g><title>try_to_free_buffers (9 samples, 0.02%)</title><rect x="41.1879%" y="1813" width="0.0164%" height="15" fill="rgb(208,123,14)" fg:x="22559" fg:w="9"/><text x="41.4379%" y="1823.50"></text></g><g><title>free_buffer_head (6 samples, 0.01%)</title><rect x="41.1933%" y="1797" width="0.0110%" height="15" fill="rgb(224,200,8)" fg:x="22562" fg:w="6"/><text x="41.4433%" y="1807.50"></text></g><g><title>__libc_open64 (55 samples, 0.10%)</title><rect x="41.1148%" y="2037" width="0.1004%" height="15" fill="rgb(217,61,36)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="2047.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (55 samples, 0.10%)</title><rect x="41.1148%" y="2021" width="0.1004%" height="15" fill="rgb(206,35,45)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="2031.50"></text></g><g><title>do_syscall_64 (55 samples, 0.10%)</title><rect x="41.1148%" y="2005" width="0.1004%" height="15" fill="rgb(217,65,33)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="2015.50"></text></g><g><title>do_sys_open (55 samples, 0.10%)</title><rect x="41.1148%" y="1989" width="0.1004%" height="15" fill="rgb(222,158,48)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1999.50"></text></g><g><title>do_sys_openat2 (55 samples, 0.10%)</title><rect x="41.1148%" y="1973" width="0.1004%" height="15" fill="rgb(254,2,54)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1983.50"></text></g><g><title>do_filp_open (55 samples, 0.10%)</title><rect x="41.1148%" y="1957" width="0.1004%" height="15" fill="rgb(250,143,38)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1967.50"></text></g><g><title>path_openat (55 samples, 0.10%)</title><rect x="41.1148%" y="1941" width="0.1004%" height="15" fill="rgb(248,25,0)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1951.50"></text></g><g><title>do_truncate (55 samples, 0.10%)</title><rect x="41.1148%" y="1925" width="0.1004%" height="15" fill="rgb(206,152,27)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1935.50"></text></g><g><title>notify_change (55 samples, 0.10%)</title><rect x="41.1148%" y="1909" width="0.1004%" height="15" fill="rgb(240,77,30)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1919.50"></text></g><g><title>ext4_setattr (55 samples, 0.10%)</title><rect x="41.1148%" y="1893" width="0.1004%" height="15" fill="rgb(231,5,3)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1903.50"></text></g><g><title>truncate_pagecache (55 samples, 0.10%)</title><rect x="41.1148%" y="1877" width="0.1004%" height="15" fill="rgb(207,226,32)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1887.50"></text></g><g><title>truncate_inode_pages_range (55 samples, 0.10%)</title><rect x="41.1148%" y="1861" width="0.1004%" height="15" fill="rgb(222,207,47)" fg:x="22519" fg:w="55"/><text x="41.3648%" y="1871.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="41.2152%" y="2037" width="0.0110%" height="15" fill="rgb(229,115,45)" fg:x="22574" fg:w="6"/><text x="41.4652%" y="2047.50"></text></g><g><title>down_read_trylock (14 samples, 0.03%)</title><rect x="42.2194%" y="1973" width="0.0256%" height="15" fill="rgb(224,191,6)" fg:x="23124" fg:w="14"/><text x="42.4694%" y="1983.50"></text></g><g><title>find_vma (6 samples, 0.01%)</title><rect x="42.2450%" y="1973" width="0.0110%" height="15" fill="rgb(230,227,24)" fg:x="23138" fg:w="6"/><text x="42.4950%" y="1983.50"></text></g><g><title>vmacache_find (6 samples, 0.01%)</title><rect x="42.2450%" y="1957" width="0.0110%" height="15" fill="rgb(228,80,19)" fg:x="23138" fg:w="6"/><text x="42.4950%" y="1967.50"></text></g><g><title>__alloc_pages_nodemask (1,417 samples, 2.59%)</title><rect x="42.4020%" y="1957" width="2.5871%" height="15" fill="rgb(247,229,0)" fg:x="23224" fg:w="1417"/><text x="42.6520%" y="1967.50">__..</text></g><g><title>get_page_from_freelist (1,409 samples, 2.57%)</title><rect x="42.4166%" y="1941" width="2.5725%" height="15" fill="rgb(237,194,15)" fg:x="23232" fg:w="1409"/><text x="42.6666%" y="1951.50">ge..</text></g><g><title>prep_new_page (1,323 samples, 2.42%)</title><rect x="42.5736%" y="1925" width="2.4155%" height="15" fill="rgb(219,203,20)" fg:x="23318" fg:w="1323"/><text x="42.8236%" y="1935.50">pr..</text></g><g><title>clear_page_erms (1,311 samples, 2.39%)</title><rect x="42.5955%" y="1909" width="2.3936%" height="15" fill="rgb(234,128,8)" fg:x="23330" fg:w="1311"/><text x="42.8455%" y="1919.50">cl..</text></g><g><title>_raw_spin_lock (154 samples, 0.28%)</title><rect x="44.9928%" y="1957" width="0.2812%" height="15" fill="rgb(248,202,8)" fg:x="24643" fg:w="154"/><text x="45.2428%" y="1967.50"></text></g><g><title>cgroup_throttle_swaprate (23 samples, 0.04%)</title><rect x="45.2740%" y="1957" width="0.0420%" height="15" fill="rgb(206,104,37)" fg:x="24797" fg:w="23"/><text x="45.5240%" y="1967.50"></text></g><g><title>__lock_text_start (54 samples, 0.10%)</title><rect x="45.3306%" y="1925" width="0.0986%" height="15" fill="rgb(223,8,27)" fg:x="24828" fg:w="54"/><text x="45.5806%" y="1935.50"></text></g><g><title>lru_cache_add (68 samples, 0.12%)</title><rect x="45.3160%" y="1957" width="0.1242%" height="15" fill="rgb(216,217,28)" fg:x="24820" fg:w="68"/><text x="45.5660%" y="1967.50"></text></g><g><title>pagevec_lru_move_fn (60 samples, 0.11%)</title><rect x="45.3306%" y="1941" width="0.1095%" height="15" fill="rgb(249,199,1)" fg:x="24828" fg:w="60"/><text x="45.5806%" y="1951.50"></text></g><g><title>release_pages (6 samples, 0.01%)</title><rect x="45.4292%" y="1925" width="0.0110%" height="15" fill="rgb(240,85,17)" fg:x="24882" fg:w="6"/><text x="45.6792%" y="1935.50"></text></g><g><title>get_mem_cgroup_from_mm (11 samples, 0.02%)</title><rect x="45.4821%" y="1941" width="0.0201%" height="15" fill="rgb(206,108,45)" fg:x="24911" fg:w="11"/><text x="45.7321%" y="1951.50"></text></g><g><title>mem_cgroup_charge (37 samples, 0.07%)</title><rect x="45.4456%" y="1957" width="0.0676%" height="15" fill="rgb(245,210,41)" fg:x="24891" fg:w="37"/><text x="45.6956%" y="1967.50"></text></g><g><title>try_charge (6 samples, 0.01%)</title><rect x="45.5022%" y="1941" width="0.0110%" height="15" fill="rgb(206,13,37)" fg:x="24922" fg:w="6"/><text x="45.7522%" y="1951.50"></text></g><g><title>handle_mm_fault (1,795 samples, 3.28%)</title><rect x="42.2559%" y="1973" width="3.2773%" height="15" fill="rgb(250,61,18)" fg:x="23144" fg:w="1795"/><text x="42.5059%" y="1983.50">han..</text></g><g><title>schedule (15 samples, 0.03%)</title><rect x="45.5442%" y="1957" width="0.0274%" height="15" fill="rgb(235,172,48)" fg:x="24945" fg:w="15"/><text x="45.7942%" y="1967.50"></text></g><g><title>__sched_text_start (15 samples, 0.03%)</title><rect x="45.5442%" y="1941" width="0.0274%" height="15" fill="rgb(249,201,17)" fg:x="24945" fg:w="15"/><text x="45.7942%" y="1951.50"></text></g><g><title>finish_task_switch (14 samples, 0.03%)</title><rect x="45.5460%" y="1925" width="0.0256%" height="15" fill="rgb(219,208,6)" fg:x="24946" fg:w="14"/><text x="45.7960%" y="1935.50"></text></g><g><title>rwsem_down_read_slowpath (23 samples, 0.04%)</title><rect x="45.5332%" y="1973" width="0.0420%" height="15" fill="rgb(248,31,23)" fg:x="24939" fg:w="23"/><text x="45.7832%" y="1983.50"></text></g><g><title>rwsem_wake.isra.0 (25 samples, 0.05%)</title><rect x="45.5752%" y="1973" width="0.0456%" height="15" fill="rgb(245,15,42)" fg:x="24962" fg:w="25"/><text x="45.8252%" y="1983.50"></text></g><g><title>wake_up_q (25 samples, 0.05%)</title><rect x="45.5752%" y="1957" width="0.0456%" height="15" fill="rgb(222,217,39)" fg:x="24962" fg:w="25"/><text x="45.8252%" y="1967.50"></text></g><g><title>try_to_wake_up (25 samples, 0.05%)</title><rect x="45.5752%" y="1941" width="0.0456%" height="15" fill="rgb(210,219,27)" fg:x="24962" fg:w="25"/><text x="45.8252%" y="1951.50"></text></g><g><title>__lock_text_start (25 samples, 0.05%)</title><rect x="45.5752%" y="1925" width="0.0456%" height="15" fill="rgb(252,166,36)" fg:x="24962" fg:w="25"/><text x="45.8252%" y="1935.50"></text></g><g><title>exc_page_fault (2,308 samples, 4.21%)</title><rect x="41.4270%" y="2005" width="4.2139%" height="15" fill="rgb(245,132,34)" fg:x="22690" fg:w="2308"/><text x="41.6770%" y="2015.50">exc_p..</text></g><g><title>do_user_addr_fault (2,308 samples, 4.21%)</title><rect x="41.4270%" y="1989" width="4.2139%" height="15" fill="rgb(236,54,3)" fg:x="22690" fg:w="2308"/><text x="41.6770%" y="1999.50">do_us..</text></g><g><title>up_read (11 samples, 0.02%)</title><rect x="45.6209%" y="1973" width="0.0201%" height="15" fill="rgb(241,173,43)" fg:x="24987" fg:w="11"/><text x="45.8709%" y="1983.50"></text></g><g><title>__memset_avx2_unaligned_erms (2,420 samples, 4.42%)</title><rect x="41.2262%" y="2037" width="4.4184%" height="15" fill="rgb(215,190,9)" fg:x="22580" fg:w="2420"/><text x="41.4762%" y="2047.50">__mem..</text></g><g><title>asm_exc_page_fault (2,310 samples, 4.22%)</title><rect x="41.4270%" y="2021" width="4.2176%" height="15" fill="rgb(242,101,16)" fg:x="22690" fg:w="2310"/><text x="41.6770%" y="2031.50">asm_e..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (68 samples, 0.12%)</title><rect x="45.6446%" y="1893" width="0.1242%" height="15" fill="rgb(223,190,21)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (68 samples, 0.12%)</title><rect x="45.6446%" y="1877" width="0.1242%" height="15" fill="rgb(215,228,25)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1887.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (68 samples, 0.12%)</title><rect x="45.6446%" y="1861" width="0.1242%" height="15" fill="rgb(225,36,22)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.12%)</title><rect x="45.6446%" y="1845" width="0.1242%" height="15" fill="rgb(251,106,46)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (68 samples, 0.12%)</title><rect x="45.6446%" y="1829" width="0.1242%" height="15" fill="rgb(208,90,1)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68 samples, 0.12%)</title><rect x="45.6446%" y="1813" width="0.1242%" height="15" fill="rgb(243,10,4)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.12%)</title><rect x="45.6446%" y="1797" width="0.1242%" height="15" fill="rgb(212,137,27)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.12%)</title><rect x="45.6446%" y="1781" width="0.1242%" height="15" fill="rgb(231,220,49)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.12%)</title><rect x="45.6446%" y="1765" width="0.1242%" height="15" fill="rgb(237,96,20)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1775.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (68 samples, 0.12%)</title><rect x="45.6446%" y="1749" width="0.1242%" height="15" fill="rgb(239,229,30)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (68 samples, 0.12%)</title><rect x="45.6446%" y="1733" width="0.1242%" height="15" fill="rgb(219,65,33)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (68 samples, 0.12%)</title><rect x="45.6446%" y="1717" width="0.1242%" height="15" fill="rgb(243,134,7)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (68 samples, 0.12%)</title><rect x="45.6446%" y="1701" width="0.1242%" height="15" fill="rgb(216,177,54)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (68 samples, 0.12%)</title><rect x="45.6446%" y="1685" width="0.1242%" height="15" fill="rgb(211,160,20)" fg:x="25000" fg:w="68"/><text x="45.8946%" y="1695.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="45.7578%" y="1669" width="0.0110%" height="15" fill="rgb(239,85,39)" fg:x="25062" fg:w="6"/><text x="46.0078%" y="1679.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="45.7578%" y="1653" width="0.0110%" height="15" fill="rgb(232,125,22)" fg:x="25062" fg:w="6"/><text x="46.0078%" y="1663.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="45.7578%" y="1637" width="0.0110%" height="15" fill="rgb(244,57,34)" fg:x="25062" fg:w="6"/><text x="46.0078%" y="1647.50"></text></g><g><title>handle_mm_fault (6 samples, 0.01%)</title><rect x="45.7578%" y="1621" width="0.0110%" height="15" fill="rgb(214,203,32)" fg:x="25062" fg:w="6"/><text x="46.0078%" y="1631.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (29 samples, 0.05%)</title><rect x="45.7687%" y="1893" width="0.0529%" height="15" fill="rgb(207,58,43)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.05%)</title><rect x="45.7687%" y="1877" width="0.0529%" height="15" fill="rgb(215,193,15)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.05%)</title><rect x="45.7687%" y="1861" width="0.0529%" height="15" fill="rgb(232,15,44)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.05%)</title><rect x="45.7687%" y="1845" width="0.0529%" height="15" fill="rgb(212,3,48)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1855.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (29 samples, 0.05%)</title><rect x="45.7687%" y="1829" width="0.0529%" height="15" fill="rgb(218,128,7)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.05%)</title><rect x="45.7687%" y="1813" width="0.0529%" height="15" fill="rgb(226,216,39)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.05%)</title><rect x="45.7687%" y="1797" width="0.0529%" height="15" fill="rgb(243,47,51)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.05%)</title><rect x="45.7687%" y="1781" width="0.0529%" height="15" fill="rgb(241,183,40)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.05%)</title><rect x="45.7687%" y="1765" width="0.0529%" height="15" fill="rgb(231,217,32)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29 samples, 0.05%)</title><rect x="45.7687%" y="1749" width="0.0529%" height="15" fill="rgb(229,61,38)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1759.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (29 samples, 0.05%)</title><rect x="45.7687%" y="1733" width="0.0529%" height="15" fill="rgb(225,210,5)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.05%)</title><rect x="45.7687%" y="1717" width="0.0529%" height="15" fill="rgb(231,79,45)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 0.05%)</title><rect x="45.7687%" y="1701" width="0.0529%" height="15" fill="rgb(224,100,7)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.05%)</title><rect x="45.7687%" y="1685" width="0.0529%" height="15" fill="rgb(241,198,18)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.05%)</title><rect x="45.7687%" y="1669" width="0.0529%" height="15" fill="rgb(252,97,53)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.05%)</title><rect x="45.7687%" y="1653" width="0.0529%" height="15" fill="rgb(220,88,7)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.05%)</title><rect x="45.7687%" y="1637" width="0.0529%" height="15" fill="rgb(213,176,14)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (29 samples, 0.05%)</title><rect x="45.7687%" y="1621" width="0.0529%" height="15" fill="rgb(246,73,7)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (29 samples, 0.05%)</title><rect x="45.7687%" y="1605" width="0.0529%" height="15" fill="rgb(245,64,36)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (29 samples, 0.05%)</title><rect x="45.7687%" y="1589" width="0.0529%" height="15" fill="rgb(245,80,10)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (29 samples, 0.05%)</title><rect x="45.7687%" y="1573" width="0.0529%" height="15" fill="rgb(232,107,50)" fg:x="25068" fg:w="29"/><text x="46.0187%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (136 samples, 0.25%)</title><rect x="45.6446%" y="2037" width="0.2483%" height="15" fill="rgb(253,3,0)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="2047.50"></text></g><g><title>rayon_core::registry::in_worker (136 samples, 0.25%)</title><rect x="45.6446%" y="2021" width="0.2483%" height="15" fill="rgb(212,99,53)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="2031.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (136 samples, 0.25%)</title><rect x="45.6446%" y="2005" width="0.2483%" height="15" fill="rgb(249,111,54)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (136 samples, 0.25%)</title><rect x="45.6446%" y="1989" width="0.2483%" height="15" fill="rgb(249,55,30)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (136 samples, 0.25%)</title><rect x="45.6446%" y="1973" width="0.2483%" height="15" fill="rgb(237,47,42)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (136 samples, 0.25%)</title><rect x="45.6446%" y="1957" width="0.2483%" height="15" fill="rgb(211,20,18)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (136 samples, 0.25%)</title><rect x="45.6446%" y="1941" width="0.2483%" height="15" fill="rgb(231,203,46)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (136 samples, 0.25%)</title><rect x="45.6446%" y="1925" width="0.2483%" height="15" fill="rgb(237,142,3)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (136 samples, 0.25%)</title><rect x="45.6446%" y="1909" width="0.2483%" height="15" fill="rgb(241,107,1)" fg:x="25000" fg:w="136"/><text x="45.8946%" y="1919.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (39 samples, 0.07%)</title><rect x="45.8217%" y="1893" width="0.0712%" height="15" fill="rgb(229,83,13)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (39 samples, 0.07%)</title><rect x="45.8217%" y="1877" width="0.0712%" height="15" fill="rgb(241,91,40)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.07%)</title><rect x="45.8217%" y="1861" width="0.0712%" height="15" fill="rgb(225,3,45)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1871.50"></text></g><g><title>rayon_core::registry::in_worker (39 samples, 0.07%)</title><rect x="45.8217%" y="1845" width="0.0712%" height="15" fill="rgb(244,223,14)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1855.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (39 samples, 0.07%)</title><rect x="45.8217%" y="1829" width="0.0712%" height="15" fill="rgb(224,124,37)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.07%)</title><rect x="45.8217%" y="1813" width="0.0712%" height="15" fill="rgb(251,171,30)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (39 samples, 0.07%)</title><rect x="45.8217%" y="1797" width="0.0712%" height="15" fill="rgb(236,46,54)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (39 samples, 0.07%)</title><rect x="45.8217%" y="1781" width="0.0712%" height="15" fill="rgb(245,213,5)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.07%)</title><rect x="45.8217%" y="1765" width="0.0712%" height="15" fill="rgb(230,144,27)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (39 samples, 0.07%)</title><rect x="45.8217%" y="1749" width="0.0712%" height="15" fill="rgb(220,86,6)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1759.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (39 samples, 0.07%)</title><rect x="45.8217%" y="1733" width="0.0712%" height="15" fill="rgb(240,20,13)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.07%)</title><rect x="45.8217%" y="1717" width="0.0712%" height="15" fill="rgb(217,89,34)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (39 samples, 0.07%)</title><rect x="45.8217%" y="1701" width="0.0712%" height="15" fill="rgb(229,13,5)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.07%)</title><rect x="45.8217%" y="1685" width="0.0712%" height="15" fill="rgb(244,67,35)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.07%)</title><rect x="45.8217%" y="1669" width="0.0712%" height="15" fill="rgb(221,40,2)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.07%)</title><rect x="45.8217%" y="1653" width="0.0712%" height="15" fill="rgb(237,157,21)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.07%)</title><rect x="45.8217%" y="1637" width="0.0712%" height="15" fill="rgb(222,94,11)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (39 samples, 0.07%)</title><rect x="45.8217%" y="1621" width="0.0712%" height="15" fill="rgb(249,113,6)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (39 samples, 0.07%)</title><rect x="45.8217%" y="1605" width="0.0712%" height="15" fill="rgb(238,137,36)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (39 samples, 0.07%)</title><rect x="45.8217%" y="1589" width="0.0712%" height="15" fill="rgb(210,102,26)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (39 samples, 0.07%)</title><rect x="45.8217%" y="1573" width="0.0712%" height="15" fill="rgb(218,30,30)" fg:x="25097" fg:w="39"/><text x="46.0717%" y="1583.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (95 samples, 0.17%)</title><rect x="45.8929%" y="1925" width="0.1734%" height="15" fill="rgb(214,67,26)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.17%)</title><rect x="45.8929%" y="1909" width="0.1734%" height="15" fill="rgb(251,9,53)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1919.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.17%)</title><rect x="45.8929%" y="1893" width="0.1734%" height="15" fill="rgb(228,204,25)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (95 samples, 0.17%)</title><rect x="45.8929%" y="1877" width="0.1734%" height="15" fill="rgb(207,153,8)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1887.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (95 samples, 0.17%)</title><rect x="45.8929%" y="1861" width="0.1734%" height="15" fill="rgb(242,9,16)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.17%)</title><rect x="45.8929%" y="1845" width="0.1734%" height="15" fill="rgb(217,211,10)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.17%)</title><rect x="45.8929%" y="1829" width="0.1734%" height="15" fill="rgb(219,228,52)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (95 samples, 0.17%)</title><rect x="45.8929%" y="1813" width="0.1734%" height="15" fill="rgb(231,92,29)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.17%)</title><rect x="45.8929%" y="1797" width="0.1734%" height="15" fill="rgb(232,8,23)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (95 samples, 0.17%)</title><rect x="45.8929%" y="1781" width="0.1734%" height="15" fill="rgb(216,211,34)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (95 samples, 0.17%)</title><rect x="45.8929%" y="1765" width="0.1734%" height="15" fill="rgb(236,151,0)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (95 samples, 0.17%)</title><rect x="45.8929%" y="1749" width="0.1734%" height="15" fill="rgb(209,168,3)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (95 samples, 0.17%)</title><rect x="45.8929%" y="1733" width="0.1734%" height="15" fill="rgb(208,129,28)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (95 samples, 0.17%)</title><rect x="45.8929%" y="1717" width="0.1734%" height="15" fill="rgb(229,78,22)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (95 samples, 0.17%)</title><rect x="45.8929%" y="1701" width="0.1734%" height="15" fill="rgb(228,187,13)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.17%)</title><rect x="45.8929%" y="1685" width="0.1734%" height="15" fill="rgb(240,119,24)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.17%)</title><rect x="45.8929%" y="1669" width="0.1734%" height="15" fill="rgb(209,194,42)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (95 samples, 0.17%)</title><rect x="45.8929%" y="1653" width="0.1734%" height="15" fill="rgb(247,200,46)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (95 samples, 0.17%)</title><rect x="45.8929%" y="1637" width="0.1734%" height="15" fill="rgb(218,76,16)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (95 samples, 0.17%)</title><rect x="45.8929%" y="1621" width="0.1734%" height="15" fill="rgb(225,21,48)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (95 samples, 0.17%)</title><rect x="45.8929%" y="1605" width="0.1734%" height="15" fill="rgb(239,223,50)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (95 samples, 0.17%)</title><rect x="45.8929%" y="1589" width="0.1734%" height="15" fill="rgb(244,45,21)" fg:x="25136" fg:w="95"/><text x="46.1429%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (120 samples, 0.22%)</title><rect x="46.0663%" y="1845" width="0.2191%" height="15" fill="rgb(232,33,43)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (120 samples, 0.22%)</title><rect x="46.0663%" y="1829" width="0.2191%" height="15" fill="rgb(209,8,3)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (120 samples, 0.22%)</title><rect x="46.0663%" y="1813" width="0.2191%" height="15" fill="rgb(214,25,53)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (120 samples, 0.22%)</title><rect x="46.0663%" y="1797" width="0.2191%" height="15" fill="rgb(254,186,54)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (120 samples, 0.22%)</title><rect x="46.0663%" y="1781" width="0.2191%" height="15" fill="rgb(208,174,49)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (120 samples, 0.22%)</title><rect x="46.0663%" y="1765" width="0.2191%" height="15" fill="rgb(233,191,51)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (120 samples, 0.22%)</title><rect x="46.0663%" y="1749" width="0.2191%" height="15" fill="rgb(222,134,10)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (120 samples, 0.22%)</title><rect x="46.0663%" y="1733" width="0.2191%" height="15" fill="rgb(230,226,20)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (120 samples, 0.22%)</title><rect x="46.0663%" y="1717" width="0.2191%" height="15" fill="rgb(251,111,25)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (120 samples, 0.22%)</title><rect x="46.0663%" y="1701" width="0.2191%" height="15" fill="rgb(224,40,46)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.22%)</title><rect x="46.0663%" y="1685" width="0.2191%" height="15" fill="rgb(236,108,47)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.22%)</title><rect x="46.0663%" y="1669" width="0.2191%" height="15" fill="rgb(234,93,0)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (120 samples, 0.22%)</title><rect x="46.0663%" y="1653" width="0.2191%" height="15" fill="rgb(224,213,32)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (120 samples, 0.22%)</title><rect x="46.0663%" y="1637" width="0.2191%" height="15" fill="rgb(251,11,48)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (120 samples, 0.22%)</title><rect x="46.0663%" y="1621" width="0.2191%" height="15" fill="rgb(236,173,5)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (120 samples, 0.22%)</title><rect x="46.0663%" y="1605" width="0.2191%" height="15" fill="rgb(230,95,12)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (120 samples, 0.22%)</title><rect x="46.0663%" y="1589" width="0.2191%" height="15" fill="rgb(232,209,1)" fg:x="25231" fg:w="120"/><text x="46.3163%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (107 samples, 0.20%)</title><rect x="46.2854%" y="1557" width="0.1954%" height="15" fill="rgb(232,6,1)" fg:x="25351" fg:w="107"/><text x="46.5354%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (107 samples, 0.20%)</title><rect x="46.2854%" y="1541" width="0.1954%" height="15" fill="rgb(210,224,50)" fg:x="25351" fg:w="107"/><text x="46.5354%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (33 samples, 0.06%)</title><rect x="46.4808%" y="1557" width="0.0603%" height="15" fill="rgb(228,127,35)" fg:x="25458" fg:w="33"/><text x="46.7308%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (376 samples, 0.69%)</title><rect x="45.8929%" y="1973" width="0.6865%" height="15" fill="rgb(245,102,45)" fg:x="25136" fg:w="376"/><text x="46.1429%" y="1983.50"></text></g><g><title>rayon_core::registry::in_worker (376 samples, 0.69%)</title><rect x="45.8929%" y="1957" width="0.6865%" height="15" fill="rgb(214,1,49)" fg:x="25136" fg:w="376"/><text x="46.1429%" y="1967.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (376 samples, 0.69%)</title><rect x="45.8929%" y="1941" width="0.6865%" height="15" fill="rgb(226,163,40)" fg:x="25136" fg:w="376"/><text x="46.1429%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (281 samples, 0.51%)</title><rect x="46.0663%" y="1925" width="0.5130%" height="15" fill="rgb(239,212,28)" fg:x="25231" fg:w="281"/><text x="46.3163%" y="1935.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (281 samples, 0.51%)</title><rect x="46.0663%" y="1909" width="0.5130%" height="15" fill="rgb(220,20,13)" fg:x="25231" fg:w="281"/><text x="46.3163%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (281 samples, 0.51%)</title><rect x="46.0663%" y="1893" width="0.5130%" height="15" fill="rgb(210,164,35)" fg:x="25231" fg:w="281"/><text x="46.3163%" y="1903.50"></text></g><g><title>rayon_core::registry::in_worker (281 samples, 0.51%)</title><rect x="46.0663%" y="1877" width="0.5130%" height="15" fill="rgb(248,109,41)" fg:x="25231" fg:w="281"/><text x="46.3163%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (281 samples, 0.51%)</title><rect x="46.0663%" y="1861" width="0.5130%" height="15" fill="rgb(238,23,50)" fg:x="25231" fg:w="281"/><text x="46.3163%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (161 samples, 0.29%)</title><rect x="46.2854%" y="1845" width="0.2940%" height="15" fill="rgb(211,48,49)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1855.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (161 samples, 0.29%)</title><rect x="46.2854%" y="1829" width="0.2940%" height="15" fill="rgb(223,36,21)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (161 samples, 0.29%)</title><rect x="46.2854%" y="1813" width="0.2940%" height="15" fill="rgb(207,123,46)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (161 samples, 0.29%)</title><rect x="46.2854%" y="1797" width="0.2940%" height="15" fill="rgb(240,218,32)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (161 samples, 0.29%)</title><rect x="46.2854%" y="1781" width="0.2940%" height="15" fill="rgb(252,5,43)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (161 samples, 0.29%)</title><rect x="46.2854%" y="1765" width="0.2940%" height="15" fill="rgb(252,84,19)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (161 samples, 0.29%)</title><rect x="46.2854%" y="1749" width="0.2940%" height="15" fill="rgb(243,152,39)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (161 samples, 0.29%)</title><rect x="46.2854%" y="1733" width="0.2940%" height="15" fill="rgb(234,160,15)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (161 samples, 0.29%)</title><rect x="46.2854%" y="1717" width="0.2940%" height="15" fill="rgb(237,34,20)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 0.29%)</title><rect x="46.2854%" y="1701" width="0.2940%" height="15" fill="rgb(229,97,13)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (161 samples, 0.29%)</title><rect x="46.2854%" y="1685" width="0.2940%" height="15" fill="rgb(234,71,50)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (161 samples, 0.29%)</title><rect x="46.2854%" y="1669" width="0.2940%" height="15" fill="rgb(253,155,4)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (161 samples, 0.29%)</title><rect x="46.2854%" y="1653" width="0.2940%" height="15" fill="rgb(222,185,37)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (161 samples, 0.29%)</title><rect x="46.2854%" y="1637" width="0.2940%" height="15" fill="rgb(251,177,13)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (161 samples, 0.29%)</title><rect x="46.2854%" y="1621" width="0.2940%" height="15" fill="rgb(250,179,40)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (161 samples, 0.29%)</title><rect x="46.2854%" y="1605" width="0.2940%" height="15" fill="rgb(242,44,2)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (161 samples, 0.29%)</title><rect x="46.2854%" y="1589" width="0.2940%" height="15" fill="rgb(216,177,13)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (161 samples, 0.29%)</title><rect x="46.2854%" y="1573" width="0.2940%" height="15" fill="rgb(216,106,43)" fg:x="25351" fg:w="161"/><text x="46.5354%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (21 samples, 0.04%)</title><rect x="46.5411%" y="1557" width="0.0383%" height="15" fill="rgb(216,183,2)" fg:x="25491" fg:w="21"/><text x="46.7911%" y="1567.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (21 samples, 0.04%)</title><rect x="46.5411%" y="1541" width="0.0383%" height="15" fill="rgb(249,75,3)" fg:x="25491" fg:w="21"/><text x="46.7911%" y="1551.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (21 samples, 0.04%)</title><rect x="46.5411%" y="1525" width="0.0383%" height="15" fill="rgb(219,67,39)" fg:x="25491" fg:w="21"/><text x="46.7911%" y="1535.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (100 samples, 0.18%)</title><rect x="46.5794%" y="1701" width="0.1826%" height="15" fill="rgb(253,228,2)" fg:x="25512" fg:w="100"/><text x="46.8294%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 0.18%)</title><rect x="46.5794%" y="1685" width="0.1826%" height="15" fill="rgb(235,138,27)" fg:x="25512" fg:w="100"/><text x="46.8294%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (519 samples, 0.95%)</title><rect x="45.8929%" y="2021" width="0.9476%" height="15" fill="rgb(236,97,51)" fg:x="25136" fg:w="519"/><text x="46.1429%" y="2031.50"></text></g><g><title>rayon_core::registry::in_worker (519 samples, 0.95%)</title><rect x="45.8929%" y="2005" width="0.9476%" height="15" fill="rgb(240,80,30)" fg:x="25136" fg:w="519"/><text x="46.1429%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (519 samples, 0.95%)</title><rect x="45.8929%" y="1989" width="0.9476%" height="15" fill="rgb(230,178,19)" fg:x="25136" fg:w="519"/><text x="46.1429%" y="1999.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (143 samples, 0.26%)</title><rect x="46.5794%" y="1973" width="0.2611%" height="15" fill="rgb(210,190,27)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (143 samples, 0.26%)</title><rect x="46.5794%" y="1957" width="0.2611%" height="15" fill="rgb(222,107,31)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1967.50"></text></g><g><title>rayon_core::registry::in_worker (143 samples, 0.26%)</title><rect x="46.5794%" y="1941" width="0.2611%" height="15" fill="rgb(216,127,34)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (143 samples, 0.26%)</title><rect x="46.5794%" y="1925" width="0.2611%" height="15" fill="rgb(234,116,52)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (143 samples, 0.26%)</title><rect x="46.5794%" y="1909" width="0.2611%" height="15" fill="rgb(222,124,15)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (143 samples, 0.26%)</title><rect x="46.5794%" y="1893" width="0.2611%" height="15" fill="rgb(231,179,28)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1903.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (143 samples, 0.26%)</title><rect x="46.5794%" y="1877" width="0.2611%" height="15" fill="rgb(226,93,45)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (143 samples, 0.26%)</title><rect x="46.5794%" y="1861" width="0.2611%" height="15" fill="rgb(215,8,51)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (143 samples, 0.26%)</title><rect x="46.5794%" y="1845" width="0.2611%" height="15" fill="rgb(223,106,5)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (143 samples, 0.26%)</title><rect x="46.5794%" y="1829" width="0.2611%" height="15" fill="rgb(250,191,5)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (143 samples, 0.26%)</title><rect x="46.5794%" y="1813" width="0.2611%" height="15" fill="rgb(242,132,44)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.26%)</title><rect x="46.5794%" y="1797" width="0.2611%" height="15" fill="rgb(251,152,29)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.26%)</title><rect x="46.5794%" y="1781" width="0.2611%" height="15" fill="rgb(218,179,5)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1791.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (143 samples, 0.26%)</title><rect x="46.5794%" y="1765" width="0.2611%" height="15" fill="rgb(227,67,19)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1775.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (143 samples, 0.26%)</title><rect x="46.5794%" y="1749" width="0.2611%" height="15" fill="rgb(233,119,31)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (143 samples, 0.26%)</title><rect x="46.5794%" y="1733" width="0.2611%" height="15" fill="rgb(241,120,22)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (143 samples, 0.26%)</title><rect x="46.5794%" y="1717" width="0.2611%" height="15" fill="rgb(224,102,30)" fg:x="25512" fg:w="143"/><text x="46.8294%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (43 samples, 0.08%)</title><rect x="46.7620%" y="1701" width="0.0785%" height="15" fill="rgb(210,164,37)" fg:x="25612" fg:w="43"/><text x="47.0120%" y="1711.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (43 samples, 0.08%)</title><rect x="46.7620%" y="1685" width="0.0785%" height="15" fill="rgb(226,191,16)" fg:x="25612" fg:w="43"/><text x="47.0120%" y="1695.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (43 samples, 0.08%)</title><rect x="46.7620%" y="1669" width="0.0785%" height="15" fill="rgb(214,40,45)" fg:x="25612" fg:w="43"/><text x="47.0120%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (761 samples, 1.39%)</title><rect x="46.8405%" y="1989" width="1.3894%" height="15" fill="rgb(244,29,26)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1999.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (761 samples, 1.39%)</title><rect x="46.8405%" y="1973" width="1.3894%" height="15" fill="rgb(216,16,5)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (761 samples, 1.39%)</title><rect x="46.8405%" y="1957" width="1.3894%" height="15" fill="rgb(249,76,35)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1967.50"></text></g><g><title>core::iter::adapters::try_process (761 samples, 1.39%)</title><rect x="46.8405%" y="1941" width="1.3894%" height="15" fill="rgb(207,11,44)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (761 samples, 1.39%)</title><rect x="46.8405%" y="1925" width="1.3894%" height="15" fill="rgb(228,190,49)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (761 samples, 1.39%)</title><rect x="46.8405%" y="1909" width="1.3894%" height="15" fill="rgb(214,173,12)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1919.50"></text></g><g><title>parquet2::write::compression::compress (761 samples, 1.39%)</title><rect x="46.8405%" y="1893" width="1.3894%" height="15" fill="rgb(218,26,35)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1903.50"></text></g><g><title>parquet2::compression::compress (761 samples, 1.39%)</title><rect x="46.8405%" y="1877" width="1.3894%" height="15" fill="rgb(220,200,19)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1887.50"></text></g><g><title>snap::compress::Encoder::compress (761 samples, 1.39%)</title><rect x="46.8405%" y="1861" width="1.3894%" height="15" fill="rgb(239,95,49)" fg:x="25655" fg:w="761"/><text x="47.0905%" y="1871.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (73 samples, 0.13%)</title><rect x="48.2299%" y="1669" width="0.1333%" height="15" fill="rgb(235,85,53)" fg:x="26416" fg:w="73"/><text x="48.4799%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.13%)</title><rect x="48.2299%" y="1653" width="0.1333%" height="15" fill="rgb(233,133,31)" fg:x="26416" fg:w="73"/><text x="48.4799%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (52 samples, 0.09%)</title><rect x="48.3632%" y="1669" width="0.0949%" height="15" fill="rgb(218,25,20)" fg:x="26489" fg:w="52"/><text x="48.6132%" y="1679.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (171 samples, 0.31%)</title><rect x="48.2299%" y="1957" width="0.3122%" height="15" fill="rgb(252,210,38)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (171 samples, 0.31%)</title><rect x="48.2299%" y="1941" width="0.3122%" height="15" fill="rgb(242,134,21)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (171 samples, 0.31%)</title><rect x="48.2299%" y="1925" width="0.3122%" height="15" fill="rgb(213,28,48)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (171 samples, 0.31%)</title><rect x="48.2299%" y="1909" width="0.3122%" height="15" fill="rgb(250,196,2)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (171 samples, 0.31%)</title><rect x="48.2299%" y="1893" width="0.3122%" height="15" fill="rgb(227,5,17)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (171 samples, 0.31%)</title><rect x="48.2299%" y="1877" width="0.3122%" height="15" fill="rgb(221,226,24)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (171 samples, 0.31%)</title><rect x="48.2299%" y="1861" width="0.3122%" height="15" fill="rgb(211,5,48)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1871.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (171 samples, 0.31%)</title><rect x="48.2299%" y="1845" width="0.3122%" height="15" fill="rgb(219,150,6)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (171 samples, 0.31%)</title><rect x="48.2299%" y="1829" width="0.3122%" height="15" fill="rgb(251,46,16)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (171 samples, 0.31%)</title><rect x="48.2299%" y="1813" width="0.3122%" height="15" fill="rgb(220,204,40)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (171 samples, 0.31%)</title><rect x="48.2299%" y="1797" width="0.3122%" height="15" fill="rgb(211,85,2)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (171 samples, 0.31%)</title><rect x="48.2299%" y="1781" width="0.3122%" height="15" fill="rgb(229,17,7)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.31%)</title><rect x="48.2299%" y="1765" width="0.3122%" height="15" fill="rgb(239,72,28)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.31%)</title><rect x="48.2299%" y="1749" width="0.3122%" height="15" fill="rgb(230,47,54)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (171 samples, 0.31%)</title><rect x="48.2299%" y="1733" width="0.3122%" height="15" fill="rgb(214,50,8)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (171 samples, 0.31%)</title><rect x="48.2299%" y="1717" width="0.3122%" height="15" fill="rgb(216,198,43)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (171 samples, 0.31%)</title><rect x="48.2299%" y="1701" width="0.3122%" height="15" fill="rgb(234,20,35)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (171 samples, 0.31%)</title><rect x="48.2299%" y="1685" width="0.3122%" height="15" fill="rgb(254,45,19)" fg:x="26416" fg:w="171"/><text x="48.4799%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (46 samples, 0.08%)</title><rect x="48.4581%" y="1669" width="0.0840%" height="15" fill="rgb(219,14,44)" fg:x="26541" fg:w="46"/><text x="48.7081%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (46 samples, 0.08%)</title><rect x="48.4581%" y="1653" width="0.0840%" height="15" fill="rgb(217,220,26)" fg:x="26541" fg:w="46"/><text x="48.7081%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (46 samples, 0.08%)</title><rect x="48.4581%" y="1637" width="0.0840%" height="15" fill="rgb(213,158,28)" fg:x="26541" fg:w="46"/><text x="48.7081%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (36 samples, 0.07%)</title><rect x="48.5421%" y="1669" width="0.0657%" height="15" fill="rgb(252,51,52)" fg:x="26587" fg:w="36"/><text x="48.7921%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.07%)</title><rect x="48.5421%" y="1653" width="0.0657%" height="15" fill="rgb(246,89,16)" fg:x="26587" fg:w="36"/><text x="48.7921%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (21 samples, 0.04%)</title><rect x="48.6078%" y="1669" width="0.0383%" height="15" fill="rgb(216,158,49)" fg:x="26623" fg:w="21"/><text x="48.8578%" y="1679.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,003 samples, 1.83%)</title><rect x="46.8405%" y="2021" width="1.8313%" height="15" fill="rgb(236,107,19)" fg:x="25655" fg:w="1003"/><text x="47.0905%" y="2031.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,003 samples, 1.83%)</title><rect x="46.8405%" y="2005" width="1.8313%" height="15" fill="rgb(228,185,30)" fg:x="25655" fg:w="1003"/><text x="47.0905%" y="2015.50">r..</text></g><g><title>rayon_core::registry::in_worker (242 samples, 0.44%)</title><rect x="48.2299%" y="1989" width="0.4418%" height="15" fill="rgb(246,134,8)" fg:x="26416" fg:w="242"/><text x="48.4799%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (242 samples, 0.44%)</title><rect x="48.2299%" y="1973" width="0.4418%" height="15" fill="rgb(214,143,50)" fg:x="26416" fg:w="242"/><text x="48.4799%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (71 samples, 0.13%)</title><rect x="48.5421%" y="1957" width="0.1296%" height="15" fill="rgb(228,75,8)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1967.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (71 samples, 0.13%)</title><rect x="48.5421%" y="1941" width="0.1296%" height="15" fill="rgb(207,175,4)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.13%)</title><rect x="48.5421%" y="1925" width="0.1296%" height="15" fill="rgb(205,108,24)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (71 samples, 0.13%)</title><rect x="48.5421%" y="1909" width="0.1296%" height="15" fill="rgb(244,120,49)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (71 samples, 0.13%)</title><rect x="48.5421%" y="1893" width="0.1296%" height="15" fill="rgb(223,47,38)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.13%)</title><rect x="48.5421%" y="1877" width="0.1296%" height="15" fill="rgb(229,179,11)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (71 samples, 0.13%)</title><rect x="48.5421%" y="1861" width="0.1296%" height="15" fill="rgb(231,122,1)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1871.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (71 samples, 0.13%)</title><rect x="48.5421%" y="1845" width="0.1296%" height="15" fill="rgb(245,119,9)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.13%)</title><rect x="48.5421%" y="1829" width="0.1296%" height="15" fill="rgb(241,163,25)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (71 samples, 0.13%)</title><rect x="48.5421%" y="1813" width="0.1296%" height="15" fill="rgb(217,214,3)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 0.13%)</title><rect x="48.5421%" y="1797" width="0.1296%" height="15" fill="rgb(240,86,28)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71 samples, 0.13%)</title><rect x="48.5421%" y="1781" width="0.1296%" height="15" fill="rgb(215,47,9)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.13%)</title><rect x="48.5421%" y="1765" width="0.1296%" height="15" fill="rgb(252,25,45)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.13%)</title><rect x="48.5421%" y="1749" width="0.1296%" height="15" fill="rgb(251,164,9)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (71 samples, 0.13%)</title><rect x="48.5421%" y="1733" width="0.1296%" height="15" fill="rgb(233,194,0)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (71 samples, 0.13%)</title><rect x="48.5421%" y="1717" width="0.1296%" height="15" fill="rgb(249,111,24)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (71 samples, 0.13%)</title><rect x="48.5421%" y="1701" width="0.1296%" height="15" fill="rgb(250,223,3)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (71 samples, 0.13%)</title><rect x="48.5421%" y="1685" width="0.1296%" height="15" fill="rgb(236,178,37)" fg:x="26587" fg:w="71"/><text x="48.7921%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (14 samples, 0.03%)</title><rect x="48.6462%" y="1669" width="0.0256%" height="15" fill="rgb(241,158,50)" fg:x="26644" fg:w="14"/><text x="48.8962%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (14 samples, 0.03%)</title><rect x="48.6462%" y="1653" width="0.0256%" height="15" fill="rgb(213,121,41)" fg:x="26644" fg:w="14"/><text x="48.8962%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (14 samples, 0.03%)</title><rect x="48.6462%" y="1637" width="0.0256%" height="15" fill="rgb(240,92,3)" fg:x="26644" fg:w="14"/><text x="48.8962%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (115 samples, 0.21%)</title><rect x="48.6717%" y="1973" width="0.2100%" height="15" fill="rgb(205,123,3)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1983.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (115 samples, 0.21%)</title><rect x="48.6717%" y="1957" width="0.2100%" height="15" fill="rgb(205,97,47)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (115 samples, 0.21%)</title><rect x="48.6717%" y="1941" width="0.2100%" height="15" fill="rgb(247,152,14)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1951.50"></text></g><g><title>core::iter::adapters::try_process (115 samples, 0.21%)</title><rect x="48.6717%" y="1925" width="0.2100%" height="15" fill="rgb(248,195,53)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (115 samples, 0.21%)</title><rect x="48.6717%" y="1909" width="0.2100%" height="15" fill="rgb(226,201,16)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (115 samples, 0.21%)</title><rect x="48.6717%" y="1893" width="0.2100%" height="15" fill="rgb(205,98,0)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1903.50"></text></g><g><title>parquet2::write::compression::compress (115 samples, 0.21%)</title><rect x="48.6717%" y="1877" width="0.2100%" height="15" fill="rgb(214,191,48)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1887.50"></text></g><g><title>parquet2::compression::compress (115 samples, 0.21%)</title><rect x="48.6717%" y="1861" width="0.2100%" height="15" fill="rgb(237,112,39)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1871.50"></text></g><g><title>snap::compress::Encoder::compress (115 samples, 0.21%)</title><rect x="48.6717%" y="1845" width="0.2100%" height="15" fill="rgb(247,203,27)" fg:x="26658" fg:w="115"/><text x="48.9217%" y="1855.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (96 samples, 0.18%)</title><rect x="48.8817%" y="1669" width="0.1753%" height="15" fill="rgb(235,124,28)" fg:x="26773" fg:w="96"/><text x="49.1317%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96 samples, 0.18%)</title><rect x="48.8817%" y="1653" width="0.1753%" height="15" fill="rgb(208,207,46)" fg:x="26773" fg:w="96"/><text x="49.1317%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (56 samples, 0.10%)</title><rect x="49.0570%" y="1669" width="0.1022%" height="15" fill="rgb(234,176,4)" fg:x="26869" fg:w="56"/><text x="49.3070%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (193 samples, 0.35%)</title><rect x="48.8817%" y="1941" width="0.3524%" height="15" fill="rgb(230,133,28)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (193 samples, 0.35%)</title><rect x="48.8817%" y="1925" width="0.3524%" height="15" fill="rgb(211,137,40)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (193 samples, 0.35%)</title><rect x="48.8817%" y="1909" width="0.3524%" height="15" fill="rgb(254,35,13)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (193 samples, 0.35%)</title><rect x="48.8817%" y="1893" width="0.3524%" height="15" fill="rgb(225,49,51)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (193 samples, 0.35%)</title><rect x="48.8817%" y="1877" width="0.3524%" height="15" fill="rgb(251,10,15)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (193 samples, 0.35%)</title><rect x="48.8817%" y="1861" width="0.3524%" height="15" fill="rgb(228,207,15)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1871.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (193 samples, 0.35%)</title><rect x="48.8817%" y="1845" width="0.3524%" height="15" fill="rgb(241,99,19)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (193 samples, 0.35%)</title><rect x="48.8817%" y="1829" width="0.3524%" height="15" fill="rgb(207,104,49)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (193 samples, 0.35%)</title><rect x="48.8817%" y="1813" width="0.3524%" height="15" fill="rgb(234,99,18)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (193 samples, 0.35%)</title><rect x="48.8817%" y="1797" width="0.3524%" height="15" fill="rgb(213,191,49)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (193 samples, 0.35%)</title><rect x="48.8817%" y="1781" width="0.3524%" height="15" fill="rgb(210,226,19)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.35%)</title><rect x="48.8817%" y="1765" width="0.3524%" height="15" fill="rgb(229,97,18)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.35%)</title><rect x="48.8817%" y="1749" width="0.3524%" height="15" fill="rgb(211,167,15)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (193 samples, 0.35%)</title><rect x="48.8817%" y="1733" width="0.3524%" height="15" fill="rgb(210,169,34)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (193 samples, 0.35%)</title><rect x="48.8817%" y="1717" width="0.3524%" height="15" fill="rgb(241,121,31)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (193 samples, 0.35%)</title><rect x="48.8817%" y="1701" width="0.3524%" height="15" fill="rgb(232,40,11)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (193 samples, 0.35%)</title><rect x="48.8817%" y="1685" width="0.3524%" height="15" fill="rgb(205,86,26)" fg:x="26773" fg:w="193"/><text x="49.1317%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (41 samples, 0.07%)</title><rect x="49.1592%" y="1669" width="0.0749%" height="15" fill="rgb(231,126,28)" fg:x="26925" fg:w="41"/><text x="49.4092%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (41 samples, 0.07%)</title><rect x="49.1592%" y="1653" width="0.0749%" height="15" fill="rgb(219,221,18)" fg:x="26925" fg:w="41"/><text x="49.4092%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (41 samples, 0.07%)</title><rect x="49.1592%" y="1637" width="0.0749%" height="15" fill="rgb(211,40,0)" fg:x="26925" fg:w="41"/><text x="49.4092%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (46 samples, 0.08%)</title><rect x="49.2341%" y="1653" width="0.0840%" height="15" fill="rgb(239,85,43)" fg:x="26966" fg:w="46"/><text x="49.4841%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.08%)</title><rect x="49.2341%" y="1637" width="0.0840%" height="15" fill="rgb(231,55,21)" fg:x="26966" fg:w="46"/><text x="49.4841%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,903 samples, 3.47%)</title><rect x="45.8929%" y="2037" width="3.4745%" height="15" fill="rgb(225,184,43)" fg:x="25136" fg:w="1903"/><text x="46.1429%" y="2047.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (381 samples, 0.70%)</title><rect x="48.6717%" y="2021" width="0.6956%" height="15" fill="rgb(251,158,41)" fg:x="26658" fg:w="381"/><text x="48.9217%" y="2031.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (381 samples, 0.70%)</title><rect x="48.6717%" y="2005" width="0.6956%" height="15" fill="rgb(234,159,37)" fg:x="26658" fg:w="381"/><text x="48.9217%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (381 samples, 0.70%)</title><rect x="48.6717%" y="1989" width="0.6956%" height="15" fill="rgb(216,204,22)" fg:x="26658" fg:w="381"/><text x="48.9217%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (266 samples, 0.49%)</title><rect x="48.8817%" y="1973" width="0.4857%" height="15" fill="rgb(214,17,3)" fg:x="26773" fg:w="266"/><text x="49.1317%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (266 samples, 0.49%)</title><rect x="48.8817%" y="1957" width="0.4857%" height="15" fill="rgb(212,111,17)" fg:x="26773" fg:w="266"/><text x="49.1317%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (73 samples, 0.13%)</title><rect x="49.2341%" y="1941" width="0.1333%" height="15" fill="rgb(221,157,24)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1951.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (73 samples, 0.13%)</title><rect x="49.2341%" y="1925" width="0.1333%" height="15" fill="rgb(252,16,13)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (73 samples, 0.13%)</title><rect x="49.2341%" y="1909" width="0.1333%" height="15" fill="rgb(221,62,2)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1919.50"></text></g><g><title>rayon_core::registry::in_worker (73 samples, 0.13%)</title><rect x="49.2341%" y="1893" width="0.1333%" height="15" fill="rgb(247,87,22)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (73 samples, 0.13%)</title><rect x="49.2341%" y="1877" width="0.1333%" height="15" fill="rgb(215,73,9)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (73 samples, 0.13%)</title><rect x="49.2341%" y="1861" width="0.1333%" height="15" fill="rgb(207,175,33)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (73 samples, 0.13%)</title><rect x="49.2341%" y="1845" width="0.1333%" height="15" fill="rgb(243,129,54)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1855.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (73 samples, 0.13%)</title><rect x="49.2341%" y="1829" width="0.1333%" height="15" fill="rgb(227,119,45)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.13%)</title><rect x="49.2341%" y="1813" width="0.1333%" height="15" fill="rgb(205,109,36)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1823.50"></text></g><g><title>core::iter::adapters::try_process (73 samples, 0.13%)</title><rect x="49.2341%" y="1797" width="0.1333%" height="15" fill="rgb(205,6,39)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (73 samples, 0.13%)</title><rect x="49.2341%" y="1781" width="0.1333%" height="15" fill="rgb(221,32,16)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 0.13%)</title><rect x="49.2341%" y="1765" width="0.1333%" height="15" fill="rgb(228,144,50)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.13%)</title><rect x="49.2341%" y="1749" width="0.1333%" height="15" fill="rgb(229,201,53)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.13%)</title><rect x="49.2341%" y="1733" width="0.1333%" height="15" fill="rgb(249,153,27)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (73 samples, 0.13%)</title><rect x="49.2341%" y="1717" width="0.1333%" height="15" fill="rgb(227,106,25)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (73 samples, 0.13%)</title><rect x="49.2341%" y="1701" width="0.1333%" height="15" fill="rgb(230,65,29)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (73 samples, 0.13%)</title><rect x="49.2341%" y="1685" width="0.1333%" height="15" fill="rgb(221,57,46)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (73 samples, 0.13%)</title><rect x="49.2341%" y="1669" width="0.1333%" height="15" fill="rgb(229,161,17)" fg:x="26966" fg:w="73"/><text x="49.4841%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (27 samples, 0.05%)</title><rect x="49.3181%" y="1653" width="0.0493%" height="15" fill="rgb(222,213,11)" fg:x="27012" fg:w="27"/><text x="49.5681%" y="1663.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (112 samples, 0.20%)</title><rect x="49.3674%" y="1973" width="0.2045%" height="15" fill="rgb(235,35,13)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1983.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (112 samples, 0.20%)</title><rect x="49.3674%" y="1957" width="0.2045%" height="15" fill="rgb(233,158,34)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (112 samples, 0.20%)</title><rect x="49.3674%" y="1941" width="0.2045%" height="15" fill="rgb(215,151,48)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1951.50"></text></g><g><title>core::iter::adapters::try_process (112 samples, 0.20%)</title><rect x="49.3674%" y="1925" width="0.2045%" height="15" fill="rgb(229,84,14)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (112 samples, 0.20%)</title><rect x="49.3674%" y="1909" width="0.2045%" height="15" fill="rgb(229,68,14)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 0.20%)</title><rect x="49.3674%" y="1893" width="0.2045%" height="15" fill="rgb(243,106,26)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1903.50"></text></g><g><title>parquet2::write::compression::compress (112 samples, 0.20%)</title><rect x="49.3674%" y="1877" width="0.2045%" height="15" fill="rgb(206,45,38)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1887.50"></text></g><g><title>parquet2::compression::compress (112 samples, 0.20%)</title><rect x="49.3674%" y="1861" width="0.2045%" height="15" fill="rgb(226,6,15)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1871.50"></text></g><g><title>snap::compress::Encoder::compress (112 samples, 0.20%)</title><rect x="49.3674%" y="1845" width="0.2045%" height="15" fill="rgb(232,22,54)" fg:x="27039" fg:w="112"/><text x="49.6174%" y="1855.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (113 samples, 0.21%)</title><rect x="49.5719%" y="1589" width="0.2063%" height="15" fill="rgb(229,222,32)" fg:x="27151" fg:w="113"/><text x="49.8219%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (113 samples, 0.21%)</title><rect x="49.5719%" y="1573" width="0.2063%" height="15" fill="rgb(228,62,29)" fg:x="27151" fg:w="113"/><text x="49.8219%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (34 samples, 0.06%)</title><rect x="49.7782%" y="1589" width="0.0621%" height="15" fill="rgb(251,103,34)" fg:x="27264" fg:w="34"/><text x="50.0282%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (175 samples, 0.32%)</title><rect x="49.5719%" y="1893" width="0.3195%" height="15" fill="rgb(233,12,30)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1903.50"></text></g><g><title>rayon_core::registry::in_worker (175 samples, 0.32%)</title><rect x="49.5719%" y="1877" width="0.3195%" height="15" fill="rgb(238,52,0)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (175 samples, 0.32%)</title><rect x="49.5719%" y="1861" width="0.3195%" height="15" fill="rgb(223,98,5)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (175 samples, 0.32%)</title><rect x="49.5719%" y="1845" width="0.3195%" height="15" fill="rgb(228,75,37)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (175 samples, 0.32%)</title><rect x="49.5719%" y="1829" width="0.3195%" height="15" fill="rgb(205,115,49)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (175 samples, 0.32%)</title><rect x="49.5719%" y="1813" width="0.3195%" height="15" fill="rgb(250,154,43)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1823.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (175 samples, 0.32%)</title><rect x="49.5719%" y="1797" width="0.3195%" height="15" fill="rgb(226,43,29)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (175 samples, 0.32%)</title><rect x="49.5719%" y="1781" width="0.3195%" height="15" fill="rgb(249,228,39)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (175 samples, 0.32%)</title><rect x="49.5719%" y="1765" width="0.3195%" height="15" fill="rgb(216,79,43)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (175 samples, 0.32%)</title><rect x="49.5719%" y="1749" width="0.3195%" height="15" fill="rgb(228,95,12)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (175 samples, 0.32%)</title><rect x="49.5719%" y="1733" width="0.3195%" height="15" fill="rgb(249,221,15)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (175 samples, 0.32%)</title><rect x="49.5719%" y="1717" width="0.3195%" height="15" fill="rgb(233,34,13)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (175 samples, 0.32%)</title><rect x="49.5719%" y="1701" width="0.3195%" height="15" fill="rgb(214,103,39)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (175 samples, 0.32%)</title><rect x="49.5719%" y="1685" width="0.3195%" height="15" fill="rgb(251,126,39)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.32%)</title><rect x="49.5719%" y="1669" width="0.3195%" height="15" fill="rgb(214,216,36)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.32%)</title><rect x="49.5719%" y="1653" width="0.3195%" height="15" fill="rgb(220,221,8)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (175 samples, 0.32%)</title><rect x="49.5719%" y="1637" width="0.3195%" height="15" fill="rgb(240,216,3)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (175 samples, 0.32%)</title><rect x="49.5719%" y="1621" width="0.3195%" height="15" fill="rgb(232,218,17)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (175 samples, 0.32%)</title><rect x="49.5719%" y="1605" width="0.3195%" height="15" fill="rgb(229,163,45)" fg:x="27151" fg:w="175"/><text x="49.8219%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (28 samples, 0.05%)</title><rect x="49.8402%" y="1589" width="0.0511%" height="15" fill="rgb(231,110,42)" fg:x="27298" fg:w="28"/><text x="50.0902%" y="1599.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (28 samples, 0.05%)</title><rect x="49.8402%" y="1573" width="0.0511%" height="15" fill="rgb(208,170,48)" fg:x="27298" fg:w="28"/><text x="50.0902%" y="1583.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (28 samples, 0.05%)</title><rect x="49.8402%" y="1557" width="0.0511%" height="15" fill="rgb(239,116,25)" fg:x="27298" fg:w="28"/><text x="50.0902%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (43 samples, 0.08%)</title><rect x="49.8914%" y="1669" width="0.0785%" height="15" fill="rgb(219,200,50)" fg:x="27326" fg:w="43"/><text x="50.1414%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.08%)</title><rect x="49.8914%" y="1653" width="0.0785%" height="15" fill="rgb(245,200,0)" fg:x="27326" fg:w="43"/><text x="50.1414%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (29 samples, 0.05%)</title><rect x="49.9699%" y="1669" width="0.0529%" height="15" fill="rgb(245,119,33)" fg:x="27369" fg:w="29"/><text x="50.2199%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (90 samples, 0.16%)</title><rect x="49.8914%" y="1861" width="0.1643%" height="15" fill="rgb(231,125,12)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1871.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (90 samples, 0.16%)</title><rect x="49.8914%" y="1845" width="0.1643%" height="15" fill="rgb(216,96,41)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90 samples, 0.16%)</title><rect x="49.8914%" y="1829" width="0.1643%" height="15" fill="rgb(248,43,45)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (90 samples, 0.16%)</title><rect x="49.8914%" y="1813" width="0.1643%" height="15" fill="rgb(217,222,7)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (90 samples, 0.16%)</title><rect x="49.8914%" y="1797" width="0.1643%" height="15" fill="rgb(233,28,6)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 0.16%)</title><rect x="49.8914%" y="1781" width="0.1643%" height="15" fill="rgb(231,218,15)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.16%)</title><rect x="49.8914%" y="1765" width="0.1643%" height="15" fill="rgb(226,171,48)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.16%)</title><rect x="49.8914%" y="1749" width="0.1643%" height="15" fill="rgb(235,201,9)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (90 samples, 0.16%)</title><rect x="49.8914%" y="1733" width="0.1643%" height="15" fill="rgb(217,80,15)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (90 samples, 0.16%)</title><rect x="49.8914%" y="1717" width="0.1643%" height="15" fill="rgb(219,152,8)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (90 samples, 0.16%)</title><rect x="49.8914%" y="1701" width="0.1643%" height="15" fill="rgb(243,107,38)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (90 samples, 0.16%)</title><rect x="49.8914%" y="1685" width="0.1643%" height="15" fill="rgb(231,17,5)" fg:x="27326" fg:w="90"/><text x="50.1414%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (18 samples, 0.03%)</title><rect x="50.0228%" y="1669" width="0.0329%" height="15" fill="rgb(209,25,54)" fg:x="27398" fg:w="18"/><text x="50.2728%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (18 samples, 0.03%)</title><rect x="50.0228%" y="1653" width="0.0329%" height="15" fill="rgb(219,0,2)" fg:x="27398" fg:w="18"/><text x="50.2728%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (18 samples, 0.03%)</title><rect x="50.0228%" y="1637" width="0.0329%" height="15" fill="rgb(246,9,5)" fg:x="27398" fg:w="18"/><text x="50.2728%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (113 samples, 0.21%)</title><rect x="50.0557%" y="1557" width="0.2063%" height="15" fill="rgb(226,159,4)" fg:x="27416" fg:w="113"/><text x="50.3057%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (114 samples, 0.21%)</title><rect x="50.0557%" y="1573" width="0.2081%" height="15" fill="rgb(219,175,34)" fg:x="27416" fg:w="114"/><text x="50.3057%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (28 samples, 0.05%)</title><rect x="50.2638%" y="1573" width="0.0511%" height="15" fill="rgb(236,10,46)" fg:x="27530" fg:w="28"/><text x="50.5138%" y="1583.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (163 samples, 0.30%)</title><rect x="50.0557%" y="1829" width="0.2976%" height="15" fill="rgb(240,211,16)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (163 samples, 0.30%)</title><rect x="50.0557%" y="1813" width="0.2976%" height="15" fill="rgb(205,3,43)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (163 samples, 0.30%)</title><rect x="50.0557%" y="1797" width="0.2976%" height="15" fill="rgb(245,7,22)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (163 samples, 0.30%)</title><rect x="50.0557%" y="1781" width="0.2976%" height="15" fill="rgb(239,132,32)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (163 samples, 0.30%)</title><rect x="50.0557%" y="1765" width="0.2976%" height="15" fill="rgb(228,202,34)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (163 samples, 0.30%)</title><rect x="50.0557%" y="1749" width="0.2976%" height="15" fill="rgb(254,200,22)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1759.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (163 samples, 0.30%)</title><rect x="50.0557%" y="1733" width="0.2976%" height="15" fill="rgb(219,10,39)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (163 samples, 0.30%)</title><rect x="50.0557%" y="1717" width="0.2976%" height="15" fill="rgb(226,210,39)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (163 samples, 0.30%)</title><rect x="50.0557%" y="1701" width="0.2976%" height="15" fill="rgb(208,219,16)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163 samples, 0.30%)</title><rect x="50.0557%" y="1685" width="0.2976%" height="15" fill="rgb(216,158,51)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.30%)</title><rect x="50.0557%" y="1669" width="0.2976%" height="15" fill="rgb(233,14,44)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.30%)</title><rect x="50.0557%" y="1653" width="0.2976%" height="15" fill="rgb(237,97,39)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.30%)</title><rect x="50.0557%" y="1637" width="0.2976%" height="15" fill="rgb(218,198,43)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (163 samples, 0.30%)</title><rect x="50.0557%" y="1621" width="0.2976%" height="15" fill="rgb(231,104,20)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (163 samples, 0.30%)</title><rect x="50.0557%" y="1605" width="0.2976%" height="15" fill="rgb(254,36,13)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (163 samples, 0.30%)</title><rect x="50.0557%" y="1589" width="0.2976%" height="15" fill="rgb(248,14,50)" fg:x="27416" fg:w="163"/><text x="50.3057%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (21 samples, 0.04%)</title><rect x="50.3149%" y="1573" width="0.0383%" height="15" fill="rgb(217,107,29)" fg:x="27558" fg:w="21"/><text x="50.5649%" y="1583.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (21 samples, 0.04%)</title><rect x="50.3149%" y="1557" width="0.0383%" height="15" fill="rgb(251,169,33)" fg:x="27558" fg:w="21"/><text x="50.5649%" y="1567.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (21 samples, 0.04%)</title><rect x="50.3149%" y="1541" width="0.0383%" height="15" fill="rgb(217,108,32)" fg:x="27558" fg:w="21"/><text x="50.5649%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (41 samples, 0.07%)</title><rect x="50.3569%" y="1541" width="0.0749%" height="15" fill="rgb(219,66,42)" fg:x="27581" fg:w="41"/><text x="50.6069%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (495 samples, 0.90%)</title><rect x="49.5719%" y="1941" width="0.9038%" height="15" fill="rgb(206,180,7)" fg:x="27151" fg:w="495"/><text x="49.8219%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (495 samples, 0.90%)</title><rect x="49.5719%" y="1925" width="0.9038%" height="15" fill="rgb(208,226,31)" fg:x="27151" fg:w="495"/><text x="49.8219%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (495 samples, 0.90%)</title><rect x="49.5719%" y="1909" width="0.9038%" height="15" fill="rgb(218,26,49)" fg:x="27151" fg:w="495"/><text x="49.8219%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (320 samples, 0.58%)</title><rect x="49.8914%" y="1893" width="0.5843%" height="15" fill="rgb(233,197,48)" fg:x="27326" fg:w="320"/><text x="50.1414%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (320 samples, 0.58%)</title><rect x="49.8914%" y="1877" width="0.5843%" height="15" fill="rgb(252,181,51)" fg:x="27326" fg:w="320"/><text x="50.1414%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (230 samples, 0.42%)</title><rect x="50.0557%" y="1861" width="0.4199%" height="15" fill="rgb(253,90,19)" fg:x="27416" fg:w="230"/><text x="50.3057%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (230 samples, 0.42%)</title><rect x="50.0557%" y="1845" width="0.4199%" height="15" fill="rgb(215,171,30)" fg:x="27416" fg:w="230"/><text x="50.3057%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (67 samples, 0.12%)</title><rect x="50.3533%" y="1829" width="0.1223%" height="15" fill="rgb(214,222,9)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1839.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (67 samples, 0.12%)</title><rect x="50.3533%" y="1813" width="0.1223%" height="15" fill="rgb(223,3,22)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (67 samples, 0.12%)</title><rect x="50.3533%" y="1797" width="0.1223%" height="15" fill="rgb(225,196,46)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1807.50"></text></g><g><title>rayon_core::registry::in_worker (67 samples, 0.12%)</title><rect x="50.3533%" y="1781" width="0.1223%" height="15" fill="rgb(209,110,37)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (67 samples, 0.12%)</title><rect x="50.3533%" y="1765" width="0.1223%" height="15" fill="rgb(249,89,12)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1775.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (67 samples, 0.12%)</title><rect x="50.3533%" y="1749" width="0.1223%" height="15" fill="rgb(226,27,33)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (67 samples, 0.12%)</title><rect x="50.3533%" y="1733" width="0.1223%" height="15" fill="rgb(213,82,22)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (67 samples, 0.12%)</title><rect x="50.3533%" y="1717" width="0.1223%" height="15" fill="rgb(248,140,0)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1727.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (67 samples, 0.12%)</title><rect x="50.3533%" y="1701" width="0.1223%" height="15" fill="rgb(228,106,3)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.12%)</title><rect x="50.3533%" y="1685" width="0.1223%" height="15" fill="rgb(209,23,37)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1695.50"></text></g><g><title>core::iter::adapters::try_process (67 samples, 0.12%)</title><rect x="50.3533%" y="1669" width="0.1223%" height="15" fill="rgb(241,93,50)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67 samples, 0.12%)</title><rect x="50.3533%" y="1653" width="0.1223%" height="15" fill="rgb(253,46,43)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 0.12%)</title><rect x="50.3533%" y="1637" width="0.1223%" height="15" fill="rgb(226,206,43)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.12%)</title><rect x="50.3533%" y="1621" width="0.1223%" height="15" fill="rgb(217,54,7)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.12%)</title><rect x="50.3533%" y="1605" width="0.1223%" height="15" fill="rgb(223,5,52)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (67 samples, 0.12%)</title><rect x="50.3533%" y="1589" width="0.1223%" height="15" fill="rgb(206,52,46)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (67 samples, 0.12%)</title><rect x="50.3533%" y="1573" width="0.1223%" height="15" fill="rgb(253,136,11)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (67 samples, 0.12%)</title><rect x="50.3533%" y="1557" width="0.1223%" height="15" fill="rgb(208,106,33)" fg:x="27579" fg:w="67"/><text x="50.6033%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (24 samples, 0.04%)</title><rect x="50.4318%" y="1541" width="0.0438%" height="15" fill="rgb(206,54,4)" fg:x="27622" fg:w="24"/><text x="50.6818%" y="1551.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (24 samples, 0.04%)</title><rect x="50.4318%" y="1525" width="0.0438%" height="15" fill="rgb(213,3,15)" fg:x="27622" fg:w="24"/><text x="50.6818%" y="1535.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (24 samples, 0.04%)</title><rect x="50.4318%" y="1509" width="0.0438%" height="15" fill="rgb(252,211,39)" fg:x="27622" fg:w="24"/><text x="50.6818%" y="1519.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (37 samples, 0.07%)</title><rect x="50.4756%" y="1669" width="0.0676%" height="15" fill="rgb(223,6,36)" fg:x="27646" fg:w="37"/><text x="50.7256%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.07%)</title><rect x="50.4756%" y="1653" width="0.0676%" height="15" fill="rgb(252,169,45)" fg:x="27646" fg:w="37"/><text x="50.7256%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (29 samples, 0.05%)</title><rect x="50.5432%" y="1669" width="0.0529%" height="15" fill="rgb(212,48,26)" fg:x="27683" fg:w="29"/><text x="50.7932%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.16%)</title><rect x="50.4756%" y="1877" width="0.1570%" height="15" fill="rgb(251,102,48)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (86 samples, 0.16%)</title><rect x="50.4756%" y="1861" width="0.1570%" height="15" fill="rgb(243,208,16)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1871.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (86 samples, 0.16%)</title><rect x="50.4756%" y="1845" width="0.1570%" height="15" fill="rgb(219,96,24)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 0.16%)</title><rect x="50.4756%" y="1829" width="0.1570%" height="15" fill="rgb(219,33,29)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (86 samples, 0.16%)</title><rect x="50.4756%" y="1813" width="0.1570%" height="15" fill="rgb(223,176,5)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 0.16%)</title><rect x="50.4756%" y="1797" width="0.1570%" height="15" fill="rgb(228,140,14)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (86 samples, 0.16%)</title><rect x="50.4756%" y="1781" width="0.1570%" height="15" fill="rgb(217,179,31)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.16%)</title><rect x="50.4756%" y="1765" width="0.1570%" height="15" fill="rgb(230,9,30)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.16%)</title><rect x="50.4756%" y="1749" width="0.1570%" height="15" fill="rgb(230,136,20)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (86 samples, 0.16%)</title><rect x="50.4756%" y="1733" width="0.1570%" height="15" fill="rgb(215,210,22)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (86 samples, 0.16%)</title><rect x="50.4756%" y="1717" width="0.1570%" height="15" fill="rgb(218,43,5)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (86 samples, 0.16%)</title><rect x="50.4756%" y="1701" width="0.1570%" height="15" fill="rgb(216,11,5)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (86 samples, 0.16%)</title><rect x="50.4756%" y="1685" width="0.1570%" height="15" fill="rgb(209,82,29)" fg:x="27646" fg:w="86"/><text x="50.7256%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (20 samples, 0.04%)</title><rect x="50.5961%" y="1669" width="0.0365%" height="15" fill="rgb(244,115,12)" fg:x="27712" fg:w="20"/><text x="50.8461%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (20 samples, 0.04%)</title><rect x="50.5961%" y="1653" width="0.0365%" height="15" fill="rgb(222,82,18)" fg:x="27712" fg:w="20"/><text x="50.8461%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (20 samples, 0.04%)</title><rect x="50.5961%" y="1637" width="0.0365%" height="15" fill="rgb(249,227,8)" fg:x="27712" fg:w="20"/><text x="50.8461%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (100 samples, 0.18%)</title><rect x="50.6345%" y="1557" width="0.1826%" height="15" fill="rgb(253,141,45)" fg:x="27733" fg:w="100"/><text x="50.8845%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 0.18%)</title><rect x="50.6345%" y="1541" width="0.1826%" height="15" fill="rgb(234,184,4)" fg:x="27733" fg:w="100"/><text x="50.8845%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (22 samples, 0.04%)</title><rect x="50.8170%" y="1557" width="0.0402%" height="15" fill="rgb(218,194,23)" fg:x="27833" fg:w="22"/><text x="51.0670%" y="1567.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (11 samples, 0.02%)</title><rect x="50.8572%" y="1525" width="0.0201%" height="15" fill="rgb(235,66,41)" fg:x="27855" fg:w="11"/><text x="51.1072%" y="1535.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (221 samples, 0.40%)</title><rect x="50.4756%" y="1941" width="0.4035%" height="15" fill="rgb(245,217,1)" fg:x="27646" fg:w="221"/><text x="50.7256%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (221 samples, 0.40%)</title><rect x="50.4756%" y="1925" width="0.4035%" height="15" fill="rgb(229,91,1)" fg:x="27646" fg:w="221"/><text x="50.7256%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (221 samples, 0.40%)</title><rect x="50.4756%" y="1909" width="0.4035%" height="15" fill="rgb(207,101,30)" fg:x="27646" fg:w="221"/><text x="50.7256%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (221 samples, 0.40%)</title><rect x="50.4756%" y="1893" width="0.4035%" height="15" fill="rgb(223,82,49)" fg:x="27646" fg:w="221"/><text x="50.7256%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (135 samples, 0.25%)</title><rect x="50.6326%" y="1877" width="0.2465%" height="15" fill="rgb(218,167,17)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1887.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (135 samples, 0.25%)</title><rect x="50.6326%" y="1861" width="0.2465%" height="15" fill="rgb(208,103,14)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (135 samples, 0.25%)</title><rect x="50.6326%" y="1845" width="0.2465%" height="15" fill="rgb(238,20,8)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (135 samples, 0.25%)</title><rect x="50.6326%" y="1829" width="0.2465%" height="15" fill="rgb(218,80,54)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (135 samples, 0.25%)</title><rect x="50.6326%" y="1813" width="0.2465%" height="15" fill="rgb(240,144,17)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (135 samples, 0.25%)</title><rect x="50.6326%" y="1797" width="0.2465%" height="15" fill="rgb(245,27,50)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1807.50"></text></g><g><title>rayon_core::registry::in_worker (135 samples, 0.25%)</title><rect x="50.6326%" y="1781" width="0.2465%" height="15" fill="rgb(251,51,7)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (135 samples, 0.25%)</title><rect x="50.6326%" y="1765" width="0.2465%" height="15" fill="rgb(245,217,29)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (135 samples, 0.25%)</title><rect x="50.6326%" y="1749" width="0.2465%" height="15" fill="rgb(221,176,29)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (135 samples, 0.25%)</title><rect x="50.6326%" y="1733" width="0.2465%" height="15" fill="rgb(212,180,24)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (135 samples, 0.25%)</title><rect x="50.6326%" y="1717" width="0.2465%" height="15" fill="rgb(254,24,2)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 0.25%)</title><rect x="50.6326%" y="1701" width="0.2465%" height="15" fill="rgb(230,100,2)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (135 samples, 0.25%)</title><rect x="50.6326%" y="1685" width="0.2465%" height="15" fill="rgb(219,142,25)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (135 samples, 0.25%)</title><rect x="50.6326%" y="1669" width="0.2465%" height="15" fill="rgb(240,73,43)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (135 samples, 0.25%)</title><rect x="50.6326%" y="1653" width="0.2465%" height="15" fill="rgb(214,114,15)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.25%)</title><rect x="50.6326%" y="1637" width="0.2465%" height="15" fill="rgb(207,130,4)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.25%)</title><rect x="50.6326%" y="1621" width="0.2465%" height="15" fill="rgb(221,25,40)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (135 samples, 0.25%)</title><rect x="50.6326%" y="1605" width="0.2465%" height="15" fill="rgb(241,184,7)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (135 samples, 0.25%)</title><rect x="50.6326%" y="1589" width="0.2465%" height="15" fill="rgb(235,159,4)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (135 samples, 0.25%)</title><rect x="50.6326%" y="1573" width="0.2465%" height="15" fill="rgb(214,87,48)" fg:x="27732" fg:w="135"/><text x="50.8826%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (12 samples, 0.02%)</title><rect x="50.8572%" y="1557" width="0.0219%" height="15" fill="rgb(246,198,24)" fg:x="27855" fg:w="12"/><text x="51.1072%" y="1567.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (12 samples, 0.02%)</title><rect x="50.8572%" y="1541" width="0.0219%" height="15" fill="rgb(209,66,40)" fg:x="27855" fg:w="12"/><text x="51.1072%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (34 samples, 0.06%)</title><rect x="50.8791%" y="1653" width="0.0621%" height="15" fill="rgb(233,147,39)" fg:x="27867" fg:w="34"/><text x="51.1291%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.06%)</title><rect x="50.8791%" y="1637" width="0.0621%" height="15" fill="rgb(231,145,52)" fg:x="27867" fg:w="34"/><text x="51.1291%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.09%)</title><rect x="50.8791%" y="1861" width="0.0949%" height="15" fill="rgb(206,20,26)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (52 samples, 0.09%)</title><rect x="50.8791%" y="1845" width="0.0949%" height="15" fill="rgb(238,220,4)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1855.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (52 samples, 0.09%)</title><rect x="50.8791%" y="1829" width="0.0949%" height="15" fill="rgb(252,195,42)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52 samples, 0.09%)</title><rect x="50.8791%" y="1813" width="0.0949%" height="15" fill="rgb(209,10,6)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1823.50"></text></g><g><title>core::iter::adapters::try_process (52 samples, 0.09%)</title><rect x="50.8791%" y="1797" width="0.0949%" height="15" fill="rgb(229,3,52)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 0.09%)</title><rect x="50.8791%" y="1781" width="0.0949%" height="15" fill="rgb(253,49,37)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.09%)</title><rect x="50.8791%" y="1765" width="0.0949%" height="15" fill="rgb(240,103,49)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.09%)</title><rect x="50.8791%" y="1749" width="0.0949%" height="15" fill="rgb(250,182,30)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.09%)</title><rect x="50.8791%" y="1733" width="0.0949%" height="15" fill="rgb(248,8,30)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (52 samples, 0.09%)</title><rect x="50.8791%" y="1717" width="0.0949%" height="15" fill="rgb(237,120,30)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (52 samples, 0.09%)</title><rect x="50.8791%" y="1701" width="0.0949%" height="15" fill="rgb(221,146,34)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (52 samples, 0.09%)</title><rect x="50.8791%" y="1685" width="0.0949%" height="15" fill="rgb(242,55,13)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (52 samples, 0.09%)</title><rect x="50.8791%" y="1669" width="0.0949%" height="15" fill="rgb(242,112,31)" fg:x="27867" fg:w="52"/><text x="51.1291%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (18 samples, 0.03%)</title><rect x="50.9412%" y="1653" width="0.0329%" height="15" fill="rgb(249,192,27)" fg:x="27901" fg:w="18"/><text x="51.1912%" y="1663.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (905 samples, 1.65%)</title><rect x="49.3674%" y="2037" width="1.6523%" height="15" fill="rgb(208,204,44)" fg:x="27039" fg:w="905"/><text x="49.6174%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (905 samples, 1.65%)</title><rect x="49.3674%" y="2021" width="1.6523%" height="15" fill="rgb(208,93,54)" fg:x="27039" fg:w="905"/><text x="49.6174%" y="2031.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (905 samples, 1.65%)</title><rect x="49.3674%" y="2005" width="1.6523%" height="15" fill="rgb(242,1,31)" fg:x="27039" fg:w="905"/><text x="49.6174%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (905 samples, 1.65%)</title><rect x="49.3674%" y="1989" width="1.6523%" height="15" fill="rgb(241,83,25)" fg:x="27039" fg:w="905"/><text x="49.6174%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (793 samples, 1.45%)</title><rect x="49.5719%" y="1973" width="1.4478%" height="15" fill="rgb(205,169,50)" fg:x="27151" fg:w="793"/><text x="49.8219%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (793 samples, 1.45%)</title><rect x="49.5719%" y="1957" width="1.4478%" height="15" fill="rgb(239,186,37)" fg:x="27151" fg:w="793"/><text x="49.8219%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (77 samples, 0.14%)</title><rect x="50.8791%" y="1941" width="0.1406%" height="15" fill="rgb(205,221,10)" fg:x="27867" fg:w="77"/><text x="51.1291%" y="1951.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (77 samples, 0.14%)</title><rect x="50.8791%" y="1925" width="0.1406%" height="15" fill="rgb(218,196,15)" fg:x="27867" fg:w="77"/><text x="51.1291%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (77 samples, 0.14%)</title><rect x="50.8791%" y="1909" width="0.1406%" height="15" fill="rgb(218,196,35)" fg:x="27867" fg:w="77"/><text x="51.1291%" y="1919.50"></text></g><g><title>rayon_core::registry::in_worker (77 samples, 0.14%)</title><rect x="50.8791%" y="1893" width="0.1406%" height="15" fill="rgb(233,63,24)" fg:x="27867" fg:w="77"/><text x="51.1291%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (77 samples, 0.14%)</title><rect x="50.8791%" y="1877" width="0.1406%" height="15" fill="rgb(225,8,4)" fg:x="27867" fg:w="77"/><text x="51.1291%" y="1887.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (25 samples, 0.05%)</title><rect x="50.9741%" y="1861" width="0.0456%" height="15" fill="rgb(234,105,35)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.05%)</title><rect x="50.9741%" y="1845" width="0.0456%" height="15" fill="rgb(236,21,32)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.05%)</title><rect x="50.9741%" y="1829" width="0.0456%" height="15" fill="rgb(228,109,6)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.05%)</title><rect x="50.9741%" y="1813" width="0.0456%" height="15" fill="rgb(229,215,31)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.05%)</title><rect x="50.9741%" y="1797" width="0.0456%" height="15" fill="rgb(221,52,54)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1807.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.05%)</title><rect x="50.9741%" y="1781" width="0.0456%" height="15" fill="rgb(252,129,43)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.05%)</title><rect x="50.9741%" y="1765" width="0.0456%" height="15" fill="rgb(248,183,27)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1775.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.05%)</title><rect x="50.9741%" y="1749" width="0.0456%" height="15" fill="rgb(250,0,22)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.05%)</title><rect x="50.9741%" y="1733" width="0.0456%" height="15" fill="rgb(213,166,10)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.05%)</title><rect x="50.9741%" y="1717" width="0.0456%" height="15" fill="rgb(207,163,36)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (25 samples, 0.05%)</title><rect x="50.9741%" y="1701" width="0.0456%" height="15" fill="rgb(208,122,22)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1711.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (25 samples, 0.05%)</title><rect x="50.9741%" y="1685" width="0.0456%" height="15" fill="rgb(207,104,49)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.05%)</title><rect x="50.9741%" y="1669" width="0.0456%" height="15" fill="rgb(248,211,50)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1679.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 0.05%)</title><rect x="50.9741%" y="1653" width="0.0456%" height="15" fill="rgb(217,13,45)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.05%)</title><rect x="50.9741%" y="1637" width="0.0456%" height="15" fill="rgb(211,216,49)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.05%)</title><rect x="50.9741%" y="1621" width="0.0456%" height="15" fill="rgb(221,58,53)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.05%)</title><rect x="50.9741%" y="1605" width="0.0456%" height="15" fill="rgb(220,112,41)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.05%)</title><rect x="50.9741%" y="1589" width="0.0456%" height="15" fill="rgb(236,38,28)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (25 samples, 0.05%)</title><rect x="50.9741%" y="1573" width="0.0456%" height="15" fill="rgb(227,195,22)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (25 samples, 0.05%)</title><rect x="50.9741%" y="1557" width="0.0456%" height="15" fill="rgb(214,55,33)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (25 samples, 0.05%)</title><rect x="50.9741%" y="1541" width="0.0456%" height="15" fill="rgb(248,80,13)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (25 samples, 0.05%)</title><rect x="50.9741%" y="1525" width="0.0456%" height="15" fill="rgb(238,52,6)" fg:x="27919" fg:w="25"/><text x="51.2241%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (110 samples, 0.20%)</title><rect x="51.0197%" y="1957" width="0.2008%" height="15" fill="rgb(224,198,47)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1967.50"></text></g><g><title>rayon_core::registry::in_worker (110 samples, 0.20%)</title><rect x="51.0197%" y="1941" width="0.2008%" height="15" fill="rgb(233,171,20)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (110 samples, 0.20%)</title><rect x="51.0197%" y="1925" width="0.2008%" height="15" fill="rgb(241,30,25)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1935.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (110 samples, 0.20%)</title><rect x="51.0197%" y="1909" width="0.2008%" height="15" fill="rgb(207,171,38)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (110 samples, 0.20%)</title><rect x="51.0197%" y="1893" width="0.2008%" height="15" fill="rgb(234,70,1)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1903.50"></text></g><g><title>rayon_core::registry::in_worker (110 samples, 0.20%)</title><rect x="51.0197%" y="1877" width="0.2008%" height="15" fill="rgb(232,178,18)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (110 samples, 0.20%)</title><rect x="51.0197%" y="1861" width="0.2008%" height="15" fill="rgb(241,78,40)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (110 samples, 0.20%)</title><rect x="51.0197%" y="1845" width="0.2008%" height="15" fill="rgb(222,35,25)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1855.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (110 samples, 0.20%)</title><rect x="51.0197%" y="1829" width="0.2008%" height="15" fill="rgb(207,92,16)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (110 samples, 0.20%)</title><rect x="51.0197%" y="1813" width="0.2008%" height="15" fill="rgb(216,59,51)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (110 samples, 0.20%)</title><rect x="51.0197%" y="1797" width="0.2008%" height="15" fill="rgb(213,80,28)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (110 samples, 0.20%)</title><rect x="51.0197%" y="1781" width="0.2008%" height="15" fill="rgb(220,93,7)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (110 samples, 0.20%)</title><rect x="51.0197%" y="1765" width="0.2008%" height="15" fill="rgb(225,24,44)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (110 samples, 0.20%)</title><rect x="51.0197%" y="1749" width="0.2008%" height="15" fill="rgb(243,74,40)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (110 samples, 0.20%)</title><rect x="51.0197%" y="1733" width="0.2008%" height="15" fill="rgb(228,39,7)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (110 samples, 0.20%)</title><rect x="51.0197%" y="1717" width="0.2008%" height="15" fill="rgb(227,79,8)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (110 samples, 0.20%)</title><rect x="51.0197%" y="1701" width="0.2008%" height="15" fill="rgb(236,58,11)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (110 samples, 0.20%)</title><rect x="51.0197%" y="1685" width="0.2008%" height="15" fill="rgb(249,63,35)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (110 samples, 0.20%)</title><rect x="51.0197%" y="1669" width="0.2008%" height="15" fill="rgb(252,114,16)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (110 samples, 0.20%)</title><rect x="51.0197%" y="1653" width="0.2008%" height="15" fill="rgb(254,151,24)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.20%)</title><rect x="51.0197%" y="1637" width="0.2008%" height="15" fill="rgb(253,54,39)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.20%)</title><rect x="51.0197%" y="1621" width="0.2008%" height="15" fill="rgb(243,25,45)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (110 samples, 0.20%)</title><rect x="51.0197%" y="1605" width="0.2008%" height="15" fill="rgb(234,134,9)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (110 samples, 0.20%)</title><rect x="51.0197%" y="1589" width="0.2008%" height="15" fill="rgb(227,166,31)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (110 samples, 0.20%)</title><rect x="51.0197%" y="1573" width="0.2008%" height="15" fill="rgb(245,143,41)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (110 samples, 0.20%)</title><rect x="51.0197%" y="1557" width="0.2008%" height="15" fill="rgb(238,181,32)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (110 samples, 0.20%)</title><rect x="51.0197%" y="1541" width="0.2008%" height="15" fill="rgb(224,113,18)" fg:x="27944" fg:w="110"/><text x="51.2697%" y="1551.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (149 samples, 0.27%)</title><rect x="51.0197%" y="2037" width="0.2720%" height="15" fill="rgb(240,229,28)" fg:x="27944" fg:w="149"/><text x="51.2697%" y="2047.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (149 samples, 0.27%)</title><rect x="51.0197%" y="2021" width="0.2720%" height="15" fill="rgb(250,185,3)" fg:x="27944" fg:w="149"/><text x="51.2697%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (149 samples, 0.27%)</title><rect x="51.0197%" y="2005" width="0.2720%" height="15" fill="rgb(212,59,25)" fg:x="27944" fg:w="149"/><text x="51.2697%" y="2015.50"></text></g><g><title>rayon_core::registry::in_worker (149 samples, 0.27%)</title><rect x="51.0197%" y="1989" width="0.2720%" height="15" fill="rgb(221,87,20)" fg:x="27944" fg:w="149"/><text x="51.2697%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (149 samples, 0.27%)</title><rect x="51.0197%" y="1973" width="0.2720%" height="15" fill="rgb(213,74,28)" fg:x="27944" fg:w="149"/><text x="51.2697%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (39 samples, 0.07%)</title><rect x="51.2205%" y="1957" width="0.0712%" height="15" fill="rgb(224,132,34)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1967.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (39 samples, 0.07%)</title><rect x="51.2205%" y="1941" width="0.0712%" height="15" fill="rgb(222,101,24)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.07%)</title><rect x="51.2205%" y="1925" width="0.0712%" height="15" fill="rgb(254,142,4)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (39 samples, 0.07%)</title><rect x="51.2205%" y="1909" width="0.0712%" height="15" fill="rgb(230,229,49)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (39 samples, 0.07%)</title><rect x="51.2205%" y="1893" width="0.0712%" height="15" fill="rgb(238,70,47)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.07%)</title><rect x="51.2205%" y="1877" width="0.0712%" height="15" fill="rgb(231,160,17)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (39 samples, 0.07%)</title><rect x="51.2205%" y="1861" width="0.0712%" height="15" fill="rgb(218,68,53)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1871.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (39 samples, 0.07%)</title><rect x="51.2205%" y="1845" width="0.0712%" height="15" fill="rgb(236,111,10)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.07%)</title><rect x="51.2205%" y="1829" width="0.0712%" height="15" fill="rgb(224,34,41)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (39 samples, 0.07%)</title><rect x="51.2205%" y="1813" width="0.0712%" height="15" fill="rgb(241,118,19)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.07%)</title><rect x="51.2205%" y="1797" width="0.0712%" height="15" fill="rgb(238,129,25)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.07%)</title><rect x="51.2205%" y="1781" width="0.0712%" height="15" fill="rgb(238,22,31)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.07%)</title><rect x="51.2205%" y="1765" width="0.0712%" height="15" fill="rgb(222,174,48)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.07%)</title><rect x="51.2205%" y="1749" width="0.0712%" height="15" fill="rgb(206,152,40)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (39 samples, 0.07%)</title><rect x="51.2205%" y="1733" width="0.0712%" height="15" fill="rgb(218,99,54)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (39 samples, 0.07%)</title><rect x="51.2205%" y="1717" width="0.0712%" height="15" fill="rgb(220,174,26)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (39 samples, 0.07%)</title><rect x="51.2205%" y="1701" width="0.0712%" height="15" fill="rgb(245,116,9)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (39 samples, 0.07%)</title><rect x="51.2205%" y="1685" width="0.0712%" height="15" fill="rgb(209,72,35)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (39 samples, 0.07%)</title><rect x="51.2205%" y="1669" width="0.0712%" height="15" fill="rgb(226,126,21)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (39 samples, 0.07%)</title><rect x="51.2205%" y="1653" width="0.0712%" height="15" fill="rgb(227,192,1)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (39 samples, 0.07%)</title><rect x="51.2205%" y="1637" width="0.0712%" height="15" fill="rgb(237,180,29)" fg:x="28054" fg:w="39"/><text x="51.4705%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1989" width="2.7149%" height="15" fill="rgb(230,197,35)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1999.50">ra..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1973" width="2.7149%" height="15" fill="rgb(246,193,31)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1983.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1957" width="2.7149%" height="15" fill="rgb(241,36,4)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1967.50">&lt;c..</text></g><g><title>core::iter::adapters::try_process (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1941" width="2.7149%" height="15" fill="rgb(241,130,17)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1951.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1925" width="2.7149%" height="15" fill="rgb(206,137,32)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1935.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1909" width="2.7149%" height="15" fill="rgb(237,228,51)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1919.50">&lt;c..</text></g><g><title>parquet2::write::compression::compress (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1893" width="2.7149%" height="15" fill="rgb(243,6,42)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1903.50">pa..</text></g><g><title>parquet2::compression::compress (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1877" width="2.7149%" height="15" fill="rgb(251,74,28)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1887.50">pa..</text></g><g><title>snap::compress::Encoder::compress (1,487 samples, 2.71%)</title><rect x="51.2917%" y="1861" width="2.7149%" height="15" fill="rgb(218,20,49)" fg:x="28093" fg:w="1487"/><text x="51.5417%" y="1871.50">sn..</text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (119 samples, 0.22%)</title><rect x="54.0067%" y="1701" width="0.2173%" height="15" fill="rgb(238,28,14)" fg:x="29580" fg:w="119"/><text x="54.2567%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (119 samples, 0.22%)</title><rect x="54.0067%" y="1685" width="0.2173%" height="15" fill="rgb(229,40,46)" fg:x="29580" fg:w="119"/><text x="54.2567%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (163 samples, 0.30%)</title><rect x="54.0067%" y="1909" width="0.2976%" height="15" fill="rgb(244,195,20)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (163 samples, 0.30%)</title><rect x="54.0067%" y="1893" width="0.2976%" height="15" fill="rgb(253,56,35)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1903.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (163 samples, 0.30%)</title><rect x="54.0067%" y="1877" width="0.2976%" height="15" fill="rgb(210,149,44)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (163 samples, 0.30%)</title><rect x="54.0067%" y="1861" width="0.2976%" height="15" fill="rgb(240,135,12)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (163 samples, 0.30%)</title><rect x="54.0067%" y="1845" width="0.2976%" height="15" fill="rgb(251,24,50)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163 samples, 0.30%)</title><rect x="54.0067%" y="1829" width="0.2976%" height="15" fill="rgb(243,200,47)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.30%)</title><rect x="54.0067%" y="1813" width="0.2976%" height="15" fill="rgb(224,166,26)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.30%)</title><rect x="54.0067%" y="1797" width="0.2976%" height="15" fill="rgb(233,0,47)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.30%)</title><rect x="54.0067%" y="1781" width="0.2976%" height="15" fill="rgb(253,80,5)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1791.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (163 samples, 0.30%)</title><rect x="54.0067%" y="1765" width="0.2976%" height="15" fill="rgb(214,133,25)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1775.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (163 samples, 0.30%)</title><rect x="54.0067%" y="1749" width="0.2976%" height="15" fill="rgb(209,27,14)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (163 samples, 0.30%)</title><rect x="54.0067%" y="1733" width="0.2976%" height="15" fill="rgb(219,102,51)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (163 samples, 0.30%)</title><rect x="54.0067%" y="1717" width="0.2976%" height="15" fill="rgb(237,18,16)" fg:x="29580" fg:w="163"/><text x="54.2567%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (44 samples, 0.08%)</title><rect x="54.2240%" y="1701" width="0.0803%" height="15" fill="rgb(241,85,17)" fg:x="29699" fg:w="44"/><text x="54.4740%" y="1711.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (44 samples, 0.08%)</title><rect x="54.2240%" y="1685" width="0.0803%" height="15" fill="rgb(236,90,42)" fg:x="29699" fg:w="44"/><text x="54.4740%" y="1695.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (44 samples, 0.08%)</title><rect x="54.2240%" y="1669" width="0.0803%" height="15" fill="rgb(249,57,21)" fg:x="29699" fg:w="44"/><text x="54.4740%" y="1679.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.04%)</title><rect x="54.3043%" y="1909" width="0.0402%" height="15" fill="rgb(243,12,36)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.04%)</title><rect x="54.3043%" y="1893" width="0.0402%" height="15" fill="rgb(253,128,47)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1903.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.04%)</title><rect x="54.3043%" y="1877" width="0.0402%" height="15" fill="rgb(207,33,20)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.04%)</title><rect x="54.3043%" y="1861" width="0.0402%" height="15" fill="rgb(233,215,35)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1871.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.04%)</title><rect x="54.3043%" y="1845" width="0.0402%" height="15" fill="rgb(249,188,52)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.04%)</title><rect x="54.3043%" y="1829" width="0.0402%" height="15" fill="rgb(225,12,32)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1839.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.04%)</title><rect x="54.3043%" y="1813" width="0.0402%" height="15" fill="rgb(247,98,14)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.04%)</title><rect x="54.3043%" y="1797" width="0.0402%" height="15" fill="rgb(247,219,48)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.04%)</title><rect x="54.3043%" y="1781" width="0.0402%" height="15" fill="rgb(253,60,48)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (22 samples, 0.04%)</title><rect x="54.3043%" y="1765" width="0.0402%" height="15" fill="rgb(245,15,52)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (22 samples, 0.04%)</title><rect x="54.3043%" y="1749" width="0.0402%" height="15" fill="rgb(220,133,28)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.04%)</title><rect x="54.3043%" y="1733" width="0.0402%" height="15" fill="rgb(217,180,4)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 0.04%)</title><rect x="54.3043%" y="1717" width="0.0402%" height="15" fill="rgb(251,24,1)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.04%)</title><rect x="54.3043%" y="1701" width="0.0402%" height="15" fill="rgb(212,185,49)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.04%)</title><rect x="54.3043%" y="1685" width="0.0402%" height="15" fill="rgb(215,175,22)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.04%)</title><rect x="54.3043%" y="1669" width="0.0402%" height="15" fill="rgb(250,205,14)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.04%)</title><rect x="54.3043%" y="1653" width="0.0402%" height="15" fill="rgb(225,211,22)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (22 samples, 0.04%)</title><rect x="54.3043%" y="1637" width="0.0402%" height="15" fill="rgb(251,179,42)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (22 samples, 0.04%)</title><rect x="54.3043%" y="1621" width="0.0402%" height="15" fill="rgb(208,216,51)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (22 samples, 0.04%)</title><rect x="54.3043%" y="1605" width="0.0402%" height="15" fill="rgb(235,36,11)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (22 samples, 0.04%)</title><rect x="54.3043%" y="1589" width="0.0402%" height="15" fill="rgb(213,189,28)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1599.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (22 samples, 0.04%)</title><rect x="54.3043%" y="1573" width="0.0402%" height="15" fill="rgb(227,203,42)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1583.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (22 samples, 0.04%)</title><rect x="54.3043%" y="1557" width="0.0402%" height="15" fill="rgb(244,72,36)" fg:x="29743" fg:w="22"/><text x="54.5543%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (201 samples, 0.37%)</title><rect x="54.0067%" y="1957" width="0.3670%" height="15" fill="rgb(213,53,17)" fg:x="29580" fg:w="201"/><text x="54.2567%" y="1967.50"></text></g><g><title>rayon_core::registry::in_worker (201 samples, 0.37%)</title><rect x="54.0067%" y="1941" width="0.3670%" height="15" fill="rgb(207,167,3)" fg:x="29580" fg:w="201"/><text x="54.2567%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (201 samples, 0.37%)</title><rect x="54.0067%" y="1925" width="0.3670%" height="15" fill="rgb(216,98,30)" fg:x="29580" fg:w="201"/><text x="54.2567%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (16 samples, 0.03%)</title><rect x="54.3445%" y="1909" width="0.0292%" height="15" fill="rgb(236,123,15)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1919.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (16 samples, 0.03%)</title><rect x="54.3445%" y="1893" width="0.0292%" height="15" fill="rgb(248,81,50)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.03%)</title><rect x="54.3445%" y="1877" width="0.0292%" height="15" fill="rgb(214,120,4)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.03%)</title><rect x="54.3445%" y="1861" width="0.0292%" height="15" fill="rgb(208,179,34)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.03%)</title><rect x="54.3445%" y="1845" width="0.0292%" height="15" fill="rgb(227,140,7)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.03%)</title><rect x="54.3445%" y="1829" width="0.0292%" height="15" fill="rgb(214,22,6)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1839.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.03%)</title><rect x="54.3445%" y="1813" width="0.0292%" height="15" fill="rgb(207,137,27)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.03%)</title><rect x="54.3445%" y="1797" width="0.0292%" height="15" fill="rgb(210,8,46)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.03%)</title><rect x="54.3445%" y="1781" width="0.0292%" height="15" fill="rgb(240,16,54)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (16 samples, 0.03%)</title><rect x="54.3445%" y="1765" width="0.0292%" height="15" fill="rgb(211,209,29)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 0.03%)</title><rect x="54.3445%" y="1749" width="0.0292%" height="15" fill="rgb(226,228,24)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.03%)</title><rect x="54.3445%" y="1733" width="0.0292%" height="15" fill="rgb(222,84,9)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 0.03%)</title><rect x="54.3445%" y="1717" width="0.0292%" height="15" fill="rgb(234,203,30)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.03%)</title><rect x="54.3445%" y="1701" width="0.0292%" height="15" fill="rgb(238,109,14)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.03%)</title><rect x="54.3445%" y="1685" width="0.0292%" height="15" fill="rgb(233,206,34)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="54.3445%" y="1669" width="0.0292%" height="15" fill="rgb(220,167,47)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="54.3445%" y="1653" width="0.0292%" height="15" fill="rgb(238,105,10)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (16 samples, 0.03%)</title><rect x="54.3445%" y="1637" width="0.0292%" height="15" fill="rgb(213,227,17)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (16 samples, 0.03%)</title><rect x="54.3445%" y="1621" width="0.0292%" height="15" fill="rgb(217,132,38)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (16 samples, 0.03%)</title><rect x="54.3445%" y="1605" width="0.0292%" height="15" fill="rgb(242,146,4)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (16 samples, 0.03%)</title><rect x="54.3445%" y="1589" width="0.0292%" height="15" fill="rgb(212,61,9)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1599.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (16 samples, 0.03%)</title><rect x="54.3445%" y="1573" width="0.0292%" height="15" fill="rgb(247,126,22)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1583.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (16 samples, 0.03%)</title><rect x="54.3445%" y="1557" width="0.0292%" height="15" fill="rgb(220,196,2)" fg:x="29765" fg:w="16"/><text x="54.5945%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,759 samples, 3.21%)</title><rect x="51.2917%" y="2005" width="3.2116%" height="15" fill="rgb(208,46,4)" fg:x="28093" fg:w="1759"/><text x="51.5417%" y="2015.50">ray..</text></g><g><title>rayon_core::registry::in_worker (272 samples, 0.50%)</title><rect x="54.0067%" y="1989" width="0.4966%" height="15" fill="rgb(252,104,46)" fg:x="29580" fg:w="272"/><text x="54.2567%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (272 samples, 0.50%)</title><rect x="54.0067%" y="1973" width="0.4966%" height="15" fill="rgb(237,152,48)" fg:x="29580" fg:w="272"/><text x="54.2567%" y="1983.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (71 samples, 0.13%)</title><rect x="54.3737%" y="1957" width="0.1296%" height="15" fill="rgb(221,59,37)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.13%)</title><rect x="54.3737%" y="1941" width="0.1296%" height="15" fill="rgb(209,202,51)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (71 samples, 0.13%)</title><rect x="54.3737%" y="1925" width="0.1296%" height="15" fill="rgb(228,81,30)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (71 samples, 0.13%)</title><rect x="54.3737%" y="1909" width="0.1296%" height="15" fill="rgb(227,42,39)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.13%)</title><rect x="54.3737%" y="1893" width="0.1296%" height="15" fill="rgb(221,26,2)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (71 samples, 0.13%)</title><rect x="54.3737%" y="1877" width="0.1296%" height="15" fill="rgb(254,61,31)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1887.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (71 samples, 0.13%)</title><rect x="54.3737%" y="1861" width="0.1296%" height="15" fill="rgb(222,173,38)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.13%)</title><rect x="54.3737%" y="1845" width="0.1296%" height="15" fill="rgb(218,50,12)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (71 samples, 0.13%)</title><rect x="54.3737%" y="1829" width="0.1296%" height="15" fill="rgb(223,88,40)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 0.13%)</title><rect x="54.3737%" y="1813" width="0.1296%" height="15" fill="rgb(237,54,19)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71 samples, 0.13%)</title><rect x="54.3737%" y="1797" width="0.1296%" height="15" fill="rgb(251,129,25)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.13%)</title><rect x="54.3737%" y="1781" width="0.1296%" height="15" fill="rgb(238,97,19)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.13%)</title><rect x="54.3737%" y="1765" width="0.1296%" height="15" fill="rgb(240,169,18)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1775.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (71 samples, 0.13%)</title><rect x="54.3737%" y="1749" width="0.1296%" height="15" fill="rgb(230,187,49)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (71 samples, 0.13%)</title><rect x="54.3737%" y="1733" width="0.1296%" height="15" fill="rgb(209,44,26)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (71 samples, 0.13%)</title><rect x="54.3737%" y="1717" width="0.1296%" height="15" fill="rgb(244,0,6)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (71 samples, 0.13%)</title><rect x="54.3737%" y="1701" width="0.1296%" height="15" fill="rgb(248,18,21)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (71 samples, 0.13%)</title><rect x="54.3737%" y="1685" width="0.1296%" height="15" fill="rgb(245,180,19)" fg:x="29781" fg:w="71"/><text x="54.6237%" y="1695.50"></text></g><g><title>rayon_core::registry::in_worker (1,760 samples, 3.21%)</title><rect x="51.2917%" y="2037" width="3.2134%" height="15" fill="rgb(252,118,36)" fg:x="28093" fg:w="1760"/><text x="51.5417%" y="2047.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,760 samples, 3.21%)</title><rect x="51.2917%" y="2021" width="3.2134%" height="15" fill="rgb(210,224,19)" fg:x="28093" fg:w="1760"/><text x="51.5417%" y="2031.50">ray..</text></g><g><title>[unknown] (7,548 samples, 13.78%)</title><rect x="40.9469%" y="2053" width="13.7810%" height="15" fill="rgb(218,30,24)" fg:x="22427" fg:w="7548"/><text x="41.1969%" y="2063.50">[unknown]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (122 samples, 0.22%)</title><rect x="54.5051%" y="2037" width="0.2227%" height="15" fill="rgb(219,75,50)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="2047.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (122 samples, 0.22%)</title><rect x="54.5051%" y="2021" width="0.2227%" height="15" fill="rgb(234,72,50)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="2031.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (122 samples, 0.22%)</title><rect x="54.5051%" y="2005" width="0.2227%" height="15" fill="rgb(219,100,48)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="2015.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122 samples, 0.22%)</title><rect x="54.5051%" y="1989" width="0.2227%" height="15" fill="rgb(253,5,41)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1999.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (122 samples, 0.22%)</title><rect x="54.5051%" y="1973" width="0.2227%" height="15" fill="rgb(247,181,11)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1983.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (122 samples, 0.22%)</title><rect x="54.5051%" y="1957" width="0.2227%" height="15" fill="rgb(222,223,25)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (122 samples, 0.22%)</title><rect x="54.5051%" y="1941" width="0.2227%" height="15" fill="rgb(214,198,28)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1951.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (122 samples, 0.22%)</title><rect x="54.5051%" y="1925" width="0.2227%" height="15" fill="rgb(230,46,43)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 0.22%)</title><rect x="54.5051%" y="1909" width="0.2227%" height="15" fill="rgb(233,65,53)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1919.50"></text></g><g><title>rayon_core::registry::in_worker (122 samples, 0.22%)</title><rect x="54.5051%" y="1893" width="0.2227%" height="15" fill="rgb(221,121,27)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (122 samples, 0.22%)</title><rect x="54.5051%" y="1877" width="0.2227%" height="15" fill="rgb(247,70,47)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (122 samples, 0.22%)</title><rect x="54.5051%" y="1861" width="0.2227%" height="15" fill="rgb(228,85,35)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1871.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (122 samples, 0.22%)</title><rect x="54.5051%" y="1845" width="0.2227%" height="15" fill="rgb(209,50,18)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 0.22%)</title><rect x="54.5051%" y="1829" width="0.2227%" height="15" fill="rgb(250,19,35)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1839.50"></text></g><g><title>rayon_core::registry::in_worker (122 samples, 0.22%)</title><rect x="54.5051%" y="1813" width="0.2227%" height="15" fill="rgb(253,107,29)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (122 samples, 0.22%)</title><rect x="54.5051%" y="1797" width="0.2227%" height="15" fill="rgb(252,179,29)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1807.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (122 samples, 0.22%)</title><rect x="54.5051%" y="1781" width="0.2227%" height="15" fill="rgb(238,194,6)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 0.22%)</title><rect x="54.5051%" y="1765" width="0.2227%" height="15" fill="rgb(238,164,29)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1775.50"></text></g><g><title>rayon_core::registry::in_worker (122 samples, 0.22%)</title><rect x="54.5051%" y="1749" width="0.2227%" height="15" fill="rgb(224,25,9)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (122 samples, 0.22%)</title><rect x="54.5051%" y="1733" width="0.2227%" height="15" fill="rgb(244,153,23)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 0.22%)</title><rect x="54.5051%" y="1717" width="0.2227%" height="15" fill="rgb(212,203,14)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (122 samples, 0.22%)</title><rect x="54.5051%" y="1701" width="0.2227%" height="15" fill="rgb(220,164,20)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1711.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (122 samples, 0.22%)</title><rect x="54.5051%" y="1685" width="0.2227%" height="15" fill="rgb(222,203,48)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (122 samples, 0.22%)</title><rect x="54.5051%" y="1669" width="0.2227%" height="15" fill="rgb(215,159,22)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1679.50"></text></g><g><title>core::iter::adapters::try_process (122 samples, 0.22%)</title><rect x="54.5051%" y="1653" width="0.2227%" height="15" fill="rgb(216,183,47)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (122 samples, 0.22%)</title><rect x="54.5051%" y="1637" width="0.2227%" height="15" fill="rgb(229,195,25)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (122 samples, 0.22%)</title><rect x="54.5051%" y="1621" width="0.2227%" height="15" fill="rgb(224,132,51)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.22%)</title><rect x="54.5051%" y="1605" width="0.2227%" height="15" fill="rgb(240,63,7)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.22%)</title><rect x="54.5051%" y="1589" width="0.2227%" height="15" fill="rgb(249,182,41)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (122 samples, 0.22%)</title><rect x="54.5051%" y="1573" width="0.2227%" height="15" fill="rgb(243,47,26)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (122 samples, 0.22%)</title><rect x="54.5051%" y="1557" width="0.2227%" height="15" fill="rgb(233,48,2)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (122 samples, 0.22%)</title><rect x="54.5051%" y="1541" width="0.2227%" height="15" fill="rgb(244,165,34)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (122 samples, 0.22%)</title><rect x="54.5051%" y="1525" width="0.2227%" height="15" fill="rgb(207,89,7)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (122 samples, 0.22%)</title><rect x="54.5051%" y="1509" width="0.2227%" height="15" fill="rgb(244,117,36)" fg:x="29853" fg:w="122"/><text x="54.7551%" y="1519.50"></text></g><g><title>mpage_map_and_submit_buffers (7 samples, 0.01%)</title><rect x="54.7333%" y="1893" width="0.0128%" height="15" fill="rgb(226,144,34)" fg:x="29978" fg:w="7"/><text x="54.9833%" y="1903.50"></text></g><g><title>mpage_submit_page (6 samples, 0.01%)</title><rect x="54.7352%" y="1877" width="0.0110%" height="15" fill="rgb(213,23,19)" fg:x="29979" fg:w="6"/><text x="54.9852%" y="1887.50"></text></g><g><title>__GI___close (14 samples, 0.03%)</title><rect x="54.7279%" y="2053" width="0.0256%" height="15" fill="rgb(217,75,12)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="2063.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.03%)</title><rect x="54.7279%" y="2037" width="0.0256%" height="15" fill="rgb(224,159,17)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="2047.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.03%)</title><rect x="54.7279%" y="2021" width="0.0256%" height="15" fill="rgb(217,118,1)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="2031.50"></text></g><g><title>exit_to_user_mode_prepare (14 samples, 0.03%)</title><rect x="54.7279%" y="2005" width="0.0256%" height="15" fill="rgb(232,180,48)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="2015.50"></text></g><g><title>task_work_run (14 samples, 0.03%)</title><rect x="54.7279%" y="1989" width="0.0256%" height="15" fill="rgb(230,27,33)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="1999.50"></text></g><g><title>__fput (14 samples, 0.03%)</title><rect x="54.7279%" y="1973" width="0.0256%" height="15" fill="rgb(205,31,21)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="1983.50"></text></g><g><title>ext4_release_file (14 samples, 0.03%)</title><rect x="54.7279%" y="1957" width="0.0256%" height="15" fill="rgb(253,59,4)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="1967.50"></text></g><g><title>__filemap_fdatawrite_range (14 samples, 0.03%)</title><rect x="54.7279%" y="1941" width="0.0256%" height="15" fill="rgb(224,201,9)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="1951.50"></text></g><g><title>do_writepages (14 samples, 0.03%)</title><rect x="54.7279%" y="1925" width="0.0256%" height="15" fill="rgb(229,206,30)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="1935.50"></text></g><g><title>ext4_writepages (14 samples, 0.03%)</title><rect x="54.7279%" y="1909" width="0.0256%" height="15" fill="rgb(212,67,47)" fg:x="29975" fg:w="14"/><text x="54.9779%" y="1919.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="54.7534%" y="2053" width="0.0219%" height="15" fill="rgb(211,96,50)" fg:x="29989" fg:w="12"/><text x="55.0034%" y="2063.50"></text></g><g><title>checked_request2size (6 samples, 0.01%)</title><rect x="54.7918%" y="2037" width="0.0110%" height="15" fill="rgb(252,114,18)" fg:x="30010" fg:w="6"/><text x="55.0418%" y="2047.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.05%)</title><rect x="54.7753%" y="2053" width="0.0529%" height="15" fill="rgb(223,58,37)" fg:x="30001" fg:w="29"/><text x="55.0253%" y="2063.50"></text></g><g><title>tcache_get (14 samples, 0.03%)</title><rect x="54.8027%" y="2037" width="0.0256%" height="15" fill="rgb(237,70,4)" fg:x="30016" fg:w="14"/><text x="55.0527%" y="2047.50"></text></g><g><title>__fsnotify_parent (58 samples, 0.11%)</title><rect x="54.8392%" y="1957" width="0.1059%" height="15" fill="rgb(244,85,46)" fg:x="30036" fg:w="58"/><text x="55.0892%" y="1967.50"></text></g><g><title>fsnotify (56 samples, 0.10%)</title><rect x="54.8429%" y="1941" width="0.1022%" height="15" fill="rgb(223,39,52)" fg:x="30038" fg:w="56"/><text x="55.0929%" y="1951.50"></text></g><g><title>inotify_handle_inode_event (53 samples, 0.10%)</title><rect x="54.8484%" y="1925" width="0.0968%" height="15" fill="rgb(218,200,14)" fg:x="30041" fg:w="53"/><text x="55.0984%" y="1935.50"></text></g><g><title>fsnotify_add_event (51 samples, 0.09%)</title><rect x="54.8520%" y="1909" width="0.0931%" height="15" fill="rgb(208,171,16)" fg:x="30043" fg:w="51"/><text x="55.1020%" y="1919.50"></text></g><g><title>__wake_up_common_lock (51 samples, 0.09%)</title><rect x="54.8520%" y="1893" width="0.0931%" height="15" fill="rgb(234,200,18)" fg:x="30043" fg:w="51"/><text x="55.1020%" y="1903.50"></text></g><g><title>__lock_text_start (51 samples, 0.09%)</title><rect x="54.8520%" y="1877" width="0.0931%" height="15" fill="rgb(228,45,11)" fg:x="30043" fg:w="51"/><text x="55.1020%" y="1887.50"></text></g><g><title>balance_dirty_pages_ratelimited (6 samples, 0.01%)</title><rect x="54.9561%" y="1893" width="0.0110%" height="15" fill="rgb(237,182,11)" fg:x="30100" fg:w="6"/><text x="55.2061%" y="1903.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="54.9871%" y="1829" width="0.0110%" height="15" fill="rgb(241,175,49)" fg:x="30117" fg:w="6"/><text x="55.2371%" y="1839.50"></text></g><g><title>__slab_alloc.isra.0.constprop.0 (17 samples, 0.03%)</title><rect x="55.0036%" y="1781" width="0.0310%" height="15" fill="rgb(247,38,35)" fg:x="30126" fg:w="17"/><text x="55.2536%" y="1791.50"></text></g><g><title>___slab_alloc.isra.0.constprop.0 (16 samples, 0.03%)</title><rect x="55.0054%" y="1765" width="0.0292%" height="15" fill="rgb(228,39,49)" fg:x="30127" fg:w="16"/><text x="55.2554%" y="1775.50"></text></g><g><title>allocate_slab (16 samples, 0.03%)</title><rect x="55.0054%" y="1749" width="0.0292%" height="15" fill="rgb(226,101,26)" fg:x="30127" fg:w="16"/><text x="55.2554%" y="1759.50"></text></g><g><title>create_page_buffers (35 samples, 0.06%)</title><rect x="54.9743%" y="1861" width="0.0639%" height="15" fill="rgb(206,141,19)" fg:x="30110" fg:w="35"/><text x="55.2243%" y="1871.50"></text></g><g><title>create_empty_buffers (30 samples, 0.05%)</title><rect x="54.9835%" y="1845" width="0.0548%" height="15" fill="rgb(211,200,13)" fg:x="30115" fg:w="30"/><text x="55.2335%" y="1855.50"></text></g><g><title>alloc_page_buffers (22 samples, 0.04%)</title><rect x="54.9981%" y="1829" width="0.0402%" height="15" fill="rgb(241,121,6)" fg:x="30123" fg:w="22"/><text x="55.2481%" y="1839.50"></text></g><g><title>alloc_buffer_head (21 samples, 0.04%)</title><rect x="54.9999%" y="1813" width="0.0383%" height="15" fill="rgb(234,221,29)" fg:x="30124" fg:w="21"/><text x="55.2499%" y="1823.50"></text></g><g><title>kmem_cache_alloc (20 samples, 0.04%)</title><rect x="55.0017%" y="1797" width="0.0365%" height="15" fill="rgb(229,136,5)" fg:x="30125" fg:w="20"/><text x="55.2517%" y="1807.50"></text></g><g><title>__dquot_alloc_space (8 samples, 0.01%)</title><rect x="55.0638%" y="1829" width="0.0146%" height="15" fill="rgb(238,36,11)" fg:x="30159" fg:w="8"/><text x="55.3138%" y="1839.50"></text></g><g><title>ext4_da_reserve_space (12 samples, 0.02%)</title><rect x="55.0583%" y="1845" width="0.0219%" height="15" fill="rgb(251,55,41)" fg:x="30156" fg:w="12"/><text x="55.3083%" y="1855.50"></text></g><g><title>ext4_es_insert_delayed_block (7 samples, 0.01%)</title><rect x="55.0802%" y="1845" width="0.0128%" height="15" fill="rgb(242,34,40)" fg:x="30168" fg:w="7"/><text x="55.3302%" y="1855.50"></text></g><g><title>ext4_da_get_block_prep (37 samples, 0.07%)</title><rect x="55.0383%" y="1861" width="0.0676%" height="15" fill="rgb(215,42,17)" fg:x="30145" fg:w="37"/><text x="55.2883%" y="1871.50"></text></g><g><title>__block_write_begin_int (75 samples, 0.14%)</title><rect x="54.9707%" y="1877" width="0.1369%" height="15" fill="rgb(207,44,46)" fg:x="30108" fg:w="75"/><text x="55.2207%" y="1887.50"></text></g><g><title>__ext4_journal_start_sb (17 samples, 0.03%)</title><rect x="55.1076%" y="1877" width="0.0310%" height="15" fill="rgb(211,206,28)" fg:x="30183" fg:w="17"/><text x="55.3576%" y="1887.50"></text></g><g><title>jbd2__journal_start (15 samples, 0.03%)</title><rect x="55.1113%" y="1861" width="0.0274%" height="15" fill="rgb(237,167,16)" fg:x="30185" fg:w="15"/><text x="55.3613%" y="1871.50"></text></g><g><title>start_this_handle (11 samples, 0.02%)</title><rect x="55.1186%" y="1845" width="0.0201%" height="15" fill="rgb(233,66,6)" fg:x="30189" fg:w="11"/><text x="55.3686%" y="1855.50"></text></g><g><title>__alloc_pages_nodemask (29 samples, 0.05%)</title><rect x="55.1496%" y="1845" width="0.0529%" height="15" fill="rgb(246,123,29)" fg:x="30206" fg:w="29"/><text x="55.3996%" y="1855.50"></text></g><g><title>get_page_from_freelist (28 samples, 0.05%)</title><rect x="55.1514%" y="1829" width="0.0511%" height="15" fill="rgb(209,62,40)" fg:x="30207" fg:w="28"/><text x="55.4014%" y="1839.50"></text></g><g><title>mem_cgroup_charge (8 samples, 0.01%)</title><rect x="55.2537%" y="1813" width="0.0146%" height="15" fill="rgb(218,4,25)" fg:x="30263" fg:w="8"/><text x="55.5037%" y="1823.50"></text></g><g><title>__add_to_page_cache_locked (41 samples, 0.07%)</title><rect x="55.2026%" y="1829" width="0.0749%" height="15" fill="rgb(253,91,49)" fg:x="30235" fg:w="41"/><text x="55.4526%" y="1839.50"></text></g><g><title>__lock_text_start (18 samples, 0.03%)</title><rect x="55.2829%" y="1797" width="0.0329%" height="15" fill="rgb(228,155,29)" fg:x="30279" fg:w="18"/><text x="55.5329%" y="1807.50"></text></g><g><title>add_to_page_cache_lru (65 samples, 0.12%)</title><rect x="55.2026%" y="1845" width="0.1187%" height="15" fill="rgb(243,57,37)" fg:x="30235" fg:w="65"/><text x="55.4526%" y="1855.50"></text></g><g><title>lru_cache_add (24 samples, 0.04%)</title><rect x="55.2774%" y="1829" width="0.0438%" height="15" fill="rgb(244,167,17)" fg:x="30276" fg:w="24"/><text x="55.5274%" y="1839.50"></text></g><g><title>pagevec_lru_move_fn (21 samples, 0.04%)</title><rect x="55.2829%" y="1813" width="0.0383%" height="15" fill="rgb(207,181,38)" fg:x="30279" fg:w="21"/><text x="55.5329%" y="1823.50"></text></g><g><title>pagecache_get_page (100 samples, 0.18%)</title><rect x="55.1496%" y="1861" width="0.1826%" height="15" fill="rgb(211,8,23)" fg:x="30206" fg:w="100"/><text x="55.3996%" y="1871.50"></text></g><g><title>find_get_entry (6 samples, 0.01%)</title><rect x="55.3212%" y="1845" width="0.0110%" height="15" fill="rgb(235,11,44)" fg:x="30300" fg:w="6"/><text x="55.5712%" y="1855.50"></text></g><g><title>xas_load (6 samples, 0.01%)</title><rect x="55.3212%" y="1829" width="0.0110%" height="15" fill="rgb(248,18,52)" fg:x="30300" fg:w="6"/><text x="55.5712%" y="1839.50"></text></g><g><title>grab_cache_page_write_begin (108 samples, 0.20%)</title><rect x="55.1405%" y="1877" width="0.1972%" height="15" fill="rgb(208,4,7)" fg:x="30201" fg:w="108"/><text x="55.3905%" y="1887.50"></text></g><g><title>ext4_da_write_begin (206 samples, 0.38%)</title><rect x="54.9670%" y="1893" width="0.3761%" height="15" fill="rgb(240,17,39)" fg:x="30106" fg:w="206"/><text x="55.2170%" y="1903.50"></text></g><g><title>__lock_text_start (7 samples, 0.01%)</title><rect x="55.3797%" y="1813" width="0.0128%" height="15" fill="rgb(207,170,3)" fg:x="30332" fg:w="7"/><text x="55.6297%" y="1823.50"></text></g><g><title>__ext4_journal_stop (25 samples, 0.05%)</title><rect x="55.3505%" y="1877" width="0.0456%" height="15" fill="rgb(236,100,52)" fg:x="30316" fg:w="25"/><text x="55.6005%" y="1887.50"></text></g><g><title>jbd2_journal_stop (25 samples, 0.05%)</title><rect x="55.3505%" y="1861" width="0.0456%" height="15" fill="rgb(246,78,51)" fg:x="30316" fg:w="25"/><text x="55.6005%" y="1871.50"></text></g><g><title>stop_this_handle (17 samples, 0.03%)</title><rect x="55.3651%" y="1845" width="0.0310%" height="15" fill="rgb(211,17,15)" fg:x="30324" fg:w="17"/><text x="55.6151%" y="1855.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.02%)</title><rect x="55.3760%" y="1829" width="0.0201%" height="15" fill="rgb(209,59,46)" fg:x="30330" fg:w="11"/><text x="55.6260%" y="1839.50"></text></g><g><title>chksum_update (51 samples, 0.09%)</title><rect x="55.4509%" y="1765" width="0.0931%" height="15" fill="rgb(210,92,25)" fg:x="30371" fg:w="51"/><text x="55.7009%" y="1775.50"></text></g><g><title>__crc32c_le (48 samples, 0.09%)</title><rect x="55.4564%" y="1749" width="0.0876%" height="15" fill="rgb(238,174,52)" fg:x="30374" fg:w="48"/><text x="55.7064%" y="1759.50"></text></g><g><title>ext4_mark_iloc_dirty (73 samples, 0.13%)</title><rect x="55.4125%" y="1813" width="0.1333%" height="15" fill="rgb(230,73,7)" fg:x="30350" fg:w="73"/><text x="55.6625%" y="1823.50"></text></g><g><title>ext4_inode_csum_set (56 samples, 0.10%)</title><rect x="55.4436%" y="1797" width="0.1022%" height="15" fill="rgb(243,124,40)" fg:x="30367" fg:w="56"/><text x="55.6936%" y="1807.50"></text></g><g><title>ext4_inode_csum.isra.0 (55 samples, 0.10%)</title><rect x="55.4454%" y="1781" width="0.1004%" height="15" fill="rgb(244,170,11)" fg:x="30368" fg:w="55"/><text x="55.6954%" y="1791.50"></text></g><g><title>__mark_inode_dirty (88 samples, 0.16%)</title><rect x="55.4016%" y="1861" width="0.1607%" height="15" fill="rgb(207,114,54)" fg:x="30344" fg:w="88"/><text x="55.6516%" y="1871.50"></text></g><g><title>ext4_dirty_inode (87 samples, 0.16%)</title><rect x="55.4034%" y="1845" width="0.1588%" height="15" fill="rgb(205,42,20)" fg:x="30345" fg:w="87"/><text x="55.6534%" y="1855.50"></text></g><g><title>__ext4_mark_inode_dirty (82 samples, 0.15%)</title><rect x="55.4125%" y="1829" width="0.1497%" height="15" fill="rgb(230,30,28)" fg:x="30350" fg:w="82"/><text x="55.6625%" y="1839.50"></text></g><g><title>ext4_reserve_inode_write (9 samples, 0.02%)</title><rect x="55.5458%" y="1813" width="0.0164%" height="15" fill="rgb(205,73,54)" fg:x="30423" fg:w="9"/><text x="55.7958%" y="1823.50"></text></g><g><title>ext4_get_inode_loc (6 samples, 0.01%)</title><rect x="55.5513%" y="1797" width="0.0110%" height="15" fill="rgb(254,227,23)" fg:x="30426" fg:w="6"/><text x="55.8013%" y="1807.50"></text></g><g><title>__ext4_get_inode_loc (6 samples, 0.01%)</title><rect x="55.5513%" y="1781" width="0.0110%" height="15" fill="rgb(228,202,34)" fg:x="30426" fg:w="6"/><text x="55.8013%" y="1791.50"></text></g><g><title>__lock_text_start (20 samples, 0.04%)</title><rect x="55.7284%" y="1813" width="0.0365%" height="15" fill="rgb(222,225,37)" fg:x="30523" fg:w="20"/><text x="55.9784%" y="1823.50"></text></g><g><title>block_write_end (113 samples, 0.21%)</title><rect x="55.5623%" y="1861" width="0.2063%" height="15" fill="rgb(221,14,54)" fg:x="30432" fg:w="113"/><text x="55.8123%" y="1871.50"></text></g><g><title>__block_commit_write.isra.0 (112 samples, 0.20%)</title><rect x="55.5641%" y="1845" width="0.2045%" height="15" fill="rgb(254,102,2)" fg:x="30433" fg:w="112"/><text x="55.8141%" y="1855.50"></text></g><g><title>mark_buffer_dirty (29 samples, 0.05%)</title><rect x="55.7156%" y="1829" width="0.0529%" height="15" fill="rgb(232,104,17)" fg:x="30516" fg:w="29"/><text x="55.9656%" y="1839.50"></text></g><g><title>ext4_da_write_end (238 samples, 0.43%)</title><rect x="55.3432%" y="1893" width="0.4345%" height="15" fill="rgb(250,220,14)" fg:x="30312" fg:w="238"/><text x="55.5932%" y="1903.50"></text></g><g><title>generic_write_end (209 samples, 0.38%)</title><rect x="55.3961%" y="1877" width="0.3816%" height="15" fill="rgb(241,158,9)" fg:x="30341" fg:w="209"/><text x="55.6461%" y="1887.50"></text></g><g><title>iov_iter_copy_from_user_atomic (501 samples, 0.91%)</title><rect x="55.7850%" y="1893" width="0.9147%" height="15" fill="rgb(246,9,43)" fg:x="30554" fg:w="501"/><text x="56.0350%" y="1903.50"></text></g><g><title>copyin (498 samples, 0.91%)</title><rect x="55.7905%" y="1877" width="0.9092%" height="15" fill="rgb(206,73,33)" fg:x="30557" fg:w="498"/><text x="56.0405%" y="1887.50"></text></g><g><title>copy_user_enhanced_fast_string (497 samples, 0.91%)</title><rect x="55.7923%" y="1861" width="0.9074%" height="15" fill="rgb(222,79,8)" fg:x="30558" fg:w="497"/><text x="56.0423%" y="1871.50"></text></g><g><title>__GI___libc_write (1,249 samples, 2.28%)</title><rect x="54.8356%" y="2053" width="2.2804%" height="15" fill="rgb(234,8,54)" fg:x="30034" fg:w="1249"/><text x="55.0856%" y="2063.50">_..</text></g><g><title>__GI___libc_write (1,249 samples, 2.28%)</title><rect x="54.8356%" y="2037" width="2.2804%" height="15" fill="rgb(209,134,38)" fg:x="30034" fg:w="1249"/><text x="55.0856%" y="2047.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,248 samples, 2.28%)</title><rect x="54.8374%" y="2021" width="2.2786%" height="15" fill="rgb(230,127,29)" fg:x="30035" fg:w="1248"/><text x="55.0874%" y="2031.50">e..</text></g><g><title>do_syscall_64 (1,248 samples, 2.28%)</title><rect x="54.8374%" y="2005" width="2.2786%" height="15" fill="rgb(242,44,41)" fg:x="30035" fg:w="1248"/><text x="55.0874%" y="2015.50">d..</text></g><g><title>ksys_write (1,248 samples, 2.28%)</title><rect x="54.8374%" y="1989" width="2.2786%" height="15" fill="rgb(222,56,43)" fg:x="30035" fg:w="1248"/><text x="55.0874%" y="1999.50">k..</text></g><g><title>vfs_write (1,247 samples, 2.28%)</title><rect x="54.8392%" y="1973" width="2.2768%" height="15" fill="rgb(238,39,47)" fg:x="30036" fg:w="1247"/><text x="55.0892%" y="1983.50">v..</text></g><g><title>new_sync_write (1,189 samples, 2.17%)</title><rect x="54.9451%" y="1957" width="2.1709%" height="15" fill="rgb(226,79,43)" fg:x="30094" fg:w="1189"/><text x="55.1951%" y="1967.50">n..</text></g><g><title>ext4_file_write_iter (1,189 samples, 2.17%)</title><rect x="54.9451%" y="1941" width="2.1709%" height="15" fill="rgb(242,105,53)" fg:x="30094" fg:w="1189"/><text x="55.1951%" y="1951.50">e..</text></g><g><title>ext4_buffered_write_iter (1,189 samples, 2.17%)</title><rect x="54.9451%" y="1925" width="2.1709%" height="15" fill="rgb(251,132,46)" fg:x="30094" fg:w="1189"/><text x="55.1951%" y="1935.50">e..</text></g><g><title>generic_perform_write (1,189 samples, 2.17%)</title><rect x="54.9451%" y="1909" width="2.1709%" height="15" fill="rgb(231,77,14)" fg:x="30094" fg:w="1189"/><text x="55.1951%" y="1919.50">g..</text></g><g><title>iov_iter_fault_in_readable (228 samples, 0.42%)</title><rect x="56.6997%" y="1893" width="0.4163%" height="15" fill="rgb(240,135,9)" fg:x="31055" fg:w="228"/><text x="56.9497%" y="1903.50"></text></g><g><title>__get_user_nocheck_1 (223 samples, 0.41%)</title><rect x="56.7088%" y="1877" width="0.4071%" height="15" fill="rgb(248,109,14)" fg:x="31060" fg:w="223"/><text x="56.9588%" y="1887.50"></text></g><g><title>rwsem_optimistic_spin (19 samples, 0.03%)</title><rect x="57.1306%" y="1941" width="0.0347%" height="15" fill="rgb(227,146,52)" fg:x="31291" fg:w="19"/><text x="57.3806%" y="1951.50"></text></g><g><title>down_write_killable (23 samples, 0.04%)</title><rect x="57.1269%" y="1973" width="0.0420%" height="15" fill="rgb(232,54,3)" fg:x="31289" fg:w="23"/><text x="57.3769%" y="1983.50"></text></g><g><title>rwsem_down_write_slowpath (22 samples, 0.04%)</title><rect x="57.1288%" y="1957" width="0.0402%" height="15" fill="rgb(229,201,43)" fg:x="31290" fg:w="22"/><text x="57.3788%" y="1967.50"></text></g><g><title>change_protection (8 samples, 0.01%)</title><rect x="57.1744%" y="1957" width="0.0146%" height="15" fill="rgb(252,161,33)" fg:x="31315" fg:w="8"/><text x="57.4244%" y="1967.50"></text></g><g><title>perf_event_mmap (8 samples, 0.01%)</title><rect x="57.1890%" y="1957" width="0.0146%" height="15" fill="rgb(226,146,40)" fg:x="31323" fg:w="8"/><text x="57.4390%" y="1967.50"></text></g><g><title>perf_iterate_sb (6 samples, 0.01%)</title><rect x="57.1927%" y="1941" width="0.0110%" height="15" fill="rgb(219,47,25)" fg:x="31325" fg:w="6"/><text x="57.4427%" y="1951.50"></text></g><g><title>mprotect_fixup (20 samples, 0.04%)</title><rect x="57.1726%" y="1973" width="0.0365%" height="15" fill="rgb(250,135,13)" fg:x="31314" fg:w="20"/><text x="57.4226%" y="1983.50"></text></g><g><title>__x64_sys_mprotect (110 samples, 0.20%)</title><rect x="57.1251%" y="2005" width="0.2008%" height="15" fill="rgb(219,229,18)" fg:x="31288" fg:w="110"/><text x="57.3751%" y="2015.50"></text></g><g><title>do_mprotect_pkey (110 samples, 0.20%)</title><rect x="57.1251%" y="1989" width="0.2008%" height="15" fill="rgb(217,152,27)" fg:x="31288" fg:w="110"/><text x="57.3751%" y="1999.50"></text></g><g><title>rwsem_wake.isra.0 (64 samples, 0.12%)</title><rect x="57.2091%" y="1973" width="0.1169%" height="15" fill="rgb(225,71,47)" fg:x="31334" fg:w="64"/><text x="57.4591%" y="1983.50"></text></g><g><title>wake_up_q (64 samples, 0.12%)</title><rect x="57.2091%" y="1957" width="0.1169%" height="15" fill="rgb(220,139,14)" fg:x="31334" fg:w="64"/><text x="57.4591%" y="1967.50"></text></g><g><title>try_to_wake_up (64 samples, 0.12%)</title><rect x="57.2091%" y="1941" width="0.1169%" height="15" fill="rgb(247,54,32)" fg:x="31334" fg:w="64"/><text x="57.4591%" y="1951.50"></text></g><g><title>__lock_text_start (64 samples, 0.12%)</title><rect x="57.2091%" y="1925" width="0.1169%" height="15" fill="rgb(252,131,39)" fg:x="31334" fg:w="64"/><text x="57.4591%" y="1935.50"></text></g><g><title>do_syscall_64 (114 samples, 0.21%)</title><rect x="57.1233%" y="2021" width="0.2081%" height="15" fill="rgb(210,108,39)" fg:x="31287" fg:w="114"/><text x="57.3733%" y="2031.50"></text></g><g><title>__GI_mprotect (116 samples, 0.21%)</title><rect x="57.1215%" y="2053" width="0.2118%" height="15" fill="rgb(205,23,29)" fg:x="31286" fg:w="116"/><text x="57.3715%" y="2063.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (115 samples, 0.21%)</title><rect x="57.1233%" y="2037" width="0.2100%" height="15" fill="rgb(246,139,46)" fg:x="31287" fg:w="115"/><text x="57.3733%" y="2047.50"></text></g><g><title>__GI_munmap (9 samples, 0.02%)</title><rect x="57.3333%" y="2053" width="0.0164%" height="15" fill="rgb(250,81,26)" fg:x="31402" fg:w="9"/><text x="57.5833%" y="2063.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="57.3333%" y="2037" width="0.0164%" height="15" fill="rgb(214,104,7)" fg:x="31402" fg:w="9"/><text x="57.5833%" y="2047.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="57.3333%" y="2021" width="0.0164%" height="15" fill="rgb(233,189,8)" fg:x="31402" fg:w="9"/><text x="57.5833%" y="2031.50"></text></g><g><title>__x64_sys_munmap (9 samples, 0.02%)</title><rect x="57.3333%" y="2005" width="0.0164%" height="15" fill="rgb(228,141,17)" fg:x="31402" fg:w="9"/><text x="57.5833%" y="2015.50"></text></g><g><title>__vm_munmap (9 samples, 0.02%)</title><rect x="57.3333%" y="1989" width="0.0164%" height="15" fill="rgb(247,157,1)" fg:x="31402" fg:w="9"/><text x="57.5833%" y="1999.50"></text></g><g><title>__do_munmap (9 samples, 0.02%)</title><rect x="57.3333%" y="1973" width="0.0164%" height="15" fill="rgb(249,225,5)" fg:x="31402" fg:w="9"/><text x="57.5833%" y="1983.50"></text></g><g><title>unmap_region (8 samples, 0.01%)</title><rect x="57.3351%" y="1957" width="0.0146%" height="15" fill="rgb(242,55,13)" fg:x="31403" fg:w="8"/><text x="57.5851%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="57.3552%" y="1813" width="0.0347%" height="15" fill="rgb(230,49,50)" fg:x="31414" fg:w="19"/><text x="57.6052%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.03%)</title><rect x="57.3552%" y="1797" width="0.0347%" height="15" fill="rgb(241,111,38)" fg:x="31414" fg:w="19"/><text x="57.6052%" y="1807.50"></text></g><g><title>asm_exc_page_fault (16 samples, 0.03%)</title><rect x="57.3606%" y="1781" width="0.0292%" height="15" fill="rgb(252,155,4)" fg:x="31417" fg:w="16"/><text x="57.6106%" y="1791.50"></text></g><g><title>exc_page_fault (16 samples, 0.03%)</title><rect x="57.3606%" y="1765" width="0.0292%" height="15" fill="rgb(212,69,32)" fg:x="31417" fg:w="16"/><text x="57.6106%" y="1775.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.03%)</title><rect x="57.3606%" y="1749" width="0.0292%" height="15" fill="rgb(243,107,47)" fg:x="31417" fg:w="16"/><text x="57.6106%" y="1759.50"></text></g><g><title>handle_mm_fault (16 samples, 0.03%)</title><rect x="57.3606%" y="1733" width="0.0292%" height="15" fill="rgb(247,130,12)" fg:x="31417" fg:w="16"/><text x="57.6106%" y="1743.50"></text></g><g><title>do_huge_pmd_anonymous_page (16 samples, 0.03%)</title><rect x="57.3606%" y="1717" width="0.0292%" height="15" fill="rgb(233,74,16)" fg:x="31417" fg:w="16"/><text x="57.6106%" y="1727.50"></text></g><g><title>clear_huge_page (16 samples, 0.03%)</title><rect x="57.3606%" y="1701" width="0.0292%" height="15" fill="rgb(208,58,18)" fg:x="31417" fg:w="16"/><text x="57.6106%" y="1711.50"></text></g><g><title>clear_subpage (15 samples, 0.03%)</title><rect x="57.3625%" y="1685" width="0.0274%" height="15" fill="rgb(242,225,1)" fg:x="31418" fg:w="15"/><text x="57.6125%" y="1695.50"></text></g><g><title>clear_page_erms (15 samples, 0.03%)</title><rect x="57.3625%" y="1669" width="0.0274%" height="15" fill="rgb(249,39,40)" fg:x="31418" fg:w="15"/><text x="57.6125%" y="1679.50"></text></g><g><title>asm_exc_page_fault (16 samples, 0.03%)</title><rect x="57.4446%" y="1797" width="0.0292%" height="15" fill="rgb(207,72,44)" fg:x="31463" fg:w="16"/><text x="57.6946%" y="1807.50"></text></g><g><title>exc_page_fault (16 samples, 0.03%)</title><rect x="57.4446%" y="1781" width="0.0292%" height="15" fill="rgb(215,193,12)" fg:x="31463" fg:w="16"/><text x="57.6946%" y="1791.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.03%)</title><rect x="57.4446%" y="1765" width="0.0292%" height="15" fill="rgb(248,41,39)" fg:x="31463" fg:w="16"/><text x="57.6946%" y="1775.50"></text></g><g><title>handle_mm_fault (15 samples, 0.03%)</title><rect x="57.4465%" y="1749" width="0.0274%" height="15" fill="rgb(253,85,4)" fg:x="31464" fg:w="15"/><text x="57.6965%" y="1759.50"></text></g><g><title>do_huge_pmd_anonymous_page (15 samples, 0.03%)</title><rect x="57.4465%" y="1733" width="0.0274%" height="15" fill="rgb(243,70,31)" fg:x="31464" fg:w="15"/><text x="57.6965%" y="1743.50"></text></g><g><title>clear_huge_page (15 samples, 0.03%)</title><rect x="57.4465%" y="1717" width="0.0274%" height="15" fill="rgb(253,195,26)" fg:x="31464" fg:w="15"/><text x="57.6965%" y="1727.50"></text></g><g><title>clear_subpage (14 samples, 0.03%)</title><rect x="57.4483%" y="1701" width="0.0256%" height="15" fill="rgb(243,42,11)" fg:x="31465" fg:w="14"/><text x="57.6983%" y="1711.50"></text></g><g><title>clear_page_erms (14 samples, 0.03%)</title><rect x="57.4483%" y="1685" width="0.0256%" height="15" fill="rgb(239,66,17)" fg:x="31465" fg:w="14"/><text x="57.6983%" y="1695.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.06%)</title><rect x="57.5158%" y="1765" width="0.0639%" height="15" fill="rgb(217,132,21)" fg:x="31502" fg:w="35"/><text x="57.7658%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.05%)</title><rect x="57.5304%" y="1749" width="0.0493%" height="15" fill="rgb(252,202,21)" fg:x="31510" fg:w="27"/><text x="57.7804%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="57.5542%" y="1733" width="0.0256%" height="15" fill="rgb(233,98,36)" fg:x="31523" fg:w="14"/><text x="57.8042%" y="1743.50"></text></g><g><title>__rust_alloc (7 samples, 0.01%)</title><rect x="57.5670%" y="1717" width="0.0128%" height="15" fill="rgb(216,153,54)" fg:x="31530" fg:w="7"/><text x="57.8170%" y="1727.50"></text></g><g><title>core::fmt::Formatter::pad_integral (20 samples, 0.04%)</title><rect x="57.5797%" y="1765" width="0.0365%" height="15" fill="rgb(250,99,7)" fg:x="31537" fg:w="20"/><text x="57.8297%" y="1775.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (87 samples, 0.16%)</title><rect x="57.4738%" y="1797" width="0.1588%" height="15" fill="rgb(207,56,50)" fg:x="31479" fg:w="87"/><text x="57.7238%" y="1807.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (82 samples, 0.15%)</title><rect x="57.4830%" y="1781" width="0.1497%" height="15" fill="rgb(244,61,34)" fg:x="31484" fg:w="82"/><text x="57.7330%" y="1791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="57.6163%" y="1765" width="0.0164%" height="15" fill="rgb(241,50,38)" fg:x="31557" fg:w="9"/><text x="57.8663%" y="1775.50"></text></g><g><title>arrow2::array::utf8::mutable::MutableUtf8Array&lt;O&gt;::try_from_iter (153 samples, 0.28%)</title><rect x="57.3899%" y="1813" width="0.2793%" height="15" fill="rgb(212,166,30)" fg:x="31433" fg:w="153"/><text x="57.6399%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (20 samples, 0.04%)</title><rect x="57.6327%" y="1797" width="0.0365%" height="15" fill="rgb(249,127,32)" fg:x="31566" fg:w="20"/><text x="57.8827%" y="1807.50"></text></g><g><title>__libc_start_call_main (178 samples, 0.32%)</title><rect x="57.3552%" y="2053" width="0.3250%" height="15" fill="rgb(209,103,0)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="2063.50"></text></g><g><title>std::rt::lang_start (178 samples, 0.32%)</title><rect x="57.3552%" y="2037" width="0.3250%" height="15" fill="rgb(238,209,51)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="2047.50"></text></g><g><title>std::rt::lang_start_internal (178 samples, 0.32%)</title><rect x="57.3552%" y="2021" width="0.3250%" height="15" fill="rgb(237,56,23)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="2031.50"></text></g><g><title>std::panic::catch_unwind (178 samples, 0.32%)</title><rect x="57.3552%" y="2005" width="0.3250%" height="15" fill="rgb(215,153,46)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="2015.50"></text></g><g><title>std::panicking::try (178 samples, 0.32%)</title><rect x="57.3552%" y="1989" width="0.3250%" height="15" fill="rgb(224,49,31)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1999.50"></text></g><g><title>std::panicking::try::do_call (178 samples, 0.32%)</title><rect x="57.3552%" y="1973" width="0.3250%" height="15" fill="rgb(250,18,42)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1983.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (178 samples, 0.32%)</title><rect x="57.3552%" y="1957" width="0.3250%" height="15" fill="rgb(215,176,39)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (178 samples, 0.32%)</title><rect x="57.3552%" y="1941" width="0.3250%" height="15" fill="rgb(223,77,29)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1951.50"></text></g><g><title>std::panicking::try (178 samples, 0.32%)</title><rect x="57.3552%" y="1925" width="0.3250%" height="15" fill="rgb(234,94,52)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (178 samples, 0.32%)</title><rect x="57.3552%" y="1909" width="0.3250%" height="15" fill="rgb(220,154,50)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (178 samples, 0.32%)</title><rect x="57.3552%" y="1893" width="0.3250%" height="15" fill="rgb(212,11,10)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1903.50"></text></g><g><title>std::rt::lang_start::{{closure}} (178 samples, 0.32%)</title><rect x="57.3552%" y="1877" width="0.3250%" height="15" fill="rgb(205,166,19)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1887.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (178 samples, 0.32%)</title><rect x="57.3552%" y="1861" width="0.3250%" height="15" fill="rgb(244,198,16)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1871.50"></text></g><g><title>parallel_write_parquet::main (178 samples, 0.32%)</title><rect x="57.3552%" y="1845" width="0.3250%" height="15" fill="rgb(219,69,12)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1855.50"></text></g><g><title>wasm_assessment::parallel_read::parallel_write_parquet::run (178 samples, 0.32%)</title><rect x="57.3552%" y="1829" width="0.3250%" height="15" fill="rgb(245,30,7)" fg:x="31414" fg:w="178"/><text x="57.6052%" y="1839.50"></text></g><g><title>__alloc_pages_nodemask (21 samples, 0.04%)</title><rect x="58.4506%" y="1973" width="0.0383%" height="15" fill="rgb(218,221,48)" fg:x="32014" fg:w="21"/><text x="58.7006%" y="1983.50"></text></g><g><title>get_page_from_freelist (21 samples, 0.04%)</title><rect x="58.4506%" y="1957" width="0.0383%" height="15" fill="rgb(216,66,15)" fg:x="32014" fg:w="21"/><text x="58.7006%" y="1967.50"></text></g><g><title>prep_new_page (20 samples, 0.04%)</title><rect x="58.4525%" y="1941" width="0.0365%" height="15" fill="rgb(226,122,50)" fg:x="32015" fg:w="20"/><text x="58.7025%" y="1951.50"></text></g><g><title>clear_page_erms (20 samples, 0.04%)</title><rect x="58.4525%" y="1925" width="0.0365%" height="15" fill="rgb(239,156,16)" fg:x="32015" fg:w="20"/><text x="58.7025%" y="1935.50"></text></g><g><title>clear_huge_page (10 samples, 0.02%)</title><rect x="58.4926%" y="1957" width="0.0183%" height="15" fill="rgb(224,27,38)" fg:x="32037" fg:w="10"/><text x="58.7426%" y="1967.50"></text></g><g><title>clear_subpage (10 samples, 0.02%)</title><rect x="58.4926%" y="1941" width="0.0183%" height="15" fill="rgb(224,39,27)" fg:x="32037" fg:w="10"/><text x="58.7426%" y="1951.50"></text></g><g><title>clear_page_erms (10 samples, 0.02%)</title><rect x="58.4926%" y="1925" width="0.0183%" height="15" fill="rgb(215,92,29)" fg:x="32037" fg:w="10"/><text x="58.7426%" y="1935.50"></text></g><g><title>do_huge_pmd_anonymous_page (11 samples, 0.02%)</title><rect x="58.4926%" y="1973" width="0.0201%" height="15" fill="rgb(207,159,16)" fg:x="32037" fg:w="11"/><text x="58.7426%" y="1983.50"></text></g><g><title>handle_mm_fault (38 samples, 0.07%)</title><rect x="58.4470%" y="1989" width="0.0694%" height="15" fill="rgb(238,163,47)" fg:x="32012" fg:w="38"/><text x="58.6970%" y="1999.50"></text></g><g><title>__memcpy_avx_unaligned_erms (460 samples, 0.84%)</title><rect x="57.6802%" y="2053" width="0.8399%" height="15" fill="rgb(219,91,49)" fg:x="31592" fg:w="460"/><text x="57.9302%" y="2063.50"></text></g><g><title>asm_exc_page_fault (49 samples, 0.09%)</title><rect x="58.4306%" y="2037" width="0.0895%" height="15" fill="rgb(227,167,31)" fg:x="32003" fg:w="49"/><text x="58.6806%" y="2047.50"></text></g><g><title>exc_page_fault (49 samples, 0.09%)</title><rect x="58.4306%" y="2021" width="0.0895%" height="15" fill="rgb(234,80,54)" fg:x="32003" fg:w="49"/><text x="58.6806%" y="2031.50"></text></g><g><title>do_user_addr_fault (49 samples, 0.09%)</title><rect x="58.4306%" y="2005" width="0.0895%" height="15" fill="rgb(212,114,2)" fg:x="32003" fg:w="49"/><text x="58.6806%" y="2015.50"></text></g><g><title>__memset_avx2_unaligned_erms (42 samples, 0.08%)</title><rect x="58.5200%" y="2053" width="0.0767%" height="15" fill="rgb(234,50,24)" fg:x="32052" fg:w="42"/><text x="58.7700%" y="2063.50"></text></g><g><title>_int_free (37 samples, 0.07%)</title><rect x="58.5967%" y="2053" width="0.0676%" height="15" fill="rgb(221,68,8)" fg:x="32094" fg:w="37"/><text x="58.8467%" y="2063.50"></text></g><g><title>_int_malloc (16 samples, 0.03%)</title><rect x="58.6643%" y="2053" width="0.0292%" height="15" fill="rgb(254,180,31)" fg:x="32131" fg:w="16"/><text x="58.9143%" y="2063.50"></text></g><g><title>page_remove_rmap (9 samples, 0.02%)</title><rect x="58.7355%" y="1877" width="0.0164%" height="15" fill="rgb(247,130,50)" fg:x="32170" fg:w="9"/><text x="58.9855%" y="1887.50"></text></g><g><title>__lock_text_start (15 samples, 0.03%)</title><rect x="58.7574%" y="1845" width="0.0274%" height="15" fill="rgb(211,109,4)" fg:x="32182" fg:w="15"/><text x="59.0074%" y="1855.50"></text></g><g><title>free_unref_page_list (18 samples, 0.03%)</title><rect x="58.7848%" y="1845" width="0.0329%" height="15" fill="rgb(238,50,21)" fg:x="32197" fg:w="18"/><text x="59.0348%" y="1855.50"></text></g><g><title>mmput (68 samples, 0.12%)</title><rect x="58.6989%" y="1941" width="0.1242%" height="15" fill="rgb(225,57,45)" fg:x="32150" fg:w="68"/><text x="58.9489%" y="1951.50"></text></g><g><title>exit_mmap (68 samples, 0.12%)</title><rect x="58.6989%" y="1925" width="0.1242%" height="15" fill="rgb(209,196,50)" fg:x="32150" fg:w="68"/><text x="58.9489%" y="1935.50"></text></g><g><title>unmap_vmas (68 samples, 0.12%)</title><rect x="58.6989%" y="1909" width="0.1242%" height="15" fill="rgb(242,140,13)" fg:x="32150" fg:w="68"/><text x="58.9489%" y="1919.50"></text></g><g><title>unmap_page_range (68 samples, 0.12%)</title><rect x="58.6989%" y="1893" width="0.1242%" height="15" fill="rgb(217,111,7)" fg:x="32150" fg:w="68"/><text x="58.9489%" y="1903.50"></text></g><g><title>tlb_flush_mmu (39 samples, 0.07%)</title><rect x="58.7519%" y="1877" width="0.0712%" height="15" fill="rgb(253,193,51)" fg:x="32179" fg:w="39"/><text x="59.0019%" y="1887.50"></text></g><g><title>release_pages (36 samples, 0.07%)</title><rect x="58.7574%" y="1861" width="0.0657%" height="15" fill="rgb(252,70,29)" fg:x="32182" fg:w="36"/><text x="59.0074%" y="1871.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (70 samples, 0.13%)</title><rect x="58.6971%" y="2053" width="0.1278%" height="15" fill="rgb(232,127,12)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="2063.50"></text></g><g><title>syscall_exit_to_user_mode (70 samples, 0.13%)</title><rect x="58.6971%" y="2037" width="0.1278%" height="15" fill="rgb(211,180,21)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="2047.50"></text></g><g><title>exit_to_user_mode_prepare (70 samples, 0.13%)</title><rect x="58.6971%" y="2021" width="0.1278%" height="15" fill="rgb(229,72,13)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="2031.50"></text></g><g><title>arch_do_signal (70 samples, 0.13%)</title><rect x="58.6971%" y="2005" width="0.1278%" height="15" fill="rgb(240,211,49)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="2015.50"></text></g><g><title>get_signal (70 samples, 0.13%)</title><rect x="58.6971%" y="1989" width="0.1278%" height="15" fill="rgb(219,149,40)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="1999.50"></text></g><g><title>do_group_exit (70 samples, 0.13%)</title><rect x="58.6971%" y="1973" width="0.1278%" height="15" fill="rgb(210,127,46)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="1983.50"></text></g><g><title>do_exit (70 samples, 0.13%)</title><rect x="58.6971%" y="1957" width="0.1278%" height="15" fill="rgb(220,106,7)" fg:x="32149" fg:w="70"/><text x="58.9471%" y="1967.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (33 samples, 0.06%)</title><rect x="58.8268%" y="1701" width="0.0603%" height="15" fill="rgb(249,31,22)" fg:x="32220" fg:w="33"/><text x="59.0768%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.06%)</title><rect x="58.8268%" y="1685" width="0.0603%" height="15" fill="rgb(253,1,49)" fg:x="32220" fg:w="33"/><text x="59.0768%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (20 samples, 0.04%)</title><rect x="58.8870%" y="1701" width="0.0365%" height="15" fill="rgb(227,144,33)" fg:x="32253" fg:w="20"/><text x="59.1370%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (72 samples, 0.13%)</title><rect x="58.8268%" y="1733" width="0.1315%" height="15" fill="rgb(249,163,44)" fg:x="32220" fg:w="72"/><text x="59.0768%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (72 samples, 0.13%)</title><rect x="58.8268%" y="1717" width="0.1315%" height="15" fill="rgb(234,15,39)" fg:x="32220" fg:w="72"/><text x="59.0768%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (19 samples, 0.03%)</title><rect x="58.9235%" y="1701" width="0.0347%" height="15" fill="rgb(207,66,16)" fg:x="32273" fg:w="19"/><text x="59.1735%" y="1711.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (19 samples, 0.03%)</title><rect x="58.9235%" y="1685" width="0.0347%" height="15" fill="rgb(233,112,24)" fg:x="32273" fg:w="19"/><text x="59.1735%" y="1695.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (19 samples, 0.03%)</title><rect x="58.9235%" y="1669" width="0.0347%" height="15" fill="rgb(230,90,22)" fg:x="32273" fg:w="19"/><text x="59.1735%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (85 samples, 0.16%)</title><rect x="58.9582%" y="1717" width="0.1552%" height="15" fill="rgb(229,61,13)" fg:x="32292" fg:w="85"/><text x="59.2082%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.16%)</title><rect x="58.9582%" y="1701" width="0.1552%" height="15" fill="rgb(225,57,24)" fg:x="32292" fg:w="85"/><text x="59.2082%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (36 samples, 0.07%)</title><rect x="59.1134%" y="1717" width="0.0657%" height="15" fill="rgb(208,169,48)" fg:x="32377" fg:w="36"/><text x="59.3634%" y="1727.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (213 samples, 0.39%)</title><rect x="58.8249%" y="1877" width="0.3889%" height="15" fill="rgb(244,218,51)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (213 samples, 0.39%)</title><rect x="58.8249%" y="1861" width="0.3889%" height="15" fill="rgb(214,148,10)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (213 samples, 0.39%)</title><rect x="58.8249%" y="1845" width="0.3889%" height="15" fill="rgb(225,174,27)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (213 samples, 0.39%)</title><rect x="58.8249%" y="1829" width="0.3889%" height="15" fill="rgb(230,96,26)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (213 samples, 0.39%)</title><rect x="58.8249%" y="1813" width="0.3889%" height="15" fill="rgb(232,10,30)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (213 samples, 0.39%)</title><rect x="58.8249%" y="1797" width="0.3889%" height="15" fill="rgb(222,8,50)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (213 samples, 0.39%)</title><rect x="58.8249%" y="1781" width="0.3889%" height="15" fill="rgb(213,81,27)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1791.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (213 samples, 0.39%)</title><rect x="58.8249%" y="1765" width="0.3889%" height="15" fill="rgb(245,50,10)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1775.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (213 samples, 0.39%)</title><rect x="58.8249%" y="1749" width="0.3889%" height="15" fill="rgb(216,100,18)" fg:x="32219" fg:w="213"/><text x="59.0749%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (140 samples, 0.26%)</title><rect x="58.9582%" y="1733" width="0.2556%" height="15" fill="rgb(236,147,54)" fg:x="32292" fg:w="140"/><text x="59.2082%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (19 samples, 0.03%)</title><rect x="59.1791%" y="1717" width="0.0347%" height="15" fill="rgb(205,143,26)" fg:x="32413" fg:w="19"/><text x="59.4291%" y="1727.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (19 samples, 0.03%)</title><rect x="59.1791%" y="1701" width="0.0347%" height="15" fill="rgb(236,26,9)" fg:x="32413" fg:w="19"/><text x="59.4291%" y="1711.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (19 samples, 0.03%)</title><rect x="59.1791%" y="1685" width="0.0347%" height="15" fill="rgb(221,165,53)" fg:x="32413" fg:w="19"/><text x="59.4291%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (214 samples, 0.39%)</title><rect x="58.8249%" y="1893" width="0.3907%" height="15" fill="rgb(214,110,17)" fg:x="32219" fg:w="214"/><text x="59.0749%" y="1903.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (31 samples, 0.06%)</title><rect x="59.2156%" y="1653" width="0.0566%" height="15" fill="rgb(237,197,12)" fg:x="32433" fg:w="31"/><text x="59.4656%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.06%)</title><rect x="59.2156%" y="1637" width="0.0566%" height="15" fill="rgb(205,84,17)" fg:x="32433" fg:w="31"/><text x="59.4656%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (19 samples, 0.03%)</title><rect x="59.2722%" y="1653" width="0.0347%" height="15" fill="rgb(237,18,45)" fg:x="32464" fg:w="19"/><text x="59.5222%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (66 samples, 0.12%)</title><rect x="59.2156%" y="1685" width="0.1205%" height="15" fill="rgb(221,87,14)" fg:x="32433" fg:w="66"/><text x="59.4656%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (66 samples, 0.12%)</title><rect x="59.2156%" y="1669" width="0.1205%" height="15" fill="rgb(238,186,15)" fg:x="32433" fg:w="66"/><text x="59.4656%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (16 samples, 0.03%)</title><rect x="59.3069%" y="1653" width="0.0292%" height="15" fill="rgb(208,115,11)" fg:x="32483" fg:w="16"/><text x="59.5569%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (16 samples, 0.03%)</title><rect x="59.3069%" y="1637" width="0.0292%" height="15" fill="rgb(254,175,0)" fg:x="32483" fg:w="16"/><text x="59.5569%" y="1647.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (16 samples, 0.03%)</title><rect x="59.3069%" y="1621" width="0.0292%" height="15" fill="rgb(227,24,42)" fg:x="32483" fg:w="16"/><text x="59.5569%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 0.57%)</title><rect x="59.3398%" y="1653" width="0.5678%" height="15" fill="rgb(223,211,37)" fg:x="32501" fg:w="311"/><text x="59.5898%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (313 samples, 0.57%)</title><rect x="59.3380%" y="1669" width="0.5715%" height="15" fill="rgb(235,49,27)" fg:x="32500" fg:w="313"/><text x="59.5880%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (102 samples, 0.19%)</title><rect x="59.9094%" y="1669" width="0.1862%" height="15" fill="rgb(254,97,51)" fg:x="32813" fg:w="102"/><text x="60.1594%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (535 samples, 0.98%)</title><rect x="59.2156%" y="1717" width="0.9768%" height="15" fill="rgb(249,51,40)" fg:x="32433" fg:w="535"/><text x="59.4656%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (535 samples, 0.98%)</title><rect x="59.2156%" y="1701" width="0.9768%" height="15" fill="rgb(210,128,45)" fg:x="32433" fg:w="535"/><text x="59.4656%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (469 samples, 0.86%)</title><rect x="59.3361%" y="1685" width="0.8563%" height="15" fill="rgb(224,137,50)" fg:x="32499" fg:w="469"/><text x="59.5861%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (53 samples, 0.10%)</title><rect x="60.0957%" y="1669" width="0.0968%" height="15" fill="rgb(242,15,9)" fg:x="32915" fg:w="53"/><text x="60.3457%" y="1679.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (53 samples, 0.10%)</title><rect x="60.0957%" y="1653" width="0.0968%" height="15" fill="rgb(233,187,41)" fg:x="32915" fg:w="53"/><text x="60.3457%" y="1663.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (53 samples, 0.10%)</title><rect x="60.0957%" y="1637" width="0.0968%" height="15" fill="rgb(227,2,29)" fg:x="32915" fg:w="53"/><text x="60.3457%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (538 samples, 0.98%)</title><rect x="59.2156%" y="1845" width="0.9823%" height="15" fill="rgb(222,70,3)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1855.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (538 samples, 0.98%)</title><rect x="59.2156%" y="1829" width="0.9823%" height="15" fill="rgb(213,11,42)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (538 samples, 0.98%)</title><rect x="59.2156%" y="1813" width="0.9823%" height="15" fill="rgb(225,150,9)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1823.50"></text></g><g><title>core::iter::adapters::try_process (538 samples, 0.98%)</title><rect x="59.2156%" y="1797" width="0.9823%" height="15" fill="rgb(230,162,45)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (538 samples, 0.98%)</title><rect x="59.2156%" y="1781" width="0.9823%" height="15" fill="rgb(222,14,52)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (538 samples, 0.98%)</title><rect x="59.2156%" y="1765" width="0.9823%" height="15" fill="rgb(254,198,14)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (538 samples, 0.98%)</title><rect x="59.2156%" y="1749" width="0.9823%" height="15" fill="rgb(220,217,30)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (538 samples, 0.98%)</title><rect x="59.2156%" y="1733" width="0.9823%" height="15" fill="rgb(215,146,41)" fg:x="32433" fg:w="538"/><text x="59.4656%" y="1743.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (93 samples, 0.17%)</title><rect x="60.2016%" y="1621" width="0.1698%" height="15" fill="rgb(217,27,36)" fg:x="32973" fg:w="93"/><text x="60.4516%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93 samples, 0.17%)</title><rect x="60.2016%" y="1605" width="0.1698%" height="15" fill="rgb(219,218,39)" fg:x="32973" fg:w="93"/><text x="60.4516%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (32 samples, 0.06%)</title><rect x="60.3714%" y="1621" width="0.0584%" height="15" fill="rgb(219,4,42)" fg:x="33066" fg:w="32"/><text x="60.6214%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (146 samples, 0.27%)</title><rect x="60.2016%" y="1669" width="0.2666%" height="15" fill="rgb(249,119,36)" fg:x="32973" fg:w="146"/><text x="60.4516%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (146 samples, 0.27%)</title><rect x="60.2016%" y="1653" width="0.2666%" height="15" fill="rgb(209,23,33)" fg:x="32973" fg:w="146"/><text x="60.4516%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (146 samples, 0.27%)</title><rect x="60.2016%" y="1637" width="0.2666%" height="15" fill="rgb(211,10,0)" fg:x="32973" fg:w="146"/><text x="60.4516%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (21 samples, 0.04%)</title><rect x="60.4298%" y="1621" width="0.0383%" height="15" fill="rgb(208,99,37)" fg:x="33098" fg:w="21"/><text x="60.6798%" y="1631.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (21 samples, 0.04%)</title><rect x="60.4298%" y="1605" width="0.0383%" height="15" fill="rgb(213,132,31)" fg:x="33098" fg:w="21"/><text x="60.6798%" y="1615.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (21 samples, 0.04%)</title><rect x="60.4298%" y="1589" width="0.0383%" height="15" fill="rgb(243,129,40)" fg:x="33098" fg:w="21"/><text x="60.6798%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (149 samples, 0.27%)</title><rect x="60.1979%" y="1797" width="0.2720%" height="15" fill="rgb(210,66,33)" fg:x="32971" fg:w="149"/><text x="60.4479%" y="1807.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (149 samples, 0.27%)</title><rect x="60.1979%" y="1781" width="0.2720%" height="15" fill="rgb(209,189,4)" fg:x="32971" fg:w="149"/><text x="60.4479%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 0.27%)</title><rect x="60.1979%" y="1765" width="0.2720%" height="15" fill="rgb(214,107,37)" fg:x="32971" fg:w="149"/><text x="60.4479%" y="1775.50"></text></g><g><title>core::iter::adapters::try_process (149 samples, 0.27%)</title><rect x="60.1979%" y="1749" width="0.2720%" height="15" fill="rgb(245,88,54)" fg:x="32971" fg:w="149"/><text x="60.4479%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (149 samples, 0.27%)</title><rect x="60.1979%" y="1733" width="0.2720%" height="15" fill="rgb(205,146,20)" fg:x="32971" fg:w="149"/><text x="60.4479%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.27%)</title><rect x="60.1979%" y="1717" width="0.2720%" height="15" fill="rgb(220,161,25)" fg:x="32971" fg:w="149"/><text x="60.4479%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (148 samples, 0.27%)</title><rect x="60.1997%" y="1701" width="0.2702%" height="15" fill="rgb(215,152,15)" fg:x="32972" fg:w="148"/><text x="60.4497%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (148 samples, 0.27%)</title><rect x="60.1997%" y="1685" width="0.2702%" height="15" fill="rgb(233,192,44)" fg:x="32972" fg:w="148"/><text x="60.4497%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (223 samples, 0.41%)</title><rect x="60.4736%" y="1557" width="0.4071%" height="15" fill="rgb(240,170,46)" fg:x="33122" fg:w="223"/><text x="60.7236%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (223 samples, 0.41%)</title><rect x="60.4736%" y="1541" width="0.4071%" height="15" fill="rgb(207,104,33)" fg:x="33122" fg:w="223"/><text x="60.7236%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (74 samples, 0.14%)</title><rect x="60.8808%" y="1557" width="0.1351%" height="15" fill="rgb(219,21,39)" fg:x="33345" fg:w="74"/><text x="61.1308%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (44 samples, 0.08%)</title><rect x="61.0159%" y="1557" width="0.0803%" height="15" fill="rgb(214,133,29)" fg:x="33419" fg:w="44"/><text x="61.2659%" y="1567.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (44 samples, 0.08%)</title><rect x="61.0159%" y="1541" width="0.0803%" height="15" fill="rgb(226,93,6)" fg:x="33419" fg:w="44"/><text x="61.2659%" y="1551.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (44 samples, 0.08%)</title><rect x="61.0159%" y="1525" width="0.0803%" height="15" fill="rgb(252,222,34)" fg:x="33419" fg:w="44"/><text x="61.2659%" y="1535.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (343 samples, 0.63%)</title><rect x="60.4718%" y="1605" width="0.6262%" height="15" fill="rgb(252,92,48)" fg:x="33121" fg:w="343"/><text x="60.7218%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (343 samples, 0.63%)</title><rect x="60.4718%" y="1589" width="0.6262%" height="15" fill="rgb(245,223,24)" fg:x="33121" fg:w="343"/><text x="60.7218%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (342 samples, 0.62%)</title><rect x="60.4736%" y="1573" width="0.6244%" height="15" fill="rgb(205,176,3)" fg:x="33122" fg:w="342"/><text x="60.7236%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (345 samples, 0.63%)</title><rect x="60.4700%" y="1733" width="0.6299%" height="15" fill="rgb(235,151,15)" fg:x="33120" fg:w="345"/><text x="60.7200%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (345 samples, 0.63%)</title><rect x="60.4700%" y="1717" width="0.6299%" height="15" fill="rgb(237,209,11)" fg:x="33120" fg:w="345"/><text x="60.7200%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (345 samples, 0.63%)</title><rect x="60.4700%" y="1701" width="0.6299%" height="15" fill="rgb(243,227,24)" fg:x="33120" fg:w="345"/><text x="60.7200%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (345 samples, 0.63%)</title><rect x="60.4700%" y="1685" width="0.6299%" height="15" fill="rgb(239,193,16)" fg:x="33120" fg:w="345"/><text x="60.7200%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (345 samples, 0.63%)</title><rect x="60.4700%" y="1669" width="0.6299%" height="15" fill="rgb(231,27,9)" fg:x="33120" fg:w="345"/><text x="60.7200%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (344 samples, 0.63%)</title><rect x="60.4718%" y="1653" width="0.6281%" height="15" fill="rgb(219,169,10)" fg:x="33121" fg:w="344"/><text x="60.7218%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 0.63%)</title><rect x="60.4718%" y="1637" width="0.6281%" height="15" fill="rgb(244,229,43)" fg:x="33121" fg:w="344"/><text x="60.7218%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 0.63%)</title><rect x="60.4718%" y="1621" width="0.6281%" height="15" fill="rgb(254,38,20)" fg:x="33121" fg:w="344"/><text x="60.7218%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (495 samples, 0.90%)</title><rect x="60.1979%" y="1813" width="0.9038%" height="15" fill="rgb(250,47,30)" fg:x="32971" fg:w="495"/><text x="60.4479%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (346 samples, 0.63%)</title><rect x="60.4700%" y="1797" width="0.6317%" height="15" fill="rgb(224,124,36)" fg:x="33120" fg:w="346"/><text x="60.7200%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (346 samples, 0.63%)</title><rect x="60.4700%" y="1781" width="0.6317%" height="15" fill="rgb(246,68,51)" fg:x="33120" fg:w="346"/><text x="60.7200%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (346 samples, 0.63%)</title><rect x="60.4700%" y="1765" width="0.6317%" height="15" fill="rgb(253,43,49)" fg:x="33120" fg:w="346"/><text x="60.7200%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (346 samples, 0.63%)</title><rect x="60.4700%" y="1749" width="0.6317%" height="15" fill="rgb(219,54,36)" fg:x="33120" fg:w="346"/><text x="60.7200%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (85 samples, 0.16%)</title><rect x="61.1108%" y="1589" width="0.1552%" height="15" fill="rgb(227,133,34)" fg:x="33471" fg:w="85"/><text x="61.3608%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.16%)</title><rect x="61.1108%" y="1573" width="0.1552%" height="15" fill="rgb(247,227,15)" fg:x="33471" fg:w="85"/><text x="61.3608%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (18 samples, 0.03%)</title><rect x="61.2660%" y="1589" width="0.0329%" height="15" fill="rgb(229,96,14)" fg:x="33556" fg:w="18"/><text x="61.5160%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,146 samples, 2.09%)</title><rect x="59.2156%" y="1861" width="2.0923%" height="15" fill="rgb(220,79,17)" fg:x="32433" fg:w="1146"/><text x="59.4656%" y="1871.50">r..</text></g><g><title>rayon_core::registry::in_worker (608 samples, 1.11%)</title><rect x="60.1979%" y="1845" width="1.1101%" height="15" fill="rgb(205,131,53)" fg:x="32971" fg:w="608"/><text x="60.4479%" y="1855.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (608 samples, 1.11%)</title><rect x="60.1979%" y="1829" width="1.1101%" height="15" fill="rgb(209,50,29)" fg:x="32971" fg:w="608"/><text x="60.4479%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (108 samples, 0.20%)</title><rect x="61.1108%" y="1813" width="0.1972%" height="15" fill="rgb(245,86,46)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1823.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (108 samples, 0.20%)</title><rect x="61.1108%" y="1797" width="0.1972%" height="15" fill="rgb(235,66,46)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (108 samples, 0.20%)</title><rect x="61.1108%" y="1781" width="0.1972%" height="15" fill="rgb(232,148,31)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (108 samples, 0.20%)</title><rect x="61.1108%" y="1765" width="0.1972%" height="15" fill="rgb(217,149,8)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (108 samples, 0.20%)</title><rect x="61.1108%" y="1749" width="0.1972%" height="15" fill="rgb(209,183,11)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (108 samples, 0.20%)</title><rect x="61.1108%" y="1733" width="0.1972%" height="15" fill="rgb(208,55,20)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (108 samples, 0.20%)</title><rect x="61.1108%" y="1717" width="0.1972%" height="15" fill="rgb(218,39,14)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (108 samples, 0.20%)</title><rect x="61.1108%" y="1701" width="0.1972%" height="15" fill="rgb(216,169,33)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (108 samples, 0.20%)</title><rect x="61.1108%" y="1685" width="0.1972%" height="15" fill="rgb(233,80,24)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 samples, 0.20%)</title><rect x="61.1108%" y="1669" width="0.1972%" height="15" fill="rgb(213,179,31)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 samples, 0.20%)</title><rect x="61.1108%" y="1653" width="0.1972%" height="15" fill="rgb(209,19,5)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (108 samples, 0.20%)</title><rect x="61.1108%" y="1637" width="0.1972%" height="15" fill="rgb(219,18,35)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (108 samples, 0.20%)</title><rect x="61.1108%" y="1621" width="0.1972%" height="15" fill="rgb(209,169,16)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (108 samples, 0.20%)</title><rect x="61.1108%" y="1605" width="0.1972%" height="15" fill="rgb(245,90,51)" fg:x="33471" fg:w="108"/><text x="61.3608%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::build_statistics (83 samples, 0.15%)</title><rect x="61.3080%" y="1637" width="0.1515%" height="15" fill="rgb(220,99,45)" fg:x="33579" fg:w="83"/><text x="61.5580%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83 samples, 0.15%)</title><rect x="61.3080%" y="1621" width="0.1515%" height="15" fill="rgb(249,89,25)" fg:x="33579" fg:w="83"/><text x="61.5580%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::encode_plain (57 samples, 0.10%)</title><rect x="61.4595%" y="1637" width="0.1041%" height="15" fill="rgb(239,193,0)" fg:x="33662" fg:w="57"/><text x="61.7095%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (35 samples, 0.06%)</title><rect x="61.5636%" y="1637" width="0.0639%" height="15" fill="rgb(231,126,1)" fg:x="33719" fg:w="35"/><text x="61.8136%" y="1647.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (35 samples, 0.06%)</title><rect x="61.5636%" y="1621" width="0.0639%" height="15" fill="rgb(243,166,3)" fg:x="33719" fg:w="35"/><text x="61.8136%" y="1631.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (35 samples, 0.06%)</title><rect x="61.5636%" y="1605" width="0.0639%" height="15" fill="rgb(223,22,34)" fg:x="33719" fg:w="35"/><text x="61.8136%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (176 samples, 0.32%)</title><rect x="61.3080%" y="1701" width="0.3213%" height="15" fill="rgb(251,52,51)" fg:x="33579" fg:w="176"/><text x="61.5580%" y="1711.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (176 samples, 0.32%)</title><rect x="61.3080%" y="1685" width="0.3213%" height="15" fill="rgb(221,165,28)" fg:x="33579" fg:w="176"/><text x="61.5580%" y="1695.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page_integer (176 samples, 0.32%)</title><rect x="61.3080%" y="1669" width="0.3213%" height="15" fill="rgb(218,121,47)" fg:x="33579" fg:w="176"/><text x="61.5580%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::primitive::basic::array_to_page (176 samples, 0.32%)</title><rect x="61.3080%" y="1653" width="0.3213%" height="15" fill="rgb(209,120,9)" fg:x="33579" fg:w="176"/><text x="61.5580%" y="1663.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (177 samples, 0.32%)</title><rect x="61.3080%" y="1829" width="0.3232%" height="15" fill="rgb(236,68,12)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1839.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (177 samples, 0.32%)</title><rect x="61.3080%" y="1813" width="0.3232%" height="15" fill="rgb(225,194,26)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (177 samples, 0.32%)</title><rect x="61.3080%" y="1797" width="0.3232%" height="15" fill="rgb(231,84,39)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (177 samples, 0.32%)</title><rect x="61.3080%" y="1781" width="0.3232%" height="15" fill="rgb(210,11,45)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (177 samples, 0.32%)</title><rect x="61.3080%" y="1765" width="0.3232%" height="15" fill="rgb(224,54,52)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (177 samples, 0.32%)</title><rect x="61.3080%" y="1749" width="0.3232%" height="15" fill="rgb(238,102,14)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (177 samples, 0.32%)</title><rect x="61.3080%" y="1733" width="0.3232%" height="15" fill="rgb(243,160,52)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (177 samples, 0.32%)</title><rect x="61.3080%" y="1717" width="0.3232%" height="15" fill="rgb(216,114,19)" fg:x="33579" fg:w="177"/><text x="61.5580%" y="1727.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (101 samples, 0.18%)</title><rect x="61.6312%" y="1605" width="0.1844%" height="15" fill="rgb(244,166,37)" fg:x="33756" fg:w="101"/><text x="61.8812%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (101 samples, 0.18%)</title><rect x="61.6312%" y="1589" width="0.1844%" height="15" fill="rgb(246,29,44)" fg:x="33756" fg:w="101"/><text x="61.8812%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (44 samples, 0.08%)</title><rect x="61.8156%" y="1605" width="0.0803%" height="15" fill="rgb(215,56,53)" fg:x="33857" fg:w="44"/><text x="62.0656%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (162 samples, 0.30%)</title><rect x="61.6312%" y="1653" width="0.2958%" height="15" fill="rgb(217,60,2)" fg:x="33756" fg:w="162"/><text x="61.8812%" y="1663.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (162 samples, 0.30%)</title><rect x="61.6312%" y="1637" width="0.2958%" height="15" fill="rgb(207,26,24)" fg:x="33756" fg:w="162"/><text x="61.8812%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (162 samples, 0.30%)</title><rect x="61.6312%" y="1621" width="0.2958%" height="15" fill="rgb(252,210,15)" fg:x="33756" fg:w="162"/><text x="61.8812%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (17 samples, 0.03%)</title><rect x="61.8959%" y="1605" width="0.0310%" height="15" fill="rgb(253,209,26)" fg:x="33901" fg:w="17"/><text x="62.1459%" y="1615.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (17 samples, 0.03%)</title><rect x="61.8959%" y="1589" width="0.0310%" height="15" fill="rgb(238,170,14)" fg:x="33901" fg:w="17"/><text x="62.1459%" y="1599.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (17 samples, 0.03%)</title><rect x="61.8959%" y="1573" width="0.0310%" height="15" fill="rgb(216,178,15)" fg:x="33901" fg:w="17"/><text x="62.1459%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (163 samples, 0.30%)</title><rect x="61.6312%" y="1797" width="0.2976%" height="15" fill="rgb(250,197,2)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (163 samples, 0.30%)</title><rect x="61.6312%" y="1781" width="0.2976%" height="15" fill="rgb(212,70,42)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (163 samples, 0.30%)</title><rect x="61.6312%" y="1765" width="0.2976%" height="15" fill="rgb(227,213,9)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (163 samples, 0.30%)</title><rect x="61.6312%" y="1749" width="0.2976%" height="15" fill="rgb(245,99,25)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (163 samples, 0.30%)</title><rect x="61.6312%" y="1733" width="0.2976%" height="15" fill="rgb(250,82,29)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163 samples, 0.30%)</title><rect x="61.6312%" y="1717" width="0.2976%" height="15" fill="rgb(241,226,54)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.30%)</title><rect x="61.6312%" y="1701" width="0.2976%" height="15" fill="rgb(221,99,41)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.30%)</title><rect x="61.6312%" y="1685" width="0.2976%" height="15" fill="rgb(213,90,21)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.30%)</title><rect x="61.6312%" y="1669" width="0.2976%" height="15" fill="rgb(205,208,24)" fg:x="33756" fg:w="163"/><text x="61.8812%" y="1679.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (105 samples, 0.19%)</title><rect x="61.9288%" y="1589" width="0.1917%" height="15" fill="rgb(246,31,12)" fg:x="33919" fg:w="105"/><text x="62.1788%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (105 samples, 0.19%)</title><rect x="61.9288%" y="1573" width="0.1917%" height="15" fill="rgb(213,154,6)" fg:x="33919" fg:w="105"/><text x="62.1788%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (37 samples, 0.07%)</title><rect x="62.1205%" y="1589" width="0.0676%" height="15" fill="rgb(222,163,29)" fg:x="34024" fg:w="37"/><text x="62.3705%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (156 samples, 0.28%)</title><rect x="61.9288%" y="1637" width="0.2848%" height="15" fill="rgb(227,201,8)" fg:x="33919" fg:w="156"/><text x="62.1788%" y="1647.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (156 samples, 0.28%)</title><rect x="61.9288%" y="1621" width="0.2848%" height="15" fill="rgb(233,9,32)" fg:x="33919" fg:w="156"/><text x="62.1788%" y="1631.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (156 samples, 0.28%)</title><rect x="61.9288%" y="1605" width="0.2848%" height="15" fill="rgb(217,54,24)" fg:x="33919" fg:w="156"/><text x="62.1788%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (14 samples, 0.03%)</title><rect x="62.1880%" y="1589" width="0.0256%" height="15" fill="rgb(235,192,0)" fg:x="34061" fg:w="14"/><text x="62.4380%" y="1599.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (14 samples, 0.03%)</title><rect x="62.1880%" y="1573" width="0.0256%" height="15" fill="rgb(235,45,9)" fg:x="34061" fg:w="14"/><text x="62.4380%" y="1583.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (14 samples, 0.03%)</title><rect x="62.1880%" y="1557" width="0.0256%" height="15" fill="rgb(246,42,40)" fg:x="34061" fg:w="14"/><text x="62.4380%" y="1567.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (157 samples, 0.29%)</title><rect x="61.9288%" y="1797" width="0.2866%" height="15" fill="rgb(248,111,24)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (157 samples, 0.29%)</title><rect x="61.9288%" y="1781" width="0.2866%" height="15" fill="rgb(249,65,22)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (157 samples, 0.29%)</title><rect x="61.9288%" y="1765" width="0.2866%" height="15" fill="rgb(238,111,51)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (157 samples, 0.29%)</title><rect x="61.9288%" y="1749" width="0.2866%" height="15" fill="rgb(250,118,22)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (157 samples, 0.29%)</title><rect x="61.9288%" y="1733" width="0.2866%" height="15" fill="rgb(234,84,26)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (157 samples, 0.29%)</title><rect x="61.9288%" y="1717" width="0.2866%" height="15" fill="rgb(243,172,12)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (157 samples, 0.29%)</title><rect x="61.9288%" y="1701" width="0.2866%" height="15" fill="rgb(236,150,49)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (157 samples, 0.29%)</title><rect x="61.9288%" y="1685" width="0.2866%" height="15" fill="rgb(225,197,26)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.29%)</title><rect x="61.9288%" y="1669" width="0.2866%" height="15" fill="rgb(214,17,42)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.29%)</title><rect x="61.9288%" y="1653" width="0.2866%" height="15" fill="rgb(224,165,40)" fg:x="33919" fg:w="157"/><text x="62.1788%" y="1663.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (500 samples, 0.91%)</title><rect x="61.3080%" y="1861" width="0.9129%" height="15" fill="rgb(246,100,4)" fg:x="33579" fg:w="500"/><text x="61.5580%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (500 samples, 0.91%)</title><rect x="61.3080%" y="1845" width="0.9129%" height="15" fill="rgb(222,103,0)" fg:x="33579" fg:w="500"/><text x="61.5580%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (323 samples, 0.59%)</title><rect x="61.6312%" y="1829" width="0.5897%" height="15" fill="rgb(227,189,26)" fg:x="33756" fg:w="323"/><text x="61.8812%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (323 samples, 0.59%)</title><rect x="61.6312%" y="1813" width="0.5897%" height="15" fill="rgb(214,202,17)" fg:x="33756" fg:w="323"/><text x="61.8812%" y="1823.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::build_statistics (118 samples, 0.22%)</title><rect x="62.2227%" y="1541" width="0.2154%" height="15" fill="rgb(229,111,3)" fg:x="34080" fg:w="118"/><text x="62.4727%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118 samples, 0.22%)</title><rect x="62.2227%" y="1525" width="0.2154%" height="15" fill="rgb(229,172,15)" fg:x="34080" fg:w="118"/><text x="62.4727%" y="1535.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (44 samples, 0.08%)</title><rect x="62.4382%" y="1541" width="0.0803%" height="15" fill="rgb(230,224,35)" fg:x="34198" fg:w="44"/><text x="62.6882%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (181 samples, 0.33%)</title><rect x="62.2227%" y="1733" width="0.3305%" height="15" fill="rgb(251,141,6)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (181 samples, 0.33%)</title><rect x="62.2227%" y="1717" width="0.3305%" height="15" fill="rgb(225,208,6)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1727.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (181 samples, 0.33%)</title><rect x="62.2227%" y="1701" width="0.3305%" height="15" fill="rgb(246,181,16)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (181 samples, 0.33%)</title><rect x="62.2227%" y="1685" width="0.3305%" height="15" fill="rgb(227,129,36)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1695.50"></text></g><g><title>core::iter::adapters::try_process (181 samples, 0.33%)</title><rect x="62.2227%" y="1669" width="0.3305%" height="15" fill="rgb(248,117,24)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (181 samples, 0.33%)</title><rect x="62.2227%" y="1653" width="0.3305%" height="15" fill="rgb(214,185,35)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (181 samples, 0.33%)</title><rect x="62.2227%" y="1637" width="0.3305%" height="15" fill="rgb(236,150,34)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (181 samples, 0.33%)</title><rect x="62.2227%" y="1621" width="0.3305%" height="15" fill="rgb(243,228,27)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (181 samples, 0.33%)</title><rect x="62.2227%" y="1605" width="0.3305%" height="15" fill="rgb(245,77,44)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1615.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (181 samples, 0.33%)</title><rect x="62.2227%" y="1589" width="0.3305%" height="15" fill="rgb(235,214,42)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1599.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (181 samples, 0.33%)</title><rect x="62.2227%" y="1573" width="0.3305%" height="15" fill="rgb(221,74,3)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (181 samples, 0.33%)</title><rect x="62.2227%" y="1557" width="0.3305%" height="15" fill="rgb(206,121,29)" fg:x="34080" fg:w="181"/><text x="62.4727%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (19 samples, 0.03%)</title><rect x="62.5185%" y="1541" width="0.0347%" height="15" fill="rgb(249,131,53)" fg:x="34242" fg:w="19"/><text x="62.7685%" y="1551.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (19 samples, 0.03%)</title><rect x="62.5185%" y="1525" width="0.0347%" height="15" fill="rgb(236,170,29)" fg:x="34242" fg:w="19"/><text x="62.7685%" y="1535.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (18 samples, 0.03%)</title><rect x="62.5203%" y="1509" width="0.0329%" height="15" fill="rgb(247,96,15)" fg:x="34243" fg:w="18"/><text x="62.7703%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (183 samples, 0.33%)</title><rect x="62.2209%" y="1781" width="0.3341%" height="15" fill="rgb(211,210,7)" fg:x="34079" fg:w="183"/><text x="62.4709%" y="1791.50"></text></g><g><title>rayon_core::registry::in_worker (182 samples, 0.33%)</title><rect x="62.2227%" y="1765" width="0.3323%" height="15" fill="rgb(240,88,50)" fg:x="34080" fg:w="182"/><text x="62.4727%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (182 samples, 0.33%)</title><rect x="62.2227%" y="1749" width="0.3323%" height="15" fill="rgb(209,229,26)" fg:x="34080" fg:w="182"/><text x="62.4727%" y="1759.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::encode_plain (41 samples, 0.07%)</title><rect x="62.5550%" y="1525" width="0.0749%" height="15" fill="rgb(210,68,23)" fg:x="34262" fg:w="41"/><text x="62.8050%" y="1535.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page (60 samples, 0.11%)</title><rect x="62.5550%" y="1573" width="0.1095%" height="15" fill="rgb(229,180,13)" fg:x="34262" fg:w="60"/><text x="62.8050%" y="1583.50"></text></g><g><title>arrow2::io::parquet::write::array_to_page_simple (60 samples, 0.11%)</title><rect x="62.5550%" y="1557" width="0.1095%" height="15" fill="rgb(236,53,44)" fg:x="34262" fg:w="60"/><text x="62.8050%" y="1567.50"></text></g><g><title>arrow2::io::parquet::write::utf8::basic::array_to_page (60 samples, 0.11%)</title><rect x="62.5550%" y="1541" width="0.1095%" height="15" fill="rgb(244,214,29)" fg:x="34262" fg:w="60"/><text x="62.8050%" y="1551.50"></text></g><g><title>arrow2::io::parquet::write::utils::write_def_levels (19 samples, 0.03%)</title><rect x="62.6299%" y="1525" width="0.0347%" height="15" fill="rgb(220,75,29)" fg:x="34303" fg:w="19"/><text x="62.8799%" y="1535.50"></text></g><g><title>parquet2::encoding::hybrid_rle::encoder::encode_bool (19 samples, 0.03%)</title><rect x="62.6299%" y="1509" width="0.0347%" height="15" fill="rgb(214,183,37)" fg:x="34303" fg:w="19"/><text x="62.8799%" y="1519.50"></text></g><g><title>parquet2::encoding::hybrid_rle::bitmap::encode_bool (19 samples, 0.03%)</title><rect x="62.6299%" y="1493" width="0.0347%" height="15" fill="rgb(239,117,29)" fg:x="34303" fg:w="19"/><text x="62.8799%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,104 samples, 3.84%)</title><rect x="58.8249%" y="1909" width="3.8414%" height="15" fill="rgb(237,171,35)" fg:x="32219" fg:w="2104"/><text x="59.0749%" y="1919.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (1,890 samples, 3.45%)</title><rect x="59.2156%" y="1893" width="3.4507%" height="15" fill="rgb(229,178,53)" fg:x="32433" fg:w="1890"/><text x="59.4656%" y="1903.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,890 samples, 3.45%)</title><rect x="59.2156%" y="1877" width="3.4507%" height="15" fill="rgb(210,102,19)" fg:x="32433" fg:w="1890"/><text x="59.4656%" y="1887.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (244 samples, 0.45%)</title><rect x="62.2209%" y="1861" width="0.4455%" height="15" fill="rgb(235,127,22)" fg:x="34079" fg:w="244"/><text x="62.4709%" y="1871.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (244 samples, 0.45%)</title><rect x="62.2209%" y="1845" width="0.4455%" height="15" fill="rgb(244,31,31)" fg:x="34079" fg:w="244"/><text x="62.4709%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (244 samples, 0.45%)</title><rect x="62.2209%" y="1829" width="0.4455%" height="15" fill="rgb(231,43,21)" fg:x="34079" fg:w="244"/><text x="62.4709%" y="1839.50"></text></g><g><title>rayon_core::registry::in_worker (244 samples, 0.45%)</title><rect x="62.2209%" y="1813" width="0.4455%" height="15" fill="rgb(217,131,35)" fg:x="34079" fg:w="244"/><text x="62.4709%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (244 samples, 0.45%)</title><rect x="62.2209%" y="1797" width="0.4455%" height="15" fill="rgb(221,149,4)" fg:x="34079" fg:w="244"/><text x="62.4709%" y="1807.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (61 samples, 0.11%)</title><rect x="62.5550%" y="1781" width="0.1114%" height="15" fill="rgb(232,170,28)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (61 samples, 0.11%)</title><rect x="62.5550%" y="1765" width="0.1114%" height="15" fill="rgb(238,56,10)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1775.50"></text></g><g><title>rayon_core::registry::in_worker (61 samples, 0.11%)</title><rect x="62.5550%" y="1749" width="0.1114%" height="15" fill="rgb(235,196,14)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (61 samples, 0.11%)</title><rect x="62.5550%" y="1733" width="0.1114%" height="15" fill="rgb(216,45,48)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (61 samples, 0.11%)</title><rect x="62.5550%" y="1717" width="0.1114%" height="15" fill="rgb(238,213,17)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (61 samples, 0.11%)</title><rect x="62.5550%" y="1701" width="0.1114%" height="15" fill="rgb(212,13,2)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1711.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (61 samples, 0.11%)</title><rect x="62.5550%" y="1685" width="0.1114%" height="15" fill="rgb(240,114,20)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.11%)</title><rect x="62.5550%" y="1669" width="0.1114%" height="15" fill="rgb(228,41,40)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1679.50"></text></g><g><title>core::iter::adapters::try_process (61 samples, 0.11%)</title><rect x="62.5550%" y="1653" width="0.1114%" height="15" fill="rgb(244,132,35)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 0.11%)</title><rect x="62.5550%" y="1637" width="0.1114%" height="15" fill="rgb(253,189,4)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 0.11%)</title><rect x="62.5550%" y="1621" width="0.1114%" height="15" fill="rgb(224,37,19)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.11%)</title><rect x="62.5550%" y="1605" width="0.1114%" height="15" fill="rgb(235,223,18)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.11%)</title><rect x="62.5550%" y="1589" width="0.1114%" height="15" fill="rgb(235,163,25)" fg:x="34262" fg:w="61"/><text x="62.8050%" y="1599.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,108 samples, 3.85%)</title><rect x="58.8249%" y="1925" width="3.8488%" height="15" fill="rgb(217,145,28)" fg:x="32219" fg:w="2108"/><text x="59.0749%" y="1935.50">&lt;ray..</text></g><g><title>start_thread (2,109 samples, 3.85%)</title><rect x="58.8249%" y="2053" width="3.8506%" height="15" fill="rgb(223,223,32)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="2063.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,109 samples, 3.85%)</title><rect x="58.8249%" y="2037" width="3.8506%" height="15" fill="rgb(227,189,39)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="2047.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,109 samples, 3.85%)</title><rect x="58.8249%" y="2021" width="3.8506%" height="15" fill="rgb(248,10,22)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="2031.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,109 samples, 3.85%)</title><rect x="58.8249%" y="2005" width="3.8506%" height="15" fill="rgb(248,46,39)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="2015.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,109 samples, 3.85%)</title><rect x="58.8249%" y="1989" width="3.8506%" height="15" fill="rgb(248,113,48)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="1999.50">core..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,109 samples, 3.85%)</title><rect x="58.8249%" y="1973" width="3.8506%" height="15" fill="rgb(245,16,25)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="1983.50">std:..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (2,109 samples, 3.85%)</title><rect x="58.8249%" y="1957" width="3.8506%" height="15" fill="rgb(249,152,16)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="1967.50">rayo..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,109 samples, 3.85%)</title><rect x="58.8249%" y="1941" width="3.8506%" height="15" fill="rgb(250,16,1)" fg:x="32219" fg:w="2109"/><text x="59.0749%" y="1951.50">rayo..</text></g><g><title>__alloc_pages_nodemask (8 samples, 0.01%)</title><rect x="62.6901%" y="1973" width="0.0146%" height="15" fill="rgb(249,138,3)" fg:x="34336" fg:w="8"/><text x="62.9401%" y="1983.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.01%)</title><rect x="62.6901%" y="1957" width="0.0146%" height="15" fill="rgb(227,71,41)" fg:x="34336" fg:w="8"/><text x="62.9401%" y="1967.50"></text></g><g><title>handle_mm_fault (13 samples, 0.02%)</title><rect x="62.6865%" y="1989" width="0.0237%" height="15" fill="rgb(209,184,23)" fg:x="34334" fg:w="13"/><text x="62.9365%" y="1999.50"></text></g><g><title>sysmalloc (21 samples, 0.04%)</title><rect x="62.6773%" y="2053" width="0.0383%" height="15" fill="rgb(223,215,31)" fg:x="34329" fg:w="21"/><text x="62.9273%" y="2063.50"></text></g><g><title>asm_exc_page_fault (20 samples, 0.04%)</title><rect x="62.6792%" y="2037" width="0.0365%" height="15" fill="rgb(210,146,28)" fg:x="34330" fg:w="20"/><text x="62.9292%" y="2047.50"></text></g><g><title>exc_page_fault (20 samples, 0.04%)</title><rect x="62.6792%" y="2021" width="0.0365%" height="15" fill="rgb(209,183,41)" fg:x="34330" fg:w="20"/><text x="62.9292%" y="2031.50"></text></g><g><title>do_user_addr_fault (20 samples, 0.04%)</title><rect x="62.6792%" y="2005" width="0.0365%" height="15" fill="rgb(209,224,45)" fg:x="34330" fg:w="20"/><text x="62.9292%" y="2015.50"></text></g><g><title>parallel_write_ (11,926 samples, 21.77%)</title><rect x="40.9450%" y="2069" width="21.7743%" height="15" fill="rgb(224,209,51)" fg:x="22426" fg:w="11926"/><text x="41.1950%" y="2079.50">parallel_write_</text></g><g><title>fsnotify (35 samples, 0.06%)</title><rect x="62.7504%" y="1829" width="0.0639%" height="15" fill="rgb(223,17,39)" fg:x="34369" fg:w="35"/><text x="63.0004%" y="1839.50"></text></g><g><title>inotify_handle_inode_event (33 samples, 0.06%)</title><rect x="62.7540%" y="1813" width="0.0603%" height="15" fill="rgb(234,204,37)" fg:x="34371" fg:w="33"/><text x="63.0040%" y="1823.50"></text></g><g><title>fsnotify_add_event (30 samples, 0.05%)</title><rect x="62.7595%" y="1797" width="0.0548%" height="15" fill="rgb(236,120,5)" fg:x="34374" fg:w="30"/><text x="63.0095%" y="1807.50"></text></g><g><title>__wake_up_common_lock (30 samples, 0.05%)</title><rect x="62.7595%" y="1781" width="0.0548%" height="15" fill="rgb(248,97,27)" fg:x="34374" fg:w="30"/><text x="63.0095%" y="1791.50"></text></g><g><title>__lock_text_start (30 samples, 0.05%)</title><rect x="62.7595%" y="1765" width="0.0548%" height="15" fill="rgb(240,66,17)" fg:x="34374" fg:w="30"/><text x="63.0095%" y="1775.50"></text></g><g><title>__fsnotify_parent (38 samples, 0.07%)</title><rect x="62.7467%" y="1845" width="0.0694%" height="15" fill="rgb(210,79,3)" fg:x="34367" fg:w="38"/><text x="62.9967%" y="1855.50"></text></g><g><title>ext4_da_get_block_prep (13 samples, 0.02%)</title><rect x="62.8508%" y="1749" width="0.0237%" height="15" fill="rgb(214,176,27)" fg:x="34424" fg:w="13"/><text x="63.1008%" y="1759.50"></text></g><g><title>__block_write_begin_int (34 samples, 0.06%)</title><rect x="62.8435%" y="1765" width="0.0621%" height="15" fill="rgb(235,185,3)" fg:x="34420" fg:w="34"/><text x="63.0935%" y="1775.50"></text></g><g><title>memset_erms (17 samples, 0.03%)</title><rect x="62.8745%" y="1749" width="0.0310%" height="15" fill="rgb(227,24,12)" fg:x="34437" fg:w="17"/><text x="63.1245%" y="1759.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.02%)</title><rect x="62.9147%" y="1733" width="0.0164%" height="15" fill="rgb(252,169,48)" fg:x="34459" fg:w="9"/><text x="63.1647%" y="1743.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.01%)</title><rect x="62.9165%" y="1717" width="0.0146%" height="15" fill="rgb(212,65,1)" fg:x="34460" fg:w="8"/><text x="63.1665%" y="1727.50"></text></g><g><title>__add_to_page_cache_locked (11 samples, 0.02%)</title><rect x="62.9329%" y="1717" width="0.0201%" height="15" fill="rgb(242,39,24)" fg:x="34469" fg:w="11"/><text x="63.1829%" y="1727.50"></text></g><g><title>add_to_page_cache_lru (18 samples, 0.03%)</title><rect x="62.9311%" y="1733" width="0.0329%" height="15" fill="rgb(249,32,23)" fg:x="34468" fg:w="18"/><text x="63.1811%" y="1743.50"></text></g><g><title>lru_cache_add (6 samples, 0.01%)</title><rect x="62.9530%" y="1717" width="0.0110%" height="15" fill="rgb(251,195,23)" fg:x="34480" fg:w="6"/><text x="63.2030%" y="1727.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.01%)</title><rect x="62.9530%" y="1701" width="0.0110%" height="15" fill="rgb(236,174,8)" fg:x="34480" fg:w="6"/><text x="63.2030%" y="1711.50"></text></g><g><title>ext4_da_write_begin (72 samples, 0.13%)</title><rect x="62.8398%" y="1781" width="0.1315%" height="15" fill="rgb(220,197,8)" fg:x="34418" fg:w="72"/><text x="63.0898%" y="1791.50"></text></g><g><title>grab_cache_page_write_begin (31 samples, 0.06%)</title><rect x="62.9147%" y="1765" width="0.0566%" height="15" fill="rgb(240,108,37)" fg:x="34459" fg:w="31"/><text x="63.1647%" y="1775.50"></text></g><g><title>pagecache_get_page (31 samples, 0.06%)</title><rect x="62.9147%" y="1749" width="0.0566%" height="15" fill="rgb(232,176,24)" fg:x="34459" fg:w="31"/><text x="63.1647%" y="1759.50"></text></g><g><title>ext4_inode_csum_set (19 samples, 0.03%)</title><rect x="62.9804%" y="1685" width="0.0347%" height="15" fill="rgb(243,35,29)" fg:x="34495" fg:w="19"/><text x="63.2304%" y="1695.50"></text></g><g><title>ext4_inode_csum.isra.0 (19 samples, 0.03%)</title><rect x="62.9804%" y="1669" width="0.0347%" height="15" fill="rgb(210,37,18)" fg:x="34495" fg:w="19"/><text x="63.2304%" y="1679.50"></text></g><g><title>chksum_update (16 samples, 0.03%)</title><rect x="62.9859%" y="1653" width="0.0292%" height="15" fill="rgb(224,184,40)" fg:x="34498" fg:w="16"/><text x="63.2359%" y="1663.50"></text></g><g><title>__crc32c_le (14 samples, 0.03%)</title><rect x="62.9895%" y="1637" width="0.0256%" height="15" fill="rgb(236,39,29)" fg:x="34500" fg:w="14"/><text x="63.2395%" y="1647.50"></text></g><g><title>ext4_mark_iloc_dirty (23 samples, 0.04%)</title><rect x="62.9749%" y="1701" width="0.0420%" height="15" fill="rgb(232,48,39)" fg:x="34492" fg:w="23"/><text x="63.2249%" y="1711.50"></text></g><g><title>__mark_inode_dirty (26 samples, 0.05%)</title><rect x="62.9731%" y="1749" width="0.0475%" height="15" fill="rgb(236,34,42)" fg:x="34491" fg:w="26"/><text x="63.2231%" y="1759.50"></text></g><g><title>ext4_dirty_inode (25 samples, 0.05%)</title><rect x="62.9749%" y="1733" width="0.0456%" height="15" fill="rgb(243,106,37)" fg:x="34492" fg:w="25"/><text x="63.2249%" y="1743.50"></text></g><g><title>__ext4_mark_inode_dirty (25 samples, 0.05%)</title><rect x="62.9749%" y="1717" width="0.0456%" height="15" fill="rgb(218,96,6)" fg:x="34492" fg:w="25"/><text x="63.2249%" y="1727.50"></text></g><g><title>ext4_da_write_end (40 samples, 0.07%)</title><rect x="62.9713%" y="1781" width="0.0730%" height="15" fill="rgb(235,130,12)" fg:x="34490" fg:w="40"/><text x="63.2213%" y="1791.50"></text></g><g><title>generic_write_end (39 samples, 0.07%)</title><rect x="62.9731%" y="1765" width="0.0712%" height="15" fill="rgb(231,95,0)" fg:x="34491" fg:w="39"/><text x="63.2231%" y="1775.50"></text></g><g><title>block_write_end (13 samples, 0.02%)</title><rect x="63.0206%" y="1749" width="0.0237%" height="15" fill="rgb(228,12,23)" fg:x="34517" fg:w="13"/><text x="63.2706%" y="1759.50"></text></g><g><title>__block_commit_write.isra.0 (13 samples, 0.02%)</title><rect x="63.0206%" y="1733" width="0.0237%" height="15" fill="rgb(216,12,1)" fg:x="34517" fg:w="13"/><text x="63.2706%" y="1743.50"></text></g><g><title>mark_buffer_dirty (7 samples, 0.01%)</title><rect x="63.0315%" y="1717" width="0.0128%" height="15" fill="rgb(219,59,3)" fg:x="34523" fg:w="7"/><text x="63.2815%" y="1727.50"></text></g><g><title>iov_iter_copy_from_user_atomic (83 samples, 0.15%)</title><rect x="63.0443%" y="1781" width="0.1515%" height="15" fill="rgb(215,208,46)" fg:x="34530" fg:w="83"/><text x="63.2943%" y="1791.50"></text></g><g><title>copyin (81 samples, 0.15%)</title><rect x="63.0480%" y="1765" width="0.1479%" height="15" fill="rgb(254,224,29)" fg:x="34532" fg:w="81"/><text x="63.2980%" y="1775.50"></text></g><g><title>copy_user_enhanced_fast_string (81 samples, 0.15%)</title><rect x="63.0480%" y="1749" width="0.1479%" height="15" fill="rgb(232,14,29)" fg:x="34532" fg:w="81"/><text x="63.2980%" y="1759.50"></text></g><g><title>new_sync_write (229 samples, 0.42%)</title><rect x="62.8161%" y="1845" width="0.4181%" height="15" fill="rgb(208,45,52)" fg:x="34405" fg:w="229"/><text x="63.0661%" y="1855.50"></text></g><g><title>ext4_file_write_iter (229 samples, 0.42%)</title><rect x="62.8161%" y="1829" width="0.4181%" height="15" fill="rgb(234,191,28)" fg:x="34405" fg:w="229"/><text x="63.0661%" y="1839.50"></text></g><g><title>ext4_buffered_write_iter (228 samples, 0.42%)</title><rect x="62.8179%" y="1813" width="0.4163%" height="15" fill="rgb(244,67,43)" fg:x="34406" fg:w="228"/><text x="63.0679%" y="1823.50"></text></g><g><title>generic_perform_write (220 samples, 0.40%)</title><rect x="62.8325%" y="1797" width="0.4017%" height="15" fill="rgb(236,189,24)" fg:x="34414" fg:w="220"/><text x="63.0825%" y="1807.50"></text></g><g><title>iov_iter_fault_in_readable (21 samples, 0.04%)</title><rect x="63.1959%" y="1781" width="0.0383%" height="15" fill="rgb(239,214,33)" fg:x="34613" fg:w="21"/><text x="63.4459%" y="1791.50"></text></g><g><title>__get_user_nocheck_1 (21 samples, 0.04%)</title><rect x="63.1959%" y="1765" width="0.0383%" height="15" fill="rgb(226,176,41)" fg:x="34613" fg:w="21"/><text x="63.4459%" y="1775.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="63.2232%" y="1749" width="0.0110%" height="15" fill="rgb(248,47,8)" fg:x="34628" fg:w="6"/><text x="63.4732%" y="1759.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="63.2232%" y="1733" width="0.0110%" height="15" fill="rgb(218,81,44)" fg:x="34628" fg:w="6"/><text x="63.4732%" y="1743.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="63.2232%" y="1717" width="0.0110%" height="15" fill="rgb(213,98,6)" fg:x="34628" fg:w="6"/><text x="63.4732%" y="1727.50"></text></g><g><title>[perf] (274 samples, 0.50%)</title><rect x="62.7358%" y="1957" width="0.5003%" height="15" fill="rgb(222,85,22)" fg:x="34361" fg:w="274"/><text x="62.9858%" y="1967.50"></text></g><g><title>__GI___libc_write (273 samples, 0.50%)</title><rect x="62.7376%" y="1941" width="0.4984%" height="15" fill="rgb(239,46,39)" fg:x="34362" fg:w="273"/><text x="62.9876%" y="1951.50"></text></g><g><title>__GI___libc_write (273 samples, 0.50%)</title><rect x="62.7376%" y="1925" width="0.4984%" height="15" fill="rgb(237,12,29)" fg:x="34362" fg:w="273"/><text x="62.9876%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (270 samples, 0.49%)</title><rect x="62.7431%" y="1909" width="0.4930%" height="15" fill="rgb(214,77,8)" fg:x="34365" fg:w="270"/><text x="62.9931%" y="1919.50"></text></g><g><title>do_syscall_64 (270 samples, 0.49%)</title><rect x="62.7431%" y="1893" width="0.4930%" height="15" fill="rgb(217,168,37)" fg:x="34365" fg:w="270"/><text x="62.9931%" y="1903.50"></text></g><g><title>ksys_write (270 samples, 0.49%)</title><rect x="62.7431%" y="1877" width="0.4930%" height="15" fill="rgb(221,217,23)" fg:x="34365" fg:w="270"/><text x="62.9931%" y="1887.50"></text></g><g><title>vfs_write (269 samples, 0.49%)</title><rect x="62.7449%" y="1861" width="0.4911%" height="15" fill="rgb(243,229,36)" fg:x="34366" fg:w="269"/><text x="62.9949%" y="1871.50"></text></g><g><title>[perf] (284 samples, 0.52%)</title><rect x="62.7248%" y="2005" width="0.5185%" height="15" fill="rgb(251,163,40)" fg:x="34355" fg:w="284"/><text x="62.9748%" y="2015.50"></text></g><g><title>[perf] (281 samples, 0.51%)</title><rect x="62.7303%" y="1989" width="0.5130%" height="15" fill="rgb(237,222,12)" fg:x="34358" fg:w="281"/><text x="62.9803%" y="1999.50"></text></g><g><title>[perf] (281 samples, 0.51%)</title><rect x="62.7303%" y="1973" width="0.5130%" height="15" fill="rgb(248,132,6)" fg:x="34358" fg:w="281"/><text x="62.9803%" y="1983.50"></text></g><g><title>perf_poll (8 samples, 0.01%)</title><rect x="63.2598%" y="1925" width="0.0146%" height="15" fill="rgb(227,167,50)" fg:x="34648" fg:w="8"/><text x="63.5098%" y="1935.50"></text></g><g><title>do_syscall_64 (24 samples, 0.04%)</title><rect x="63.2433%" y="1973" width="0.0438%" height="15" fill="rgb(242,84,37)" fg:x="34639" fg:w="24"/><text x="63.4933%" y="1983.50"></text></g><g><title>__x64_sys_poll (24 samples, 0.04%)</title><rect x="63.2433%" y="1957" width="0.0438%" height="15" fill="rgb(212,4,50)" fg:x="34639" fg:w="24"/><text x="63.4933%" y="1967.50"></text></g><g><title>do_sys_poll (24 samples, 0.04%)</title><rect x="63.2433%" y="1941" width="0.0438%" height="15" fill="rgb(230,228,32)" fg:x="34639" fg:w="24"/><text x="63.4933%" y="1951.50"></text></g><g><title>poll_schedule_timeout.constprop.0 (6 samples, 0.01%)</title><rect x="63.2762%" y="1925" width="0.0110%" height="15" fill="rgb(248,217,23)" fg:x="34657" fg:w="6"/><text x="63.5262%" y="1935.50"></text></g><g><title>schedule_hrtimeout_range_clock (6 samples, 0.01%)</title><rect x="63.2762%" y="1909" width="0.0110%" height="15" fill="rgb(238,197,32)" fg:x="34657" fg:w="6"/><text x="63.5262%" y="1919.50"></text></g><g><title>schedule (6 samples, 0.01%)</title><rect x="63.2762%" y="1893" width="0.0110%" height="15" fill="rgb(236,106,1)" fg:x="34657" fg:w="6"/><text x="63.5262%" y="1903.50"></text></g><g><title>__sched_text_start (6 samples, 0.01%)</title><rect x="63.2762%" y="1877" width="0.0110%" height="15" fill="rgb(219,228,13)" fg:x="34657" fg:w="6"/><text x="63.5262%" y="1887.50"></text></g><g><title>perf (312 samples, 0.57%)</title><rect x="62.7193%" y="2069" width="0.5696%" height="15" fill="rgb(238,30,35)" fg:x="34352" fg:w="312"/><text x="62.9693%" y="2079.50"></text></g><g><title>[unknown] (312 samples, 0.57%)</title><rect x="62.7193%" y="2053" width="0.5696%" height="15" fill="rgb(236,70,23)" fg:x="34352" fg:w="312"/><text x="62.9693%" y="2063.50"></text></g><g><title>[perf] (312 samples, 0.57%)</title><rect x="62.7193%" y="2037" width="0.5696%" height="15" fill="rgb(249,104,48)" fg:x="34352" fg:w="312"/><text x="62.9693%" y="2047.50"></text></g><g><title>[perf] (312 samples, 0.57%)</title><rect x="62.7193%" y="2021" width="0.5696%" height="15" fill="rgb(254,117,50)" fg:x="34352" fg:w="312"/><text x="62.9693%" y="2031.50"></text></g><g><title>__GI___poll (25 samples, 0.05%)</title><rect x="63.2433%" y="2005" width="0.0456%" height="15" fill="rgb(223,152,4)" fg:x="34639" fg:w="25"/><text x="63.4933%" y="2015.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.05%)</title><rect x="63.2433%" y="1989" width="0.0456%" height="15" fill="rgb(245,6,2)" fg:x="34639" fg:w="25"/><text x="63.4933%" y="1999.50"></text></g><g><title>mpage_map_and_submit_buffers (7 samples, 0.01%)</title><rect x="63.3364%" y="1877" width="0.0128%" height="15" fill="rgb(249,150,24)" fg:x="34690" fg:w="7"/><text x="63.5864%" y="1887.50"></text></g><g><title>ret_from_fork (22 samples, 0.04%)</title><rect x="63.3127%" y="2053" width="0.0402%" height="15" fill="rgb(228,185,42)" fg:x="34677" fg:w="22"/><text x="63.5627%" y="2063.50"></text></g><g><title>kthread (22 samples, 0.04%)</title><rect x="63.3127%" y="2037" width="0.0402%" height="15" fill="rgb(226,39,33)" fg:x="34677" fg:w="22"/><text x="63.5627%" y="2047.50"></text></g><g><title>worker_thread (19 samples, 0.03%)</title><rect x="63.3182%" y="2021" width="0.0347%" height="15" fill="rgb(221,166,19)" fg:x="34680" fg:w="19"/><text x="63.5682%" y="2031.50"></text></g><g><title>process_one_work (19 samples, 0.03%)</title><rect x="63.3182%" y="2005" width="0.0347%" height="15" fill="rgb(209,109,2)" fg:x="34680" fg:w="19"/><text x="63.5682%" y="2015.50"></text></g><g><title>wb_workfn (13 samples, 0.02%)</title><rect x="63.3291%" y="1989" width="0.0237%" height="15" fill="rgb(252,216,26)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1999.50"></text></g><g><title>wb_writeback (13 samples, 0.02%)</title><rect x="63.3291%" y="1973" width="0.0237%" height="15" fill="rgb(227,173,36)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1983.50"></text></g><g><title>__writeback_inodes_wb (13 samples, 0.02%)</title><rect x="63.3291%" y="1957" width="0.0237%" height="15" fill="rgb(209,90,7)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1967.50"></text></g><g><title>writeback_sb_inodes (13 samples, 0.02%)</title><rect x="63.3291%" y="1941" width="0.0237%" height="15" fill="rgb(250,194,11)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1951.50"></text></g><g><title>__writeback_single_inode (13 samples, 0.02%)</title><rect x="63.3291%" y="1925" width="0.0237%" height="15" fill="rgb(220,72,50)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1935.50"></text></g><g><title>do_writepages (13 samples, 0.02%)</title><rect x="63.3291%" y="1909" width="0.0237%" height="15" fill="rgb(222,106,48)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1919.50"></text></g><g><title>ext4_writepages (13 samples, 0.02%)</title><rect x="63.3291%" y="1893" width="0.0237%" height="15" fill="rgb(216,220,45)" fg:x="34686" fg:w="13"/><text x="63.5791%" y="1903.50"></text></g><g><title>default_idle_call (18,394 samples, 33.58%)</title><rect x="63.3547%" y="2005" width="33.5835%" height="15" fill="rgb(234,112,18)" fg:x="34700" fg:w="18394"/><text x="63.6047%" y="2015.50">default_idle_call</text></g><g><title>default_idle (18,393 samples, 33.58%)</title><rect x="63.3565%" y="1989" width="33.5816%" height="15" fill="rgb(206,179,9)" fg:x="34701" fg:w="18393"/><text x="63.6065%" y="1999.50">default_idle</text></g><g><title>schedule_idle (8 samples, 0.01%)</title><rect x="96.9418%" y="2005" width="0.0146%" height="15" fill="rgb(215,115,40)" fg:x="53096" fg:w="8"/><text x="97.1918%" y="2015.50"></text></g><g><title>__sched_text_start (8 samples, 0.01%)</title><rect x="96.9418%" y="1989" width="0.0146%" height="15" fill="rgb(222,69,34)" fg:x="53096" fg:w="8"/><text x="97.1918%" y="1999.50"></text></g><g><title>finish_task_switch (7 samples, 0.01%)</title><rect x="96.9436%" y="1973" width="0.0128%" height="15" fill="rgb(209,161,10)" fg:x="53097" fg:w="7"/><text x="97.1936%" y="1983.50"></text></g><g><title>cpu_startup_entry (18,417 samples, 33.63%)</title><rect x="63.3529%" y="2037" width="33.6255%" height="15" fill="rgb(217,6,38)" fg:x="34699" fg:w="18417"/><text x="63.6029%" y="2047.50">cpu_startup_entry</text></g><g><title>do_idle (18,417 samples, 33.63%)</title><rect x="63.3529%" y="2021" width="33.6255%" height="15" fill="rgb(229,229,48)" fg:x="34699" fg:w="18417"/><text x="63.6029%" y="2031.50">do_idle</text></g><g><title>tick_nohz_idle_exit (11 samples, 0.02%)</title><rect x="96.9582%" y="2005" width="0.0201%" height="15" fill="rgb(225,21,28)" fg:x="53105" fg:w="11"/><text x="97.2082%" y="2015.50"></text></g><g><title>asm_sysvec_call_function_single (18 samples, 0.03%)</title><rect x="99.9489%" y="1957" width="0.0329%" height="15" fill="rgb(206,33,13)" fg:x="54743" fg:w="18"/><text x="100.1989%" y="1967.50"></text></g><g><title>sysvec_call_function_single (18 samples, 0.03%)</title><rect x="99.9489%" y="1941" width="0.0329%" height="15" fill="rgb(242,178,17)" fg:x="54743" fg:w="18"/><text x="100.1989%" y="1951.50"></text></g><g><title>irq_exit_rcu (18 samples, 0.03%)</title><rect x="99.9489%" y="1925" width="0.0329%" height="15" fill="rgb(220,162,5)" fg:x="54743" fg:w="18"/><text x="100.1989%" y="1935.50"></text></g><g><title>do_softirq_own_stack (18 samples, 0.03%)</title><rect x="99.9489%" y="1909" width="0.0329%" height="15" fill="rgb(210,33,43)" fg:x="54743" fg:w="18"/><text x="100.1989%" y="1919.50"></text></g><g><title>asm_call_sysvec_on_stack (18 samples, 0.03%)</title><rect x="99.9489%" y="1893" width="0.0329%" height="15" fill="rgb(216,116,54)" fg:x="54743" fg:w="18"/><text x="100.1989%" y="1903.50"></text></g><g><title>__softirqentry_text_start (18 samples, 0.03%)</title><rect x="99.9489%" y="1877" width="0.0329%" height="15" fill="rgb(249,92,24)" fg:x="54743" fg:w="18"/><text x="100.1989%" y="1887.50"></text></g><g><title>default_idle_call (1,652 samples, 3.02%)</title><rect x="96.9783%" y="1989" width="3.0162%" height="15" fill="rgb(231,189,14)" fg:x="53116" fg:w="1652"/><text x="97.2283%" y="1999.50">def..</text></g><g><title>default_idle (1,652 samples, 3.02%)</title><rect x="96.9783%" y="1973" width="3.0162%" height="15" fill="rgb(230,8,41)" fg:x="53116" fg:w="1652"/><text x="97.2283%" y="1983.50">def..</text></g><g><title>asm_sysvec_hyperv_callback (7 samples, 0.01%)</title><rect x="99.9817%" y="1957" width="0.0128%" height="15" fill="rgb(249,7,27)" fg:x="54761" fg:w="7"/><text x="100.2317%" y="1967.50"></text></g><g><title>sysvec_hyperv_callback (7 samples, 0.01%)</title><rect x="99.9817%" y="1941" width="0.0128%" height="15" fill="rgb(232,86,5)" fg:x="54761" fg:w="7"/><text x="100.2317%" y="1951.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.01%)</title><rect x="99.9817%" y="1925" width="0.0128%" height="15" fill="rgb(224,175,18)" fg:x="54761" fg:w="7"/><text x="100.2317%" y="1935.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.01%)</title><rect x="99.9817%" y="1909" width="0.0128%" height="15" fill="rgb(220,129,12)" fg:x="54761" fg:w="7"/><text x="100.2317%" y="1919.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.01%)</title><rect x="99.9817%" y="1893" width="0.0128%" height="15" fill="rgb(210,19,36)" fg:x="54761" fg:w="7"/><text x="100.2317%" y="1903.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.01%)</title><rect x="99.9817%" y="1877" width="0.0128%" height="15" fill="rgb(219,96,14)" fg:x="54761" fg:w="7"/><text x="100.2317%" y="1887.50"></text></g><g><title>swapper (20,093 samples, 36.69%)</title><rect x="63.3109%" y="2069" width="36.6855%" height="15" fill="rgb(249,106,1)" fg:x="34676" fg:w="20093"/><text x="63.5609%" y="2079.50">swapper</text></g><g><title>secondary_startup_64_no_verify (20,070 samples, 36.64%)</title><rect x="63.3529%" y="2053" width="36.6435%" height="15" fill="rgb(249,155,20)" fg:x="34699" fg:w="20070"/><text x="63.6029%" y="2063.50">secondary_startup_64_no_verify</text></g><g><title>start_kernel (1,653 samples, 3.02%)</title><rect x="96.9783%" y="2037" width="3.0180%" height="15" fill="rgb(244,168,9)" fg:x="53116" fg:w="1653"/><text x="97.2283%" y="2047.50">sta..</text></g><g><title>cpu_startup_entry (1,653 samples, 3.02%)</title><rect x="96.9783%" y="2021" width="3.0180%" height="15" fill="rgb(216,23,50)" fg:x="53116" fg:w="1653"/><text x="97.2283%" y="2031.50">cpu..</text></g><g><title>do_idle (1,653 samples, 3.02%)</title><rect x="96.9783%" y="2005" width="3.0180%" height="15" fill="rgb(224,219,20)" fg:x="53116" fg:w="1653"/><text x="97.2283%" y="2015.50">do_..</text></g><g><title>all (54,771 samples, 100%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(222,156,15)" fg:x="0" fg:w="54771"/><text x="0.2500%" y="2095.50"></text></g></svg></svg>